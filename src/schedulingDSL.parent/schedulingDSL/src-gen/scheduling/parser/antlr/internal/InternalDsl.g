/*
 * generated by Xtext 2.10.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package scheduling.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package scheduling.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import scheduling.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getGenGenDSLParserRuleCall_0_0());
				}
				lv_gen_0_0=ruleGenDSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"gen",
						lv_gen_0_0,
						"scheduling.Dsl.GenDSL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getProcessconfigProcessConfigurationParserRuleCall_1_0());
				}
				lv_processconfig_1_0=ruleProcessConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"processconfig",
						lv_processconfig_1_0,
						"scheduling.Dsl.ProcessConfiguration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getProcProcessDSLParserRuleCall_2_0());
				}
				lv_proc_2_0=ruleProcessDSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"proc",
						lv_proc_2_0,
						"scheduling.Dsl.ProcessDSL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSchSchedulerDSLParserRuleCall_3_0());
				}
				lv_sch_3_0=ruleSchedulerDSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"sch",
						lv_sch_3_0,
						"scheduling.Dsl.SchedulerDSL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getTestTestDSLParserRuleCall_4_0());
				}
				lv_test_4_0=ruleTestDSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"test",
						lv_test_4_0,
						"scheduling.Dsl.TestDSL");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGenDSL
entryRuleGenDSL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenDSLRule()); }
	iv_ruleGenDSL=ruleGenDSL
	{ $current=$iv_ruleGenDSL.current; }
	EOF;

// Rule GenDSL
ruleGenDSL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGenDSLAccess().getGenGenerateParserRuleCall_0_0());
				}
				lv_gen_0_0=ruleGenerate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenDSLRule());
					}
					set(
						$current,
						"gen",
						lv_gen_0_0,
						"scheduling.Dsl.Generate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGenDSLAccess().getFunctionInterfaceDefParserRuleCall_1_0());
				}
				lv_function_1_0=ruleInterfaceDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenDSLRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"scheduling.Dsl.InterfaceDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getGenDSLAccess().getIsrISRParserRuleCall_2_0());
				}
				lv_isr_2_0=ruleISR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenDSLRule());
					}
					set(
						$current,
						"isr",
						lv_isr_2_0,
						"scheduling.Dsl.ISR");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleISR
entryRuleISR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getISRRule()); }
	iv_ruleISR=ruleISR
	{ $current=$iv_ruleISR.current; }
	EOF;

// Rule ISR
ruleISR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ISR'
		{
			newLeafNode(otherlv_0, grammarAccess.getISRAccess().getISRKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getISRAccess().getElementElementParserRuleCall_1_0());
				}
				lv_element_1_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getISRRule());
					}
					set(
						$current,
						"element",
						lv_element_1_0,
						"scheduling.Dsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getISRAccess().getInKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getISRAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_start_4_0=RULE_INT
				{
					newLeafNode(lv_start_4_0, grammarAccess.getISRAccess().getStartINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getISRRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getISRAccess().getCommaKeyword_5());
		}
		(
			(
				lv_end_6_0=RULE_INT
				{
					newLeafNode(lv_end_6_0, grammarAccess.getISRAccess().getEndINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getISRRule());
					}
					setWithLastConsumed(
						$current,
						"end",
						lv_end_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getISRAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_8='limited'
			{
				newLeafNode(otherlv_8, grammarAccess.getISRAccess().getLimitedKeyword_8_0());
			}
			(
				(
					lv_max_9_0=RULE_INT
					{
						newLeafNode(lv_max_9_0, grammarAccess.getISRAccess().getMaxINTTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getISRRule());
						}
						setWithLastConsumed(
							$current,
							"max",
							lv_max_9_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_10=';'
		{
			newLeafNode(otherlv_10, grammarAccess.getISRAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleTestDSL
entryRuleTestDSL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestDSLRule()); }
	iv_ruleTestDSL=ruleTestDSL
	{ $current=$iv_ruleTestDSL.current; }
	EOF;

// Rule TestDSL
ruleTestDSL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getTestDSLAccess().getSystemKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTestDSLAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTestDSLAccess().getSpecificationSpecificationParserRuleCall_2_0());
				}
				lv_specification_2_0=ruleSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestDSLRule());
					}
					set(
						$current,
						"specification",
						lv_specification_2_0,
						"scheduling.Dsl.Specification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTestDSLAccess().getConfigsConfigsParserRuleCall_3_0());
				}
				lv_configs_3_0=ruleConfigs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestDSLRule());
					}
					set(
						$current,
						"configs",
						lv_configs_3_0,
						"scheduling.Dsl.Configs");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTestDSLAccess().getScenariosScenariosParserRuleCall_4_0_0());
					}
					lv_scenarios_4_0=ruleScenarios
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTestDSLRule());
						}
						set(
							$current,
							"scenarios",
							lv_scenarios_4_0,
							"scheduling.Dsl.Scenarios");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getTestDSLAccess().getPermutationPermutationParserRuleCall_4_1_0());
					}
					lv_permutation_5_0=rulePermutation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTestDSLRule());
						}
						set(
							$current,
							"permutation",
							lv_permutation_5_0,
							"scheduling.Dsl.Permutation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTestDSLAccess().getRuleRulesParserRuleCall_5_0());
				}
				lv_rule_6_0=ruleRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestDSLRule());
					}
					set(
						$current,
						"rule",
						lv_rule_6_0,
						"scheduling.Dsl.Rules");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTestDSLAccess().getVerifyVerifyParserRuleCall_6_0());
				}
				lv_verify_7_0=ruleVerify
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestDSLRule());
					}
					set(
						$current,
						"verify",
						lv_verify_7_0,
						"scheduling.Dsl.Verify");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getTestDSLAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleConfigs
entryRuleConfigs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigsRule()); }
	iv_ruleConfigs=ruleConfigs
	{ $current=$iv_ruleConfigs.current; }
	EOF;

// Rule Configs
ruleConfigs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigsAccess().getConfigsAction_0(),
					$current);
			}
		)
		otherlv_1='configuration'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigsAccess().getConfigurationKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigsAccess().getConfigConfigParserRuleCall_3_0());
				}
				lv_config_3_0=ruleConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigsRule());
					}
					add(
						$current,
						"config",
						lv_config_3_0,
						"scheduling.Dsl.Config");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getConfigsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	iv_ruleConfig=ruleConfig
	{ $current=$iv_ruleConfig.current; }
	EOF;

// Rule Config
ruleConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigAccess().getConfigConfigurationParserRuleCall_1_0());
				}
				lv_config_1_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigRule());
					}
					set(
						$current,
						"config",
						lv_config_1_0,
						"scheduling.Dsl.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigurationAccess().getConfigurationAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getVarVarInitParserRuleCall_2_0());
				}
				lv_var_2_0=ruleVarInit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"var",
						lv_var_2_0,
						"scheduling.Dsl.VarInit");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getCollectionCollectionInitParserRuleCall_3_0());
				}
				lv_collection_3_0=ruleCollectionInit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"collection",
						lv_collection_3_0,
						"scheduling.Dsl.CollectionInit");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					lv_proc_4_0=RULE_ID
					{
						newLeafNode(lv_proc_4_0, grammarAccess.getConfigurationAccess().getProcIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigurationRule());
						}
						setWithLastConsumed(
							$current,
							"proc",
							lv_proc_4_0,
							"scheduling.Dsl.ID");
					}
				)
			)
			otherlv_5='='
			{
				newLeafNode(otherlv_5, grammarAccess.getConfigurationAccess().getEqualsSignKeyword_4_1());
			}
			(
				(
					(
						lv_nul_6_0='null'
						{
							newLeafNode(lv_nul_6_0, grammarAccess.getConfigurationAccess().getNulNullKeyword_4_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConfigurationRule());
							}
							setWithLastConsumed($current, "nul", lv_nul_6_0, "null");
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getConfigurationAccess().getElementElementParserRuleCall_4_2_1_0());
						}
						lv_element_7_0=ruleElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConfigurationRule());
							}
							set(
								$current,
								"element",
								lv_element_7_0,
								"scheduling.Dsl.Element");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getConfigurationAccess().getSemicolonKeyword_4_3());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleVarInit
entryRuleVarInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarInitRule()); }
	iv_ruleVarInit=ruleVarInit
	{ $current=$iv_ruleVarInit.current; }
	EOF;

// Rule VarInit
ruleVarInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_varName_0_0=RULE_ID
				{
					newLeafNode(lv_varName_0_0, grammarAccess.getVarInitAccess().getVarNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarInitRule());
					}
					setWithLastConsumed(
						$current,
						"varName",
						lv_varName_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getVarInitAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarInitAccess().getValValueParserRuleCall_2_0());
				}
				lv_val_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarInitRule());
					}
					set(
						$current,
						"val",
						lv_val_2_0,
						"scheduling.Dsl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getVarInitAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleCollectionInit
entryRuleCollectionInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionInitRule()); }
	iv_ruleCollectionInit=ruleCollectionInit
	{ $current=$iv_ruleCollectionInit.current; }
	EOF;

// Rule CollectionInit
ruleCollectionInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionInitAccess().getColNameSchedulerSetParserRuleCall_0_0());
				}
				lv_colName_0_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionInitRule());
					}
					set(
						$current,
						"colName",
						lv_colName_0_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getCollectionInitAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCollectionInitAccess().getSetSetParserRuleCall_2_0_0());
					}
					lv_set_2_0=ruleSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCollectionInitRule());
						}
						set(
							$current,
							"set",
							lv_set_2_0,
							"scheduling.Dsl.Set");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_empty_3_0='empty'
					{
						newLeafNode(lv_empty_3_0, grammarAccess.getCollectionInitAccess().getEmptyEmptyKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCollectionInitRule());
						}
						setWithLastConsumed($current, "empty", lv_empty_3_0, "empty");
					}
				)
			)
			    |
			(
				(
					lv_full_4_0='full'
					{
						newLeafNode(lv_full_4_0, grammarAccess.getCollectionInitAccess().getFullFullKeyword_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCollectionInitRule());
						}
						setWithLastConsumed($current, "full", lv_full_4_0, "full");
					}
				)
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getCollectionInitAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleScenarios
entryRuleScenarios returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenariosRule()); }
	iv_ruleScenarios=ruleScenarios
	{ $current=$iv_ruleScenarios.current; }
	EOF;

// Rule Scenarios
ruleScenarios returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getScenariosAccess().getScenariosAction_0(),
					$current);
			}
		)
		otherlv_1='scenario'
		{
			newLeafNode(otherlv_1, grammarAccess.getScenariosAccess().getScenarioKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getScenariosAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenariosAccess().getFlowFlowParserRuleCall_3_0());
				}
				lv_flow_3_0=ruleFlow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenariosRule());
					}
					add(
						$current,
						"flow",
						lv_flow_3_0,
						"scheduling.Dsl.Flow");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getScenariosAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePermutation
entryRulePermutation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPermutationRule()); }
	iv_rulePermutation=rulePermutation
	{ $current=$iv_rulePermutation.current; }
	EOF;

// Rule Permutation
rulePermutation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='scenario'
		{
			newLeafNode(otherlv_0, grammarAccess.getPermutationAccess().getScenarioKeyword_0());
		}
		otherlv_1='permutation'
		{
			newLeafNode(otherlv_1, grammarAccess.getPermutationAccess().getPermutationKeyword_1());
		}
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getPermutationAccess().getWithKeyword_2());
		}
		otherlv_3='step'
		{
			newLeafNode(otherlv_3, grammarAccess.getPermutationAccess().getStepKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getPermutationAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_step_5_0=RULE_INT
				{
					newLeafNode(lv_step_5_0, grammarAccess.getPermutationAccess().getStepINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPermutationRule());
					}
					setWithLastConsumed(
						$current,
						"step",
						lv_step_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getPermutationAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleFlow
entryRuleFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlowRule()); }
	iv_ruleFlow=ruleFlow
	{ $current=$iv_ruleFlow.current; }
	EOF;

// Rule Flow
ruleFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFlowAccess().getEventENAMEParserRuleCall_0_0());
				}
				lv_event_0_0=ruleENAME
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFlowRule());
					}
					add(
						$current,
						"event",
						lv_event_0_0,
						"scheduling.Dsl.ENAME");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='->'
			{
				newLeafNode(otherlv_1, grammarAccess.getFlowAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFlowAccess().getEventENAMEParserRuleCall_1_1_0());
					}
					lv_event_2_0=ruleENAME
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFlowRule());
						}
						add(
							$current,
							"event",
							lv_event_2_0,
							"scheduling.Dsl.ENAME");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getFlowAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleENAME
entryRuleENAME returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getENAMERule()); }
	iv_ruleENAME=ruleENAME
	{ $current=$iv_ruleENAME.current; }
	EOF;

// Rule ENAME
ruleENAME returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getENAMEAccess().getElabelELABELParserRuleCall_0_0());
				}
				lv_elabel_0_0=ruleELABEL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getENAMERule());
					}
					set(
						$current,
						"elabel",
						lv_elabel_0_0,
						"scheduling.Dsl.ELABEL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getENAMEAccess().getScheventnameEventNameEnumRuleCall_1_0());
				}
				lv_scheventname_1_0=ruleEventName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getENAMERule());
					}
					set(
						$current,
						"scheventname",
						lv_scheventname_1_0,
						"scheduling.Dsl.EventName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRules
entryRuleRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRulesRule()); }
	iv_ruleRules=ruleRules
	{ $current=$iv_ruleRules.current; }
	EOF;

// Rule Rules
ruleRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRulesAccess().getRulesAction_0(),
					$current);
			}
		)
		otherlv_1='rule'
		{
			newLeafNode(otherlv_1, grammarAccess.getRulesAccess().getRuleKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRulesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRulesAccess().getRRuleParserRuleCall_3_0());
				}
				lv_r_3_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulesRule());
					}
					add(
						$current,
						"r",
						lv_r_3_0,
						"scheduling.Dsl.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getRulesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_rulename_0_0=RULE_ID
				{
					newLeafNode(lv_rulename_0_0, grammarAccess.getRuleAccess().getRulenameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
					setWithLastConsumed(
						$current,
						"rulename",
						lv_rulename_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='when'
		{
			newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getWhenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getEnameENAMEParserRuleCall_3_0());
				}
				lv_ename_3_0=ruleENAME
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"ename",
						lv_ename_3_0,
						"scheduling.Dsl.ENAME");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='where'
			{
				newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getWhereKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getPremiseConditionParserRuleCall_4_1_0());
					}
					lv_premise_5_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						set(
							$current,
							"premise",
							lv_premise_5_0,
							"scheduling.Dsl.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='then'
		{
			newLeafNode(otherlv_6, grammarAccess.getRuleAccess().getThenKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getConcludeConditionParserRuleCall_6_0());
				}
				lv_conclude_7_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"conclude",
						lv_conclude_7_0,
						"scheduling.Dsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConditionAccess().getExprOrParserRuleCall_0());
			}
			lv_expr_0_0=ruleOr
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConditionRule());
				}
				set(
					$current,
					"expr",
					lv_expr_0_0,
					"scheduling.Dsl.Or");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSpecification
entryRuleSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecificationRule()); }
	iv_ruleSpecification=ruleSpecification
	{ $current=$iv_ruleSpecification.current; }
	EOF;

// Rule Specification
ruleSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpecificationAccess().getSpecificationAction_0(),
					$current);
			}
		)
		otherlv_1='specification'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpecificationAccess().getSpecificationKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpecificationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getDecl_lstDeclareListParserRuleCall_3_0());
				}
				lv_decl_lst_3_0=ruleDeclareList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					set(
						$current,
						"decl_lst",
						lv_decl_lst_3_0,
						"scheduling.Dsl.DeclareList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getDefineDefineParserRuleCall_4_0());
				}
				lv_define_4_0=ruleDefine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					set(
						$current,
						"define",
						lv_define_4_0,
						"scheduling.Dsl.Define");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getEventDeclareEventParserRuleCall_5_0());
				}
				lv_event_5_0=ruleDeclareEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					add(
						$current,
						"event",
						lv_event_5_0,
						"scheduling.Dsl.DeclareEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSpecificationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDeclareList
entryRuleDeclareList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclareListRule()); }
	iv_ruleDeclareList=ruleDeclareList
	{ $current=$iv_ruleDeclareList.current; }
	EOF;

// Rule DeclareList
ruleDeclareList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclareListAccess().getDecOneDecParserRuleCall_0_0());
				}
				lv_dec_0_0=ruleOneDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclareListRule());
					}
					add(
						$current,
						"dec",
						lv_dec_0_0,
						"scheduling.Dsl.OneDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getDeclareListAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclareListAccess().getDecOneDecParserRuleCall_1_1_0());
					}
					lv_dec_2_0=ruleOneDec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclareListRule());
						}
						add(
							$current,
							"dec",
							lv_dec_2_0,
							"scheduling.Dsl.OneDec");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeclareListAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleOneDec
entryRuleOneDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneDecRule()); }
	iv_ruleOneDec=ruleOneDec
	{ $current=$iv_ruleOneDec.current; }
	EOF;

// Rule OneDec
ruleOneDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOneDecAccess().getConstConstDecParserRuleCall_0_0());
				}
				lv_const_0_0=ruleConstDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneDecRule());
					}
					set(
						$current,
						"const",
						lv_const_0_0,
						"scheduling.Dsl.ConstDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOneDecAccess().getVarVarDecParserRuleCall_1_0());
				}
				lv_var_1_0=ruleVarDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneDecRule());
					}
					set(
						$current,
						"var",
						lv_var_1_0,
						"scheduling.Dsl.VarDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOneDecAccess().getEnumdecEnumDecParserRuleCall_2_0());
				}
				lv_enumdec_2_0=ruleEnumDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneDecRule());
					}
					set(
						$current,
						"enumdec",
						lv_enumdec_2_0,
						"scheduling.Dsl.EnumDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumDec
entryRuleEnumDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumDecRule()); }
	iv_ruleEnumDec=ruleEnumDec
	{ $current=$iv_ruleEnumDec.current; }
	EOF;

// Rule EnumDec
ruleEnumDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enumtype'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumDecAccess().getEnumtypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDecAccess().getTypeEnumTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleEnumType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDecRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"scheduling.Dsl.EnumType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumDecAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumDecAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				lv_enumele_4_0=RULE_ID
				{
					newLeafNode(lv_enumele_4_0, grammarAccess.getEnumDecAccess().getEnumeleIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDecRule());
					}
					addWithLastConsumed(
						$current,
						"enumele",
						lv_enumele_4_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getEnumDecAccess().getCommaKeyword_5_0());
			}
			(
				(
					lv_enumele_6_0=RULE_ID
					{
						newLeafNode(lv_enumele_6_0, grammarAccess.getEnumDecAccess().getEnumeleIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumDecRule());
						}
						addWithLastConsumed(
							$current,
							"enumele",
							lv_enumele_6_0,
							"scheduling.Dsl.ID");
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getEnumDecAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEnumType
entryRuleEnumType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumTypeRule()); }
	iv_ruleEnumType=ruleEnumType
	{ $current=$iv_ruleEnumType.current; }
	EOF;

// Rule EnumType
ruleEnumType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEnumTypeAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEnumTypeRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleConstDec
entryRuleConstDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstDecRule()); }
	iv_ruleConstDec=ruleConstDec
	{ $current=$iv_ruleConstDec.current; }
	EOF;

// Rule ConstDec
ruleConstDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='const'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstDecAccess().getConstKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConstDecAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstDecRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getConstDecAccess().getEqualsSignKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstDecAccess().getBvalueBoolValueParserRuleCall_3_0_0());
					}
					lv_bvalue_3_0=ruleBoolValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstDecRule());
						}
						set(
							$current,
							"bvalue",
							lv_bvalue_3_0,
							"scheduling.Dsl.BoolValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConstDecAccess().getIvalueNumValueParserRuleCall_3_1_0());
					}
					lv_ivalue_4_0=ruleNumValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstDecRule());
						}
						set(
							$current,
							"ivalue",
							lv_ivalue_4_0,
							"scheduling.Dsl.NumValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleVarDec
entryRuleVarDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDecRule()); }
	iv_ruleVarDec=ruleVarDec
	{ $current=$iv_ruleVarDec.current; }
	EOF;

// Rule VarDec
ruleVarDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDecAccess().getTypeTypeNameEnumRuleCall_0_0_0());
					}
					lv_type_0_0=ruleTypeName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDecRule());
						}
						set(
							$current,
							"type",
							lv_type_0_0,
							"scheduling.Dsl.TypeName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarDecRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getVarDecAccess().getEnumtypeEnumTypeCrossReference_0_1_0());
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDecAccess().getNameVDecParserRuleCall_1_0());
				}
				lv_name_2_0=ruleVDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDecRule());
					}
					add(
						$current,
						"name",
						lv_name_2_0,
						"scheduling.Dsl.VDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getVarDecAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDecAccess().getNameVDecParserRuleCall_2_1_0());
					}
					lv_name_4_0=ruleVDec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDecRule());
						}
						add(
							$current,
							"name",
							lv_name_4_0,
							"scheduling.Dsl.VDec");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleVDec
entryRuleVDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVDecRule()); }
	iv_ruleVDec=ruleVDec
	{ $current=$iv_ruleVDec.current; }
	EOF;

// Rule VDec
ruleVDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getVDecAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVDecRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		(
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getVDecAccess().getEqualsSignKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVDecAccess().getBvalueBoolValueParserRuleCall_1_1_0_0());
						}
						lv_bvalue_2_0=ruleBoolValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVDecRule());
							}
							set(
								$current,
								"bvalue",
								lv_bvalue_2_0,
								"scheduling.Dsl.BoolValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getVDecAccess().getIvalueNumValueParserRuleCall_1_1_1_0());
						}
						lv_ivalue_3_0=ruleNumValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVDecRule());
							}
							set(
								$current,
								"ivalue",
								lv_ivalue_3_0,
								"scheduling.Dsl.NumValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleDefine
entryRuleDefine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineRule()); }
	iv_ruleDefine=ruleDefine
	{ $current=$iv_ruleDefine.current; }
	EOF;

// Rule Define
ruleDefine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDefineAccess().getDefineAction_0(),
					$current);
			}
		)
		otherlv_1='define'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefineAccess().getDefineKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefineAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineAccess().getReflistRefListParserRuleCall_3_0());
				}
				lv_reflist_3_0=ruleRefList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineRule());
					}
					add(
						$current,
						"reflist",
						lv_reflist_3_0,
						"scheduling.Dsl.RefList");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineAccess().getFunctionFunctionParserRuleCall_4_0());
				}
				lv_function_4_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineRule());
					}
					add(
						$current,
						"function",
						lv_function_4_0,
						"scheduling.Dsl.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDefineAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRefList
entryRuleRefList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefListRule()); }
	iv_ruleRefList=ruleRefList
	{ $current=$iv_ruleRefList.current; }
	EOF;

// Rule RefList
ruleRefList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRefListAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefListRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getRefListAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getRefListAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRefListAccess().getItemRefListItemParserRuleCall_3_0());
				}
				lv_item_3_0=ruleRefListItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRefListRule());
					}
					add(
						$current,
						"item",
						lv_item_3_0,
						"scheduling.Dsl.RefListItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getRefListAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRefListAccess().getItemRefListItemParserRuleCall_4_1_0());
					}
					lv_item_5_0=ruleRefListItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRefListRule());
						}
						add(
							$current,
							"item",
							lv_item_5_0,
							"scheduling.Dsl.RefListItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getRefListAccess().getRightSquareBracketKeyword_5());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getRefListAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getFuncparaFuncParaParserRuleCall_2_0());
				}
				lv_funcpara_2_0=ruleFuncPara
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"funcpara",
						lv_funcpara_2_0,
						"scheduling.Dsl.FuncPara");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getSequenceSequenceActionParserRuleCall_5_0());
				}
				lv_sequence_5_0=ruleSequenceAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"sequence",
						lv_sequence_5_0,
						"scheduling.Dsl.SequenceAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRefListItem
entryRuleRefListItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefListItemRule()); }
	iv_ruleRefListItem=ruleRefListItem
	{ $current=$iv_ruleRefListItem.current; }
	EOF;

// Rule RefListItem
ruleRefListItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRefListItemAccess().getBvalueBoolValueParserRuleCall_0_0());
				}
				lv_bvalue_0_0=ruleBoolValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRefListItemRule());
					}
					set(
						$current,
						"bvalue",
						lv_bvalue_0_0,
						"scheduling.Dsl.BoolValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getRefListItemAccess().getIvalueNumValueParserRuleCall_1_0());
				}
				lv_ivalue_1_0=ruleNumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRefListItemRule());
					}
					set(
						$current,
						"ivalue",
						lv_ivalue_1_0,
						"scheduling.Dsl.NumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_id_2_0=RULE_ID
				{
					newLeafNode(lv_id_2_0, grammarAccess.getRefListItemAccess().getIdIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefListItemRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_2_0,
						"scheduling.Dsl.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFuncPara
entryRuleFuncPara returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncParaRule()); }
	iv_ruleFuncPara=ruleFuncPara
	{ $current=$iv_ruleFuncPara.current; }
	EOF;

// Rule FuncPara
ruleFuncPara returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_para_0_0=RULE_ID
				{
					newLeafNode(lv_para_0_0, grammarAccess.getFuncParaAccess().getParaIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncParaRule());
					}
					addWithLastConsumed(
						$current,
						"para",
						lv_para_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getFuncParaAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_para_2_0=RULE_ID
					{
						newLeafNode(lv_para_2_0, grammarAccess.getFuncParaAccess().getParaIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFuncParaRule());
						}
						addWithLastConsumed(
							$current,
							"para",
							lv_para_2_0,
							"scheduling.Dsl.ID");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDeclareEvent
entryRuleDeclareEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclareEventRule()); }
	iv_ruleDeclareEvent=ruleDeclareEvent
	{ $current=$iv_ruleDeclareEvent.current; }
	EOF;

// Rule DeclareEvent
ruleDeclareEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDeclareEventAccess().getEventEventParserRuleCall_0());
			}
			lv_event_0_0=ruleEvent
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDeclareEventRule());
				}
				set(
					$current,
					"event",
					lv_event_0_0,
					"scheduling.Dsl.Event");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='event'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventAccess().getEventKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventAccess().getElabelELABELParserRuleCall_1_0());
				}
				lv_elabel_1_0=ruleELABEL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventRule());
					}
					set(
						$current,
						"elabel",
						lv_elabel_1_0,
						"scheduling.Dsl.ELABEL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='when'
			{
				newLeafNode(otherlv_3, grammarAccess.getEventAccess().getWhenKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventAccess().getGuardExpressionParserRuleCall_3_1_0());
					}
					lv_guard_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventRule());
						}
						set(
							$current,
							"guard",
							lv_guard_4_0,
							"scheduling.Dsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='then'
			{
				newLeafNode(otherlv_5, grammarAccess.getEventAccess().getThenKeyword_3_2());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEventAccess().getSequenceSequenceActionParserRuleCall_4_0_0());
					}
					lv_sequence_6_0=ruleSequenceAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventRule());
						}
						set(
							$current,
							"sequence",
							lv_sequence_6_0,
							"scheduling.Dsl.SequenceAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getEventAccess().getEventfunctionEventFunctionParserRuleCall_4_1_0());
					}
					lv_eventfunction_7_0=ruleEventFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventRule());
						}
						set(
							$current,
							"eventfunction",
							lv_eventfunction_7_0,
							"scheduling.Dsl.EventFunction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getEventAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEventFunction
entryRuleEventFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventFunctionRule()); }
	iv_ruleEventFunction=ruleEventFunction
	{ $current=$iv_ruleEventFunction.current; }
	EOF;

// Rule EventFunction
ruleEventFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEventFunctionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEventFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventFunctionAccess().getFuncparaParaListItemParserRuleCall_2_0());
				}
				lv_funcpara_2_0=ruleParaListItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventFunctionRule());
					}
					set(
						$current,
						"funcpara",
						lv_funcpara_2_0,
						"scheduling.Dsl.ParaListItem");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getEventFunctionAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getEventFunctionAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleParaListItem
entryRuleParaListItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParaListItemRule()); }
	iv_ruleParaListItem=ruleParaListItem
	{ $current=$iv_ruleParaListItem.current; }
	EOF;

// Rule ParaListItem
ruleParaListItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParaListItemAccess().getItemRefListItemParserRuleCall_0_0());
				}
				lv_item_0_0=ruleRefListItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParaListItemRule());
					}
					add(
						$current,
						"item",
						lv_item_0_0,
						"scheduling.Dsl.RefListItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getParaListItemAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParaListItemAccess().getItemRefListItemParserRuleCall_1_1_0());
					}
					lv_item_2_0=ruleRefListItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParaListItemRule());
						}
						add(
							$current,
							"item",
							lv_item_2_0,
							"scheduling.Dsl.RefListItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleELABEL
entryRuleELABEL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getELABELRule()); }
	iv_ruleELABEL=ruleELABEL
	{ $current=$iv_ruleELABEL.current; }
	EOF;

// Rule ELABEL
ruleELABEL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_label_0_0=RULE_ID
			{
				newLeafNode(lv_label_0_0, grammarAccess.getELABELAccess().getLabelIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getELABELRule());
				}
				setWithLastConsumed(
					$current,
					"label",
					lv_label_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleSequenceAction
entryRuleSequenceAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceActionRule()); }
	iv_ruleSequenceAction=ruleSequenceAction
	{ $current=$iv_ruleSequenceAction.current; }
	EOF;

// Rule SequenceAction
ruleSequenceAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceActionAccess().getActionActionParserRuleCall_0_0());
				}
				lv_action_0_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceActionRule());
					}
					add(
						$current,
						"action",
						lv_action_0_0,
						"scheduling.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceActionAccess().getActionActionParserRuleCall_1_0());
				}
				lv_action_1_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceActionRule());
					}
					add(
						$current,
						"action",
						lv_action_1_0,
						"scheduling.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getIFsParserRuleCall_0());
		}
		this_IFs_0=ruleIFs
		{
			$current = $this_IFs_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getASSIGNParserRuleCall_1());
		}
		this_ASSIGN_1=ruleASSIGN
		{
			$current = $this_ASSIGN_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getSKIPParserRuleCall_2());
		}
		this_SKIP_2=ruleSKIP
		{
			$current = $this_SKIP_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getGUARDParserRuleCall_3());
		}
		this_GUARD_3=ruleGUARD
		{
			$current = $this_GUARD_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGUARD
entryRuleGUARD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGUARDRule()); }
	iv_ruleGUARD=ruleGUARD
	{ $current=$iv_ruleGUARD.current; }
	EOF;

// Rule GUARD
ruleGUARD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGUARDAccess().getExprExpressionParserRuleCall_0_0());
				}
				lv_expr_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGUARDRule());
					}
					set(
						$current,
						"expr",
						lv_expr_0_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getGUARDAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGUARDAccess().getSequenceActionParserRuleCall_2_0());
				}
				lv_sequence_2_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGUARDRule());
					}
					set(
						$current,
						"sequence",
						lv_sequence_2_0,
						"scheduling.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIFs
entryRuleIFs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIFsRule()); }
	iv_ruleIFs=ruleIFs
	{ $current=$iv_ruleIFs.current; }
	EOF;

// Rule IFs
ruleIFs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIFsAccess().getIFsAction_0(),
					$current);
			}
		)
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getIFsAccess().getIfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIFsAccess().getOptionOptionsParserRuleCall_2_0());
				}
				lv_option_2_0=ruleOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIFsRule());
					}
					set(
						$current,
						"option",
						lv_option_2_0,
						"scheduling.Dsl.Options");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='fi'
		{
			newLeafNode(otherlv_3, grammarAccess.getIFsAccess().getFiKeyword_3());
		}
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getIFsAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleASSIGN
entryRuleASSIGN returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getASSIGNRule()); }
	iv_ruleASSIGN=ruleASSIGN
	{ $current=$iv_ruleASSIGN.current; }
	EOF;

// Rule ASSIGN
ruleASSIGN returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getASSIGNAccess().getChangeValueParserRuleCall());
	}
	this_ChangeValue_0=ruleChangeValue
	{
		$current = $this_ChangeValue_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOptions
entryRuleOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionsRule()); }
	iv_ruleOptions=ruleOptions
	{ $current=$iv_ruleOptions.current; }
	EOF;

// Rule Options
ruleOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='::'
		{
			newLeafNode(otherlv_0, grammarAccess.getOptionsAccess().getColonColonKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOptionsAccess().getSequenceSequenceActionParserRuleCall_1_0());
				}
				lv_sequence_1_0=ruleSequenceAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOptionsRule());
					}
					add(
						$current,
						"sequence",
						lv_sequence_1_0,
						"scheduling.Dsl.SequenceAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='::'
			{
				newLeafNode(otherlv_2, grammarAccess.getOptionsAccess().getColonColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionsAccess().getSequenceSequenceActionParserRuleCall_2_1_0());
					}
					lv_sequence_3_0=ruleSequenceAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionsRule());
						}
						add(
							$current,
							"sequence",
							lv_sequence_3_0,
							"scheduling.Dsl.SequenceAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4='::'
			{
				newLeafNode(otherlv_4, grammarAccess.getOptionsAccess().getColonColonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionsAccess().getElsesELSEsParserRuleCall_3_1_0());
					}
					lv_elses_5_0=ruleELSEs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionsRule());
						}
						set(
							$current,
							"elses",
							lv_elses_5_0,
							"scheduling.Dsl.ELSEs");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleELSEs
entryRuleELSEs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getELSEsRule()); }
	iv_ruleELSEs=ruleELSEs
	{ $current=$iv_ruleELSEs.current; }
	EOF;

// Rule ELSEs
ruleELSEs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='else'
		{
			newLeafNode(otherlv_0, grammarAccess.getELSEsAccess().getElseKeyword_0());
		}
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getELSEsAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getELSEsAccess().getSequenceActionParserRuleCall_2_0());
				}
				lv_sequence_2_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getELSEsRule());
					}
					set(
						$current,
						"sequence",
						lv_sequence_2_0,
						"scheduling.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSKIP
entryRuleSKIP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSKIPRule()); }
	iv_ruleSKIP=ruleSKIP
	{ $current=$iv_ruleSKIP.current; }
	EOF;

// Rule SKIP
ruleSKIP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSKIPAccess().getSKIPAction_0(),
					$current);
			}
		)
		otherlv_1='skip'
		{
			newLeafNode(otherlv_1, grammarAccess.getSKIPAccess().getSkipKeyword_1());
		}
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getSKIPAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleProcessConfiguration
entryRuleProcessConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessConfigurationRule()); }
	iv_ruleProcessConfiguration=ruleProcessConfiguration
	{ $current=$iv_ruleProcessConfiguration.current; }
	EOF;

// Rule ProcessConfiguration
ruleProcessConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='process'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessConfigurationAccess().getProcessKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProcessConfigurationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		(
			otherlv_2='refines'
			{
				newLeafNode(otherlv_2, grammarAccess.getProcessConfigurationAccess().getRefinesKeyword_2_0());
			}
			(
				(
					lv_parent_3_0=RULE_ID
					{
						newLeafNode(lv_parent_3_0, grammarAccess.getProcessConfigurationAccess().getParentIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcessConfigurationRule());
						}
						setWithLastConsumed(
							$current,
							"parent",
							lv_parent_3_0,
							"scheduling.Dsl.ID");
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getProcessConfigurationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessConfigurationAccess().getAttributeAttributeParserRuleCall_4_0());
				}
				lv_attribute_5_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessConfigurationRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_5_0,
						"scheduling.Dsl.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessConfigurationAccess().getDefbehaviorprocDefBehaviorProcParserRuleCall_5_0());
				}
				lv_defbehaviorproc_6_0=ruleDefBehaviorProc
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessConfigurationRule());
					}
					set(
						$current,
						"defbehaviorproc",
						lv_defbehaviorproc_6_0,
						"scheduling.Dsl.DefBehaviorProc");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getProcessConfigurationAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='configuration'
		{
			newLeafNode(otherlv_8, grammarAccess.getProcessConfigurationAccess().getConfigurationKeyword_7());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getProcessConfigurationAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessConfigurationAccess().getProcessconfigProcessConfigParserRuleCall_9_0());
				}
				lv_processconfig_10_0=ruleProcessConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessConfigurationRule());
					}
					set(
						$current,
						"processconfig",
						lv_processconfig_10_0,
						"scheduling.Dsl.ProcessConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessConfigurationAccess().getProcessinitProcessInitParserRuleCall_10_0());
				}
				lv_processinit_11_0=ruleProcessInit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessConfigurationRule());
					}
					set(
						$current,
						"processinit",
						lv_processinit_11_0,
						"scheduling.Dsl.ProcessInit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getProcessConfigurationAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleDefBehaviorProc
entryRuleDefBehaviorProc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefBehaviorProcRule()); }
	iv_ruleDefBehaviorProc=ruleDefBehaviorProc
	{ $current=$iv_ruleDefBehaviorProc.current; }
	EOF;

// Rule DefBehaviorProc
ruleDefBehaviorProc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDefBehaviorProcAccess().getProcessbehaviorsProcessBehaviorsParserRuleCall_0_0());
				}
				lv_processbehaviors_0_0=ruleProcessBehaviors
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefBehaviorProcRule());
					}
					set(
						$current,
						"processbehaviors",
						lv_processbehaviors_0_0,
						"scheduling.Dsl.ProcessBehaviors");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDefBehaviorProcAccess().getProctypeProcTypeParserRuleCall_1_0());
				}
				lv_proctype_1_0=ruleProcType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefBehaviorProcRule());
					}
					set(
						$current,
						"proctype",
						lv_proctype_1_0,
						"scheduling.Dsl.ProcType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProcType
entryRuleProcType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcTypeRule()); }
	iv_ruleProcType=ruleProcType
	{ $current=$iv_ruleProcType.current; }
	EOF;

// Rule ProcType
ruleProcType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProcTypeAccess().getProcTypeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcTypeAccess().getProctypeProcessTypeParserRuleCall_1_0());
				}
				lv_proctype_1_0=ruleProcessType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcTypeRule());
					}
					add(
						$current,
						"proctype",
						lv_proctype_1_0,
						"scheduling.Dsl.ProcessType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleProcessType
entryRuleProcessType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessTypeRule()); }
	iv_ruleProcessType=ruleProcessType
	{ $current=$iv_ruleProcessType.current; }
	EOF;

// Rule ProcessType
ruleProcessType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='proctype'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessTypeAccess().getProctypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProcessTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessTypeAccess().getConstraintsConstraintsParserRuleCall_3_0());
				}
				lv_constraints_3_0=ruleConstraints
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessTypeRule());
					}
					set(
						$current,
						"constraints",
						lv_constraints_3_0,
						"scheduling.Dsl.Constraints");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessTypeAccess().getProcessbehaviorProcessBehaviorParserRuleCall_4_0());
				}
				lv_processbehavior_4_0=ruleProcessBehavior
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessTypeRule());
					}
					add(
						$current,
						"processbehavior",
						lv_processbehavior_4_0,
						"scheduling.Dsl.ProcessBehavior");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getProcessTypeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeAccess().getAttributeAction_0(),
					$current);
			}
		)
		otherlv_1='attribute'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getAttributeKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getAttAttDefParserRuleCall_3_0());
				}
				lv_att_3_0=ruleAttDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					add(
						$current,
						"att",
						lv_att_3_0,
						"scheduling.Dsl.AttDef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getConstraintsConstraintsParserRuleCall_4_0());
				}
				lv_constraints_4_0=ruleConstraints
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"constraints",
						lv_constraints_4_0,
						"scheduling.Dsl.Constraints");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAttDef
entryRuleAttDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttDefRule()); }
	iv_ruleAttDef=ruleAttDef
	{ $current=$iv_ruleAttDef.current; }
	EOF;

// Rule AttDef
ruleAttDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttDefAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttDefAccess().getColonKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttDefAccess().getTypeKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getAttDefAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttDefAccess().getTypeVariableTypeEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttDefRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"scheduling.Dsl.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAttDefAccess().getCommaKeyword_5_0());
			}
			otherlv_6='value'
			{
				newLeafNode(otherlv_6, grammarAccess.getAttDefAccess().getValueKeyword_5_1());
			}
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getAttDefAccess().getEqualsSignKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttDefAccess().getListListDefParserRuleCall_5_3_0());
					}
					lv_list_8_0=ruleListDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttDefRule());
						}
						set(
							$current,
							"list",
							lv_list_8_0,
							"scheduling.Dsl.ListDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getAttDefAccess().getCommaKeyword_6());
		}
		otherlv_10='default'
		{
			newLeafNode(otherlv_10, grammarAccess.getAttDefAccess().getDefaultKeyword_7());
		}
		otherlv_11='='
		{
			newLeafNode(otherlv_11, grammarAccess.getAttDefAccess().getEqualsSignKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttDefAccess().getDefaultValueParserRuleCall_9_0());
				}
				lv_default_12_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttDefRule());
					}
					set(
						$current,
						"default",
						lv_default_12_0,
						"scheduling.Dsl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=';'
		{
			newLeafNode(otherlv_13, grammarAccess.getAttDefAccess().getSemicolonKeyword_10());
		}
	)
;

// Entry rule entryRuleConstraints
entryRuleConstraints returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintsRule()); }
	iv_ruleConstraints=ruleConstraints
	{ $current=$iv_ruleConstraints.current; }
	EOF;

// Rule Constraints
ruleConstraints returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstraintsAccess().getConstraintsAction_0(),
					$current);
			}
		)
		otherlv_1='constraint'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstraintsAccess().getConstraintKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConstraintsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintsAccess().getConstraintConstraintParserRuleCall_3_0());
				}
				lv_constraint_3_0=ruleConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintsRule());
					}
					add(
						$current,
						"constraint",
						lv_constraint_3_0,
						"scheduling.Dsl.Constraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getConstraintsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintAccess().getConditionConditionParserRuleCall_0_0());
				}
				lv_condition_0_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintRule());
					}
					set(
						$current,
						"condition",
						lv_condition_0_0,
						"scheduling.Dsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstraintAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleProcessBehaviors
entryRuleProcessBehaviors returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessBehaviorsRule()); }
	iv_ruleProcessBehaviors=ruleProcessBehaviors
	{ $current=$iv_ruleProcessBehaviors.current; }
	EOF;

// Rule ProcessBehaviors
ruleProcessBehaviors returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProcessBehaviorsAccess().getProcessBehaviorsAction_0(),
					$current);
			}
		)
		otherlv_1='behavior'
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessBehaviorsAccess().getBehaviorKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessBehaviorsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessBehaviorsAccess().getProcessbehaviorProcessBehaviorParserRuleCall_3_0());
				}
				lv_processbehavior_3_0=ruleProcessBehavior
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessBehaviorsRule());
					}
					add(
						$current,
						"processbehavior",
						lv_processbehavior_3_0,
						"scheduling.Dsl.ProcessBehavior");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getProcessBehaviorsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleProcessBehavior
entryRuleProcessBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessBehaviorRule()); }
	iv_ruleProcessBehavior=ruleProcessBehavior
	{ $current=$iv_ruleProcessBehavior.current; }
	EOF;

// Rule ProcessBehavior
ruleProcessBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessBehaviorAccess().getConstructorConstructorParserRuleCall_0_0());
				}
				lv_constructor_0_0=ruleConstructor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessBehaviorRule());
					}
					set(
						$current,
						"constructor",
						lv_constructor_0_0,
						"scheduling.Dsl.Constructor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessBehaviorAccess().getMethodMethodParserRuleCall_1_0());
				}
				lv_method_1_0=ruleMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessBehaviorRule());
					}
					set(
						$current,
						"method",
						lv_method_1_0,
						"scheduling.Dsl.Method");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstructor
entryRuleConstructor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorRule()); }
	iv_ruleConstructor=ruleConstructor
	{ $current=$iv_ruleConstructor.current; }
	EOF;

// Rule Constructor
ruleConstructor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='constructor'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstructorAccess().getConstructorKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstructorAccess().getColonKeyword_1());
		}
		(
			(
				lv_processname_2_0=RULE_ID
				{
					newLeafNode(lv_processname_2_0, grammarAccess.getConstructorAccess().getProcessnameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstructorRule());
					}
					setWithLastConsumed(
						$current,
						"processname",
						lv_processname_2_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorAccess().getParalistParameterListParserRuleCall_4_0());
				}
				lv_paralist_4_0=ruleParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorRule());
					}
					set(
						$current,
						"paralist",
						lv_paralist_4_0,
						"scheduling.Dsl.ParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getConstructorAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getConstructorAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	iv_ruleMethod=ruleMethod
	{ $current=$iv_ruleMethod.current; }
	EOF;

// Rule Method
ruleMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='method'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethodAccess().getMethodKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getFunctionnameFunctionNameParserRuleCall_2_0());
				}
				lv_functionname_2_0=ruleFunctionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					set(
						$current,
						"functionname",
						lv_functionname_2_0,
						"scheduling.Dsl.FunctionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_3_0_0());
				}
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getMethodAccess().getRightParenthesisKeyword_3_0_1());
				}
				otherlv_5=';'
				{
					newLeafNode(otherlv_5, grammarAccess.getMethodAccess().getSemicolonKeyword_3_0_2());
				}
			)
			    |
			(
				otherlv_6='('
				{
					newLeafNode(otherlv_6, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAccess().getParameterlistInterfaceParameterListParserRuleCall_3_1_1_0());
						}
						lv_parameterlist_7_0=ruleInterfaceParameterList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodRule());
							}
							set(
								$current,
								"parameterlist",
								lv_parameterlist_7_0,
								"scheduling.Dsl.InterfaceParameterList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8=')'
				{
					newLeafNode(otherlv_8, grammarAccess.getMethodAccess().getRightParenthesisKeyword_3_1_2());
				}
				otherlv_9='{'
				{
					newLeafNode(otherlv_9, grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_3_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAccess().getAssignparametersAssignParametersParserRuleCall_3_1_4_0());
						}
						lv_assignparameters_10_0=ruleAssignParameters
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodRule());
							}
							add(
								$current,
								"assignparameters",
								lv_assignparameters_10_0,
								"scheduling.Dsl.AssignParameters");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAccess().getConstraintsConstraintsParserRuleCall_3_1_5_0());
						}
						lv_constraints_11_0=ruleConstraints
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodRule());
							}
							set(
								$current,
								"constraints",
								lv_constraints_11_0,
								"scheduling.Dsl.Constraints");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_12='}'
				{
					newLeafNode(otherlv_12, grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_3_1_6());
				}
			)
		)
	)
;

// Entry rule entryRuleAssignParameters
entryRuleAssignParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignParametersRule()); }
	iv_ruleAssignParameters=ruleAssignParameters
	{ $current=$iv_ruleAssignParameters.current; }
	EOF;

// Rule AssignParameters
ruleAssignParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_paraname_0_0=RULE_ID
				{
					newLeafNode(lv_paraname_0_0, grammarAccess.getAssignParametersAccess().getParanameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignParametersRule());
					}
					setWithLastConsumed(
						$current,
						"paraname",
						lv_paraname_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignParametersAccess().getColonKeyword_1());
		}
		otherlv_2='value'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssignParametersAccess().getValueKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getAssignParametersAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignParametersAccess().getListListDefParserRuleCall_4_0());
				}
				lv_list_4_0=ruleListDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignParametersRule());
					}
					set(
						$current,
						"list",
						lv_list_4_0,
						"scheduling.Dsl.ListDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getAssignParametersAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleProcessDSL
entryRuleProcessDSL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessDSLRule()); }
	iv_ruleProcessDSL=ruleProcessDSL
	{ $current=$iv_ruleProcessDSL.current; }
	EOF;

// Rule ProcessDSL
ruleProcessDSL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProcessDSLAccess().getProcessDSLAction_0(),
					$current);
			}
		)
		otherlv_1='def'
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessDSLAccess().getDefKeyword_1());
		}
		otherlv_2='process'
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessDSLAccess().getProcessKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getProcessDSLAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessDSLRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		(
			otherlv_4='refines'
			{
				newLeafNode(otherlv_4, grammarAccess.getProcessDSLAccess().getRefinesKeyword_4_0());
			}
			(
				(
					lv_parent_5_0=RULE_ID
					{
						newLeafNode(lv_parent_5_0, grammarAccess.getProcessDSLAccess().getParentIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcessDSLRule());
						}
						setWithLastConsumed(
							$current,
							"parent",
							lv_parent_5_0,
							"scheduling.Dsl.ID");
					}
				)
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getProcessDSLAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDSLAccess().getProcessdataProcessDataDefParserRuleCall_6_0());
				}
				lv_processdata_7_0=ruleProcessDataDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDSLRule());
					}
					set(
						$current,
						"processdata",
						lv_processdata_7_0,
						"scheduling.Dsl.ProcessDataDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDSLAccess().getConstraintsConstraintsParserRuleCall_7_0());
				}
				lv_constraints_8_0=ruleConstraints
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDSLRule());
					}
					set(
						$current,
						"constraints",
						lv_constraints_8_0,
						"scheduling.Dsl.Constraints");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDSLAccess().getProcessProcessDefParserRuleCall_8_0());
				}
				lv_process_9_0=ruleProcessDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDSLRule());
					}
					add(
						$current,
						"process",
						lv_process_9_0,
						"scheduling.Dsl.ProcessDef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getProcessDSLAccess().getRightCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDSLAccess().getProcessconfigProcessConfigParserRuleCall_10_0());
				}
				lv_processconfig_11_0=ruleProcessConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDSLRule());
					}
					set(
						$current,
						"processconfig",
						lv_processconfig_11_0,
						"scheduling.Dsl.ProcessConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDSLAccess().getProcessinitProcessInitParserRuleCall_11_0());
				}
				lv_processinit_12_0=ruleProcessInit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDSLRule());
					}
					set(
						$current,
						"processinit",
						lv_processinit_12_0,
						"scheduling.Dsl.ProcessInit");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValueAccess().getValueAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getNumNumValueParserRuleCall_0_1_0());
					}
					lv_num_1_0=ruleNumValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"num",
							lv_num_1_0,
							"scheduling.Dsl.NumValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getBoolBoolValueParserRuleCall_1_0());
				}
				lv_bool_2_0=ruleBoolValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"bool",
						lv_bool_2_0,
						"scheduling.Dsl.BoolValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_nondef_3_0='?'
				{
					newLeafNode(lv_nondef_3_0, grammarAccess.getValueAccess().getNondefQuestionMarkKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed($current, "nondef", lv_nondef_3_0, "?");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getListListDefParserRuleCall_3_0());
				}
				lv_list_4_0=ruleListDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"list",
						lv_list_4_0,
						"scheduling.Dsl.ListDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleListDef
entryRuleListDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListDefRule()); }
	iv_ruleListDef=ruleListDef
	{ $current=$iv_ruleListDef.current; }
	EOF;

// Rule ListDef
ruleListDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getListDefAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListDefAccess().getListListParserRuleCall_1_0());
				}
				lv_list_1_0=ruleList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListDefRule());
					}
					add(
						$current,
						"list",
						lv_list_1_0,
						"scheduling.Dsl.List");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getListDefAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListDefAccess().getListListParserRuleCall_2_1_0());
					}
					lv_list_3_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListDefRule());
						}
						add(
							$current,
							"list",
							lv_list_3_0,
							"scheduling.Dsl.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getListDefAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleList
entryRuleList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListRule()); }
	iv_ruleList=ruleList
	{ $current=$iv_ruleList.current; }
	EOF;

// Rule List
ruleList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getListAccess().getRangeRangeParserRuleCall_0_0());
				}
				lv_range_0_0=ruleRange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListRule());
					}
					set(
						$current,
						"range",
						lv_range_0_0,
						"scheduling.Dsl.Range");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getListAccess().getNumNumValueParserRuleCall_1_0());
				}
				lv_num_1_0=ruleNumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListRule());
					}
					set(
						$current,
						"num",
						lv_num_1_0,
						"scheduling.Dsl.NumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_id_2_0=RULE_ID
				{
					newLeafNode(lv_id_2_0, grammarAccess.getListAccess().getIdIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_2_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getListAccess().getBoolBoolValueParserRuleCall_3_0());
				}
				lv_bool_3_0=ruleBoolValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListRule());
					}
					set(
						$current,
						"bool",
						lv_bool_3_0,
						"scheduling.Dsl.BoolValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	iv_ruleRange=ruleRange
	{ $current=$iv_ruleRange.current; }
	EOF;

// Rule Range
ruleRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeAccess().getStartNumValueParserRuleCall_0_0());
				}
				lv_start_0_0=ruleNumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeRule());
					}
					set(
						$current,
						"start",
						lv_start_0_0,
						"scheduling.Dsl.NumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='..'
		{
			newLeafNode(otherlv_1, grammarAccess.getRangeAccess().getFullStopFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeAccess().getEndNumValueParserRuleCall_2_0());
				}
				lv_end_2_0=ruleNumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeRule());
					}
					set(
						$current,
						"end",
						lv_end_2_0,
						"scheduling.Dsl.NumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNumValue
entryRuleNumValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumValueRule()); }
	iv_ruleNumValue=ruleNumValue
	{ $current=$iv_ruleNumValue.current; }
	EOF;

// Rule NumValue
ruleNumValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_minus_0_0='-'
				{
					newLeafNode(lv_minus_0_0, grammarAccess.getNumValueAccess().getMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumValueRule());
					}
					setWithLastConsumed($current, "minus", lv_minus_0_0, "-");
				}
			)
		)?
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getNumValueAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumValueRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleBoolValue
entryRuleBoolValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolValueRule()); }
	iv_ruleBoolValue=ruleBoolValue
	{ $current=$iv_ruleBoolValue.current; }
	EOF;

// Rule BoolValue
ruleBoolValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='true'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getBoolValueAccess().getValueTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolValueRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='false'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getBoolValueAccess().getValueFalseKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolValueRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleProcessDataDef
entryRuleProcessDataDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessDataDefRule()); }
	iv_ruleProcessDataDef=ruleProcessDataDef
	{ $current=$iv_ruleProcessDataDef.current; }
	EOF;

// Rule ProcessDataDef
ruleProcessDataDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProcessDataDefAccess().getProcessDataDefAction_0(),
					$current);
			}
		)
		otherlv_1='attribute'
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessDataDefAccess().getAttributeKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessDataDefAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDataDefAccess().getPropertiesProcessPropertyDefParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProcessPropertyDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDataDefRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"scheduling.Dsl.ProcessPropertyDef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getProcessDataDefAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleProcessPropertyDef
entryRuleProcessPropertyDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessPropertyDefRule()); }
	iv_ruleProcessPropertyDef=ruleProcessPropertyDef
	{ $current=$iv_ruleProcessPropertyDef.current; }
	EOF;

// Rule ProcessPropertyDef
ruleProcessPropertyDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProcessPropertyDefAccess().getProcessPropertyDefAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_var_1_0='var'
					{
						newLeafNode(lv_var_1_0, grammarAccess.getProcessPropertyDefAccess().getVarVarKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcessPropertyDefRule());
						}
						setWithLastConsumed($current, "var", true, "var");
					}
				)
			)
			    |
			(
				(
					lv_val_2_0='val'
					{
						newLeafNode(lv_val_2_0, grammarAccess.getProcessPropertyDefAccess().getValValKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcessPropertyDefRule());
						}
						setWithLastConsumed($current, "val", true, "val");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessPropertyDefAccess().getTypeVariableTypeEnumRuleCall_2_0());
				}
				lv_type_3_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessPropertyDefRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"scheduling.Dsl.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessPropertyDefAccess().getNameProcessPropertyNameParserRuleCall_3_0());
				}
				lv_name_4_0=ruleProcessPropertyName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessPropertyDefRule());
					}
					add(
						$current,
						"name",
						lv_name_4_0,
						"scheduling.Dsl.ProcessPropertyName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getProcessPropertyDefAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessPropertyDefAccess().getNameProcessPropertyNameParserRuleCall_4_1_0());
					}
					lv_name_6_0=ruleProcessPropertyName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessPropertyDefRule());
						}
						add(
							$current,
							"name",
							lv_name_6_0,
							"scheduling.Dsl.ProcessPropertyName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getProcessPropertyDefAccess().getEqualsSignKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessPropertyDefAccess().getPvalueValueParserRuleCall_5_1_0());
					}
					lv_pvalue_8_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessPropertyDefRule());
						}
						set(
							$current,
							"pvalue",
							lv_pvalue_8_0,
							"scheduling.Dsl.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getProcessPropertyDefAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleProcessPropertyName
entryRuleProcessPropertyName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessPropertyNameRule()); }
	iv_ruleProcessPropertyName=ruleProcessPropertyName
	{ $current=$iv_ruleProcessPropertyName.current; }
	EOF;

// Rule ProcessPropertyName
ruleProcessPropertyName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getProcessPropertyNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getProcessPropertyNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleProcessDef
entryRuleProcessDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessDefRule()); }
	iv_ruleProcessDef=ruleProcessDef
	{ $current=$iv_ruleProcessDef.current; }
	EOF;

// Rule ProcessDef
ruleProcessDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='proctype'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessDefAccess().getProctypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDefAccess().getProctypeProcessParserRuleCall_1_0());
				}
				lv_proctype_1_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDefRule());
					}
					set(
						$current,
						"proctype",
						lv_proctype_1_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessDefAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDefAccess().getParalistParameterListParserRuleCall_3_0());
				}
				lv_paralist_3_0=ruleParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDefRule());
					}
					set(
						$current,
						"paralist",
						lv_paralist_3_0,
						"scheduling.Dsl.ParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getProcessDefAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getProcessDefAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessDefAccess().getPropertyassignmentPropertyAssignmentParserRuleCall_6_0());
				}
				lv_propertyassignment_6_0=rulePropertyAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessDefRule());
					}
					add(
						$current,
						"propertyassignment",
						lv_propertyassignment_6_0,
						"scheduling.Dsl.PropertyAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getProcessDefAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterListAccess().getParaParameterAssignParserRuleCall_0_0());
				}
				lv_para_0_0=ruleParameterAssign
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterListRule());
					}
					add(
						$current,
						"para",
						lv_para_0_0,
						"scheduling.Dsl.ParameterAssign");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getParaParameterAssignParserRuleCall_1_1_0());
					}
					lv_para_2_0=ruleParameterAssign
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"para",
							lv_para_2_0,
							"scheduling.Dsl.ParameterAssign");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleParameterAssign
entryRuleParameterAssign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterAssignRule()); }
	iv_ruleParameterAssign=ruleParameterAssign
	{ $current=$iv_ruleParameterAssign.current; }
	EOF;

// Rule ParameterAssign
ruleParameterAssign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAssignAccess().getTypeVariableTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterAssignRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"scheduling.Dsl.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAssignAccess().getParanameParameterNameParserRuleCall_1_0());
				}
				lv_paraname_1_0=ruleParameterName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterAssignRule());
					}
					add(
						$current,
						"paraname",
						lv_paraname_1_0,
						"scheduling.Dsl.ParameterName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getParameterAssignAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAssignAccess().getParanameParameterNameParserRuleCall_2_1_0());
					}
					lv_paraname_3_0=ruleParameterName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterAssignRule());
						}
						add(
							$current,
							"paraname",
							lv_paraname_3_0,
							"scheduling.Dsl.ParameterName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getParameterAssignAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAssignAccess().getValValueParserRuleCall_3_1_0());
					}
					lv_val_5_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterAssignRule());
						}
						set(
							$current,
							"val",
							lv_val_5_0,
							"scheduling.Dsl.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleParameterName
entryRuleParameterName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterNameRule()); }
	iv_ruleParameterName=ruleParameterName
	{ $current=$iv_ruleParameterName.current; }
	EOF;

// Rule ParameterName
ruleParameterName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getParameterNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	iv_ruleProcess=ruleProcess
	{ $current=$iv_ruleProcess.current; }
	EOF;

// Rule Process
ruleProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getProcessRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRulePropertyAssignment
entryRulePropertyAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyAssignmentRule()); }
	iv_rulePropertyAssignment=rulePropertyAssignment
	{ $current=$iv_rulePropertyAssignment.current; }
	EOF;

// Rule PropertyAssignment
rulePropertyAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPropertyAssignmentAccess().getPropertyAssignmentAction_0(),
					$current);
			}
		)
		(
			otherlv_1='this'
			{
				newLeafNode(otherlv_1, grammarAccess.getPropertyAssignmentAccess().getThisKeyword_1_0());
			}
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getPropertyAssignmentAccess().getFullStopKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropersProcessPropertyNameParserRuleCall_2_0());
				}
				lv_propers_3_0=ruleProcessPropertyName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyAssignmentRule());
					}
					set(
						$current,
						"propers",
						lv_propers_3_0,
						"scheduling.Dsl.ProcessPropertyName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getPropertyAssignmentAccess().getEqualsSignKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPvalueValueParserRuleCall_4_0_0());
					}
					lv_pvalue_5_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyAssignmentRule());
						}
						set(
							$current,
							"pvalue",
							lv_pvalue_5_0,
							"scheduling.Dsl.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPnameParameterNameParserRuleCall_4_1_0());
					}
					lv_pname_6_0=ruleParameterName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyAssignmentRule());
						}
						set(
							$current,
							"pname",
							lv_pname_6_0,
							"scheduling.Dsl.ParameterName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getPropertyAssignmentAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleProcessConfig
entryRuleProcessConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessConfigRule()); }
	iv_ruleProcessConfig=ruleProcessConfig
	{ $current=$iv_ruleProcessConfig.current; }
	EOF;

// Rule ProcessConfig
ruleProcessConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProcessConfigAccess().getProcessConfigAction_0(),
					$current);
			}
		)
		otherlv_1='config'
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessConfigAccess().getConfigKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessConfigAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessConfigAccess().getProcinitConfigProcessParserRuleCall_3_0());
				}
				lv_procinit_3_0=ruleConfigProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessConfigRule());
					}
					add(
						$current,
						"procinit",
						lv_procinit_3_0,
						"scheduling.Dsl.ConfigProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getProcessConfigAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleConfigProcess
entryRuleConfigProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigProcessRule()); }
	iv_ruleConfigProcess=ruleConfigProcess
	{ $current=$iv_ruleConfigProcess.current; }
	EOF;

// Rule ConfigProcess
ruleConfigProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigProcessAccess().getSporadicSporadicProcessParserRuleCall_0_0());
				}
				lv_sporadic_0_0=ruleSporadicProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigProcessRule());
					}
					set(
						$current,
						"sporadic",
						lv_sporadic_0_0,
						"scheduling.Dsl.SporadicProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigProcessAccess().getPeriodicPeriodicProcessParserRuleCall_1_0());
				}
				lv_periodic_1_0=rulePeriodicProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigProcessRule());
					}
					set(
						$current,
						"periodic",
						lv_periodic_1_0,
						"scheduling.Dsl.PeriodicProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSporadicProcess
entryRuleSporadicProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSporadicProcessRule()); }
	iv_ruleSporadicProcess=ruleSporadicProcess
	{ $current=$iv_ruleSporadicProcess.current; }
	EOF;

// Rule SporadicProcess
ruleSporadicProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sporadic'
		{
			newLeafNode(otherlv_0, grammarAccess.getSporadicProcessAccess().getSporadicKeyword_0());
		}
		otherlv_1='process'
		{
			newLeafNode(otherlv_1, grammarAccess.getSporadicProcessAccess().getProcessKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSporadicProcessAccess().getElementElementParserRuleCall_2_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSporadicProcessRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"scheduling.Dsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='in'
		{
			newLeafNode(otherlv_3, grammarAccess.getSporadicProcessAccess().getInKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getSporadicProcessAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				lv_start_5_0=RULE_INT
				{
					newLeafNode(lv_start_5_0, grammarAccess.getSporadicProcessAccess().getStartINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSporadicProcessRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getSporadicProcessAccess().getCommaKeyword_6());
		}
		(
			(
				lv_end_7_0=RULE_INT
				{
					newLeafNode(lv_end_7_0, grammarAccess.getSporadicProcessAccess().getEndINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSporadicProcessRule());
					}
					setWithLastConsumed(
						$current,
						"end",
						lv_end_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getSporadicProcessAccess().getRightParenthesisKeyword_8());
		}
		(
			otherlv_9='limited'
			{
				newLeafNode(otherlv_9, grammarAccess.getSporadicProcessAccess().getLimitedKeyword_9_0());
			}
			(
				(
					lv_max_10_0=RULE_INT
					{
						newLeafNode(lv_max_10_0, grammarAccess.getSporadicProcessAccess().getMaxINTTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSporadicProcessRule());
						}
						setWithLastConsumed(
							$current,
							"max",
							lv_max_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getSporadicProcessAccess().getSemicolonKeyword_10());
		}
	)
;

// Entry rule entryRulePeriodicProcess
entryRulePeriodicProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodicProcessRule()); }
	iv_rulePeriodicProcess=rulePeriodicProcess
	{ $current=$iv_rulePeriodicProcess.current; }
	EOF;

// Rule PeriodicProcess
rulePeriodicProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='periodic'
		{
			newLeafNode(otherlv_0, grammarAccess.getPeriodicProcessAccess().getPeriodicKeyword_0());
		}
		otherlv_1='process'
		{
			newLeafNode(otherlv_1, grammarAccess.getPeriodicProcessAccess().getProcessKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodicProcessAccess().getElementElementParserRuleCall_2_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodicProcessRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"scheduling.Dsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='offset'
		{
			newLeafNode(otherlv_3, grammarAccess.getPeriodicProcessAccess().getOffsetKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getPeriodicProcessAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodicProcessAccess().getOffsetNumValueParserRuleCall_5_0());
				}
				lv_offset_5_0=ruleNumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodicProcessRule());
					}
					set(
						$current,
						"offset",
						lv_offset_5_0,
						"scheduling.Dsl.NumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='period'
		{
			newLeafNode(otherlv_6, grammarAccess.getPeriodicProcessAccess().getPeriodKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getPeriodicProcessAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodicProcessAccess().getPeriodNumValueParserRuleCall_8_0());
				}
				lv_period_8_0=ruleNumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodicProcessRule());
					}
					set(
						$current,
						"period",
						lv_period_8_0,
						"scheduling.Dsl.NumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='limited'
			{
				newLeafNode(otherlv_9, grammarAccess.getPeriodicProcessAccess().getLimitedKeyword_9_0());
			}
			(
				(
					lv_max_10_0=RULE_INT
					{
						newLeafNode(lv_max_10_0, grammarAccess.getPeriodicProcessAccess().getMaxINTTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPeriodicProcessRule());
						}
						setWithLastConsumed(
							$current,
							"max",
							lv_max_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getPeriodicProcessAccess().getSemicolonKeyword_10());
		}
	)
;

// Entry rule entryRuleProcessInit
entryRuleProcessInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessInitRule()); }
	iv_ruleProcessInit=ruleProcessInit
	{ $current=$iv_ruleProcessInit.current; }
	EOF;

// Rule ProcessInit
ruleProcessInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='init'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessInitAccess().getInitKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessInitAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getProcessInitAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessInitAccess().getOrderSetParserRuleCall_3_0());
				}
				lv_order_3_0=ruleSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessInitRule());
					}
					add(
						$current,
						"order",
						lv_order_3_0,
						"scheduling.Dsl.Set");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getProcessInitAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProcessInitAccess().getOrderSetParserRuleCall_4_1_0());
					}
					lv_order_5_0=ruleSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProcessInitRule());
						}
						add(
							$current,
							"order",
							lv_order_5_0,
							"scheduling.Dsl.Set");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getProcessInitAccess().getRightSquareBracketKeyword_5());
		}
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getProcessInitAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSet
entryRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetRule()); }
	iv_ruleSet=ruleSet
	{ $current=$iv_ruleSet.current; }
	EOF;

// Rule Set
ruleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_set_0_0='{'
				{
					newLeafNode(lv_set_0_0, grammarAccess.getSetAccess().getSetLeftCurlyBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetRule());
					}
					setWithLastConsumed($current, "set", lv_set_0_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAccess().getElementElementParserRuleCall_1_0());
				}
				lv_element_1_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetRule());
					}
					add(
						$current,
						"element",
						lv_element_1_0,
						"scheduling.Dsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getSetAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetAccess().getElementElementParserRuleCall_2_1_0());
					}
					lv_element_3_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetRule());
						}
						add(
							$current,
							"element",
							lv_element_3_0,
							"scheduling.Dsl.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSetAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getProcessProcessParserRuleCall_0_0());
				}
				lv_process_0_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"process",
						lv_process_0_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getElementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getParaAssignValueParserRuleCall_2_0_0());
					}
					lv_paraAssign_2_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRule());
						}
						add(
							$current,
							"paraAssign",
							lv_paraAssign_2_0,
							"scheduling.Dsl.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getElementAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getElementAccess().getParaAssignValueParserRuleCall_2_1_1_0());
						}
						lv_paraAssign_4_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElementRule());
							}
							add(
								$current,
								"paraAssign",
								lv_paraAssign_4_0,
								"scheduling.Dsl.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getElementAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSchedulerDSL
entryRuleSchedulerDSL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchedulerDSLRule()); }
	iv_ruleSchedulerDSL=ruleSchedulerDSL
	{ $current=$iv_ruleSchedulerDSL.current; }
	EOF;

// Rule SchedulerDSL
ruleSchedulerDSL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDSLAccess().getDefcoreDefCoreParserRuleCall_0_0());
				}
				lv_defcore_0_0=ruleDefCore
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDSLRule());
					}
					set(
						$current,
						"defcore",
						lv_defcore_0_0,
						"scheduling.Dsl.DefCore");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDSLAccess().getSchedulerSchedulerDefParserRuleCall_1_0());
				}
				lv_scheduler_1_0=ruleSchedulerDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDSLRule());
					}
					set(
						$current,
						"scheduler",
						lv_scheduler_1_0,
						"scheduling.Dsl.SchedulerDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDSLAccess().getOrderOrderingDefParserRuleCall_2_0());
				}
				lv_order_2_0=ruleOrderingDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDSLRule());
					}
					set(
						$current,
						"order",
						lv_order_2_0,
						"scheduling.Dsl.OrderingDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDSLAccess().getVerifyVerifyParserRuleCall_3_0());
				}
				lv_verify_3_0=ruleVerify
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDSLRule());
					}
					set(
						$current,
						"verify",
						lv_verify_3_0,
						"scheduling.Dsl.Verify");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDefCore
entryRuleDefCore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefCoreRule()); }
	iv_ruleDefCore=ruleDefCore
	{ $current=$iv_ruleDefCore.current; }
	EOF;

// Rule DefCore
ruleDefCore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefCoreAccess().getNumberSignKeyword_0());
		}
		otherlv_1='def'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefCoreAccess().getDefKeyword_1());
		}
		otherlv_2='num_core'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefCoreAccess().getNum_coreKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getDefCoreAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_numcore_4_0=RULE_INT
				{
					newLeafNode(lv_numcore_4_0, grammarAccess.getDefCoreAccess().getNumcoreINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefCoreRule());
					}
					setWithLastConsumed(
						$current,
						"numcore",
						lv_numcore_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getDefCoreAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleRTCTL
entryRuleRTCTL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRTCTLRule()); }
	iv_ruleRTCTL=ruleRTCTL
	{ $current=$iv_ruleRTCTL.current; }
	EOF;

// Rule RTCTL
ruleRTCTL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_op_0_0='('
					{
						newLeafNode(lv_op_0_0, grammarAccess.getRTCTLAccess().getOpLeftParenthesisKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_0, "(");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getExpExpressionParserRuleCall_0_1_0());
					}
					lv_exp_1_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"exp",
							lv_exp_1_0,
							"scheduling.Dsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getRTCTLAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				(
					lv_op_3_0='not'
					{
						newLeafNode(lv_op_3_0, grammarAccess.getRTCTLAccess().getOpNotKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_3_0, "not");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getFRTCTLParserRuleCall_1_1_0());
					}
					lv_f_4_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f",
							lv_f_4_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_5_0='or'
					{
						newLeafNode(lv_op_5_0, grammarAccess.getRTCTLAccess().getOpOrKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_5_0, "or");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getF1RTCTLParserRuleCall_2_1_0());
					}
					lv_f1_6_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f1",
							lv_f1_6_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getF2RTCTLParserRuleCall_2_2_0());
					}
					lv_f2_7_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f2",
							lv_f2_7_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_8_0='implies'
					{
						newLeafNode(lv_op_8_0, grammarAccess.getRTCTLAccess().getOpImpliesKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_8_0, "implies");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getF1RTCTLParserRuleCall_3_1_0());
					}
					lv_f1_9_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f1",
							lv_f1_9_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getF2RTCTLParserRuleCall_3_2_0());
					}
					lv_f2_10_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f2",
							lv_f2_10_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_11_0='AX'
					{
						newLeafNode(lv_op_11_0, grammarAccess.getRTCTLAccess().getOpAXKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_11_0, "AX");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getFRTCTLParserRuleCall_4_1_0());
					}
					lv_f_12_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f",
							lv_f_12_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_13_0='AF'
					{
						newLeafNode(lv_op_13_0, grammarAccess.getRTCTLAccess().getOpAFKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_13_0, "AF");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getLteLTEParserRuleCall_5_1_0());
					}
					lv_lte_14_0=ruleLTE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"lte",
							lv_lte_14_0,
							"scheduling.Dsl.LTE");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getFRTCTLParserRuleCall_5_2_0());
					}
					lv_f_15_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f",
							lv_f_15_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_16_0='AG'
					{
						newLeafNode(lv_op_16_0, grammarAccess.getRTCTLAccess().getOpAGKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_16_0, "AG");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getLteLTEParserRuleCall_6_1_0());
					}
					lv_lte_17_0=ruleLTE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"lte",
							lv_lte_17_0,
							"scheduling.Dsl.LTE");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getFRTCTLParserRuleCall_6_2_0());
					}
					lv_f_18_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f",
							lv_f_18_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_19_0='EX'
					{
						newLeafNode(lv_op_19_0, grammarAccess.getRTCTLAccess().getOpEXKeyword_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_19_0, "EX");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getFRTCTLParserRuleCall_7_1_0());
					}
					lv_f_20_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f",
							lv_f_20_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_21_0='EF'
					{
						newLeafNode(lv_op_21_0, grammarAccess.getRTCTLAccess().getOpEFKeyword_8_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_21_0, "EF");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getLteLTEParserRuleCall_8_1_0());
					}
					lv_lte_22_0=ruleLTE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"lte",
							lv_lte_22_0,
							"scheduling.Dsl.LTE");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getFRTCTLParserRuleCall_8_2_0());
					}
					lv_f_23_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f",
							lv_f_23_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_24_0='EG'
					{
						newLeafNode(lv_op_24_0, grammarAccess.getRTCTLAccess().getOpEGKeyword_9_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_24_0, "EG");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getLteLTEParserRuleCall_9_1_0());
					}
					lv_lte_25_0=ruleLTE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"lte",
							lv_lte_25_0,
							"scheduling.Dsl.LTE");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getFRTCTLParserRuleCall_9_2_0());
					}
					lv_f_26_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f",
							lv_f_26_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_27_0='AU'
					{
						newLeafNode(lv_op_27_0, grammarAccess.getRTCTLAccess().getOpAUKeyword_10_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_27_0, "AU");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getLteLTEParserRuleCall_10_1_0());
					}
					lv_lte_28_0=ruleLTE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"lte",
							lv_lte_28_0,
							"scheduling.Dsl.LTE");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getF1RTCTLParserRuleCall_10_2_0());
					}
					lv_f1_29_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f1",
							lv_f1_29_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getF2RTCTLParserRuleCall_10_3_0());
					}
					lv_f2_30_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f2",
							lv_f2_30_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_op_31_0='EU'
					{
						newLeafNode(lv_op_31_0, grammarAccess.getRTCTLAccess().getOpEUKeyword_11_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRTCTLRule());
						}
						setWithLastConsumed($current, "op", lv_op_31_0, "EU");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getLteLTEParserRuleCall_11_1_0());
					}
					lv_lte_32_0=ruleLTE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"lte",
							lv_lte_32_0,
							"scheduling.Dsl.LTE");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getF1RTCTLParserRuleCall_11_2_0());
					}
					lv_f1_33_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f1",
							lv_f1_33_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRTCTLAccess().getF2RTCTLParserRuleCall_11_3_0());
					}
					lv_f2_34_0=ruleRTCTL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRTCTLRule());
						}
						set(
							$current,
							"f2",
							lv_f2_34_0,
							"scheduling.Dsl.RTCTL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLTE
entryRuleLTE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLTERule()); }
	iv_ruleLTE=ruleLTE
	{ $current=$iv_ruleLTE.current; }
	EOF;

// Rule LTE
ruleLTE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<='
		{
			newLeafNode(otherlv_0, grammarAccess.getLTEAccess().getLessThanSignEqualsSignKeyword_0());
		}
		(
			(
				lv_num_1_0=RULE_INT
				{
					newLeafNode(lv_num_1_0, grammarAccess.getLTEAccess().getNumINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLTERule());
					}
					setWithLastConsumed(
						$current,
						"num",
						lv_num_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleCTL_AT
entryRuleCTL_AT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCTL_ATRule()); }
	iv_ruleCTL_AT=ruleCTL_AT
	{ $current=$iv_ruleCTL_AT.current; }
	EOF;

// Rule CTL_AT
ruleCTL_AT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getCTL_ATAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCTL_ATAccess().getCondExpressionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCTL_ATRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCTL_ATAccess().getColonKeyword_2());
		}
	)
;

// Entry rule entryRuleVerify
entryRuleVerify returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerifyRule()); }
	iv_ruleVerify=ruleVerify
	{ $current=$iv_ruleVerify.current; }
	EOF;

// Rule Verify
ruleVerify returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='verify'
		{
			newLeafNode(otherlv_0, grammarAccess.getVerifyAccess().getVerifyKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getVerifyAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVerifyAccess().getAtCTL_ATParserRuleCall_2_0());
				}
				lv_at_2_0=ruleCTL_AT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerifyRule());
					}
					set(
						$current,
						"at",
						lv_at_2_0,
						"scheduling.Dsl.CTL_AT");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVerifyAccess().getFormulaRTCTLParserRuleCall_3_0());
				}
				lv_formula_3_0=ruleRTCTL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerifyRule());
					}
					set(
						$current,
						"formula",
						lv_formula_3_0,
						"scheduling.Dsl.RTCTL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getVerifyAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleOrderingDef
entryRuleOrderingDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderingDefRule()); }
	iv_ruleOrderingDef=ruleOrderingDef
	{ $current=$iv_ruleOrderingDef.current; }
	EOF;

// Rule OrderingDef
ruleOrderingDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOrderingDefAccess().getOrderingDefAction_0(),
					$current);
			}
		)
		otherlv_1='comparator'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrderingDefAccess().getComparatorKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getOrderingDefAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderingDefAccess().getVarsCompVarDefParserRuleCall_3_0());
				}
				lv_vars_3_0=ruleCompVarDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderingDefRule());
					}
					set(
						$current,
						"vars",
						lv_vars_3_0,
						"scheduling.Dsl.CompVarDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderingDefAccess().getCompareComparationDefParserRuleCall_4_0());
				}
				lv_compare_4_0=ruleComparationDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderingDefRule());
					}
					add(
						$current,
						"compare",
						lv_compare_4_0,
						"scheduling.Dsl.ComparationDef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getOrderingDefAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCompVarDef
entryRuleCompVarDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompVarDefRule()); }
	iv_ruleCompVarDef=ruleCompVarDef
	{ $current=$iv_ruleCompVarDef.current; }
	EOF;

// Rule CompVarDef
ruleCompVarDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompVarDefAccess().getCompVarDefAction_0(),
					$current);
			}
		)
		otherlv_1='variable'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompVarDefAccess().getVariableKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCompVarDefAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompVarDefAccess().getVardCompVarDefinationParserRuleCall_3_0());
				}
				lv_vard_3_0=ruleCompVarDefination
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompVarDefRule());
					}
					add(
						$current,
						"vard",
						lv_vard_3_0,
						"scheduling.Dsl.CompVarDefination");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getCompVarDefAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCompVarDefination
entryRuleCompVarDefination returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompVarDefinationRule()); }
	iv_ruleCompVarDefination=ruleCompVarDefination
	{ $current=$iv_ruleCompVarDefination.current; }
	EOF;

// Rule CompVarDefination
ruleCompVarDefination returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompVarDefinationAccess().getTypeVariableTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompVarDefinationRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"scheduling.Dsl.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompVarDefinationAccess().getNameCompVarNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleCompVarName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompVarDefinationRule());
					}
					add(
						$current,
						"name",
						lv_name_1_0,
						"scheduling.Dsl.CompVarName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getCompVarDefinationAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompVarDefinationAccess().getNameCompVarNameParserRuleCall_2_1_0());
					}
					lv_name_3_0=ruleCompVarName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompVarDefinationRule());
						}
						add(
							$current,
							"name",
							lv_name_3_0,
							"scheduling.Dsl.CompVarName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getCompVarDefinationAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompVarDefinationAccess().getPvalueValueParserRuleCall_3_1_0());
					}
					lv_pvalue_5_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompVarDefinationRule());
						}
						set(
							$current,
							"pvalue",
							lv_pvalue_5_0,
							"scheduling.Dsl.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getCompVarDefinationAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleCompVarName
entryRuleCompVarName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompVarNameRule()); }
	iv_ruleCompVarName=ruleCompVarName
	{ $current=$iv_ruleCompVarName.current; }
	EOF;

// Rule CompVarName
ruleCompVarName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getCompVarNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCompVarNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleComparationDef
entryRuleComparationDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparationDefRule()); }
	iv_ruleComparationDef=ruleComparationDef
	{ $current=$iv_ruleComparationDef.current; }
	EOF;

// Rule ComparationDef
ruleComparationDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='comparetype'
		{
			newLeafNode(otherlv_0, grammarAccess.getComparationDefAccess().getComparetypeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComparationDefAccess().getCnameComparationNameParserRuleCall_1_0());
				}
				lv_cname_1_0=ruleComparationName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparationDefRule());
					}
					set(
						$current,
						"cname",
						lv_cname_1_0,
						"scheduling.Dsl.ComparationName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getComparationDefAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='process'
		{
			newLeafNode(otherlv_3, grammarAccess.getComparationDefAccess().getProcessKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComparationDefAccess().getProcess1ProcessParserRuleCall_4_0());
				}
				lv_process1_4_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparationDefRule());
					}
					set(
						$current,
						"process1",
						lv_process1_4_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getComparationDefAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComparationDefAccess().getProcess2ProcessParserRuleCall_6_0());
				}
				lv_process2_6_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparationDefRule());
					}
					set(
						$current,
						"process2",
						lv_process2_6_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getComparationDefAccess().getRightParenthesisKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getComparationDefAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComparationDefAccess().getStatementsStatementParserRuleCall_9_0());
				}
				lv_statements_9_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparationDefRule());
					}
					add(
						$current,
						"statements",
						lv_statements_9_0,
						"scheduling.Dsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getComparationDefAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleComparationName
entryRuleComparationName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparationNameRule()); }
	iv_ruleComparationName=ruleComparationName
	{ $current=$iv_ruleComparationName.current; }
	EOF;

// Rule ComparationName
ruleComparationName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getComparationNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getComparationNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	iv_ruleReturnStatement=ruleReturnStatement
	{ $current=$iv_ruleReturnStatement.current; }
	EOF;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return'
		{
			newLeafNode(otherlv_0, grammarAccess.getReturnStatementAccess().getReturnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStatementAccess().getValueOrderTypeEnumRuleCall_1_0());
				}
				lv_value_1_0=ruleOrderType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStatementRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"scheduling.Dsl.OrderType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleSchedulerDef
entryRuleSchedulerDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchedulerDefRule()); }
	iv_ruleSchedulerDef=ruleSchedulerDef
	{ $current=$iv_ruleSchedulerDef.current; }
	EOF;

// Rule SchedulerDef
ruleSchedulerDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='scheduler'
		{
			newLeafNode(otherlv_0, grammarAccess.getSchedulerDefAccess().getSchedulerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSchedulerDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSchedulerDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getSchedulerDefAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDefAccess().getParameterlistParameterListParserRuleCall_3_0());
				}
				lv_parameterlist_3_0=ruleParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDefRule());
					}
					set(
						$current,
						"parameterlist",
						lv_parameterlist_3_0,
						"scheduling.Dsl.ParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getSchedulerDefAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_5='refines'
			{
				newLeafNode(otherlv_5, grammarAccess.getSchedulerDefAccess().getRefinesKeyword_5_0());
			}
			(
				(
					lv_parent_6_0=RULE_ID
					{
						newLeafNode(lv_parent_6_0, grammarAccess.getSchedulerDefAccess().getParentIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSchedulerDefRule());
						}
						setWithLastConsumed(
							$current,
							"parent",
							lv_parent_6_0,
							"scheduling.Dsl.ID");
					}
				)
			)
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getSchedulerDefAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDefAccess().getGenGenerateParserRuleCall_7_0());
				}
				lv_gen_8_0=ruleGenerate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDefRule());
					}
					set(
						$current,
						"gen",
						lv_gen_8_0,
						"scheduling.Dsl.Generate");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDefAccess().getSvarVarDefParserRuleCall_8_0());
				}
				lv_svar_9_0=ruleVarDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDefRule());
					}
					set(
						$current,
						"svar",
						lv_svar_9_0,
						"scheduling.Dsl.VarDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDefAccess().getSchedulerdataSchedulerDataDefParserRuleCall_9_0());
				}
				lv_schedulerdata_10_0=ruleSchedulerDataDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDefRule());
					}
					set(
						$current,
						"schedulerdata",
						lv_schedulerdata_10_0,
						"scheduling.Dsl.SchedulerDataDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDefAccess().getSchedulerinitSchedulerInitParserRuleCall_10_0());
				}
				lv_schedulerinit_11_0=ruleSchedulerInit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDefRule());
					}
					set(
						$current,
						"schedulerinit",
						lv_schedulerinit_11_0,
						"scheduling.Dsl.SchedulerInit");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDefAccess().getHandlerHandlerDefParserRuleCall_11_0());
				}
				lv_handler_12_0=ruleHandlerDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDefRule());
					}
					set(
						$current,
						"handler",
						lv_handler_12_0,
						"scheduling.Dsl.HandlerDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDefAccess().getInterfaceInterfaceDefParserRuleCall_12_0());
				}
				lv_interface_13_0=ruleInterfaceDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDefRule());
					}
					set(
						$current,
						"interface",
						lv_interface_13_0,
						"scheduling.Dsl.InterfaceDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getSchedulerDefAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleSchedulerInit
entryRuleSchedulerInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchedulerInitRule()); }
	iv_ruleSchedulerInit=ruleSchedulerInit
	{ $current=$iv_ruleSchedulerInit.current; }
	EOF;

// Rule SchedulerInit
ruleSchedulerInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSchedulerInitAccess().getSchedulerInitAction_0(),
					$current);
			}
		)
		otherlv_1='scheduler'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchedulerInitAccess().getSchedulerKeyword_1());
		}
		otherlv_2='init'
		{
			newLeafNode(otherlv_2, grammarAccess.getSchedulerInitAccess().getInitKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSchedulerInitAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerInitAccess().getInitstmStatementParserRuleCall_4_0());
				}
				lv_initstm_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerInitRule());
					}
					add(
						$current,
						"initstm",
						lv_initstm_4_0,
						"scheduling.Dsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSchedulerInitAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleIfDef
entryRuleIfDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfDefRule()); }
	iv_ruleIfDef=ruleIfDef
	{ $current=$iv_ruleIfDef.current; }
	EOF;

// Rule IfDef
ruleIfDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfDefAccess().getNumberSignKeyword_0());
		}
		otherlv_1='ifdef'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfDefAccess().getIfdefKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getIfDefAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfDefAccess().getCondExpressionParserRuleCall_3_0());
				}
				lv_cond_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfDefRule());
					}
					set(
						$current,
						"cond",
						lv_cond_3_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfDefAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleInterfaceDef
entryRuleInterfaceDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceDefRule()); }
	iv_ruleInterfaceDef=ruleInterfaceDef
	{ $current=$iv_ruleInterfaceDef.current; }
	EOF;

// Rule InterfaceDef
ruleInterfaceDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInterfaceDefAccess().getInterfaceDefAction_0(),
					$current);
			}
		)
		otherlv_1='interface'
		{
			newLeafNode(otherlv_1, grammarAccess.getInterfaceDefAccess().getInterfaceKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInterfaceDefAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDefAccess().getInterfacefunctionInterfaceFunctionParserRuleCall_3_0());
				}
				lv_interfacefunction_3_0=ruleInterfaceFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDefRule());
					}
					add(
						$current,
						"interfacefunction",
						lv_interfacefunction_3_0,
						"scheduling.Dsl.InterfaceFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getInterfaceDefAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleInterfaceFunction
entryRuleInterfaceFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceFunctionRule()); }
	iv_ruleInterfaceFunction=ruleInterfaceFunction
	{ $current=$iv_ruleInterfaceFunction.current; }
	EOF;

// Rule InterfaceFunction
ruleInterfaceFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getInterfaceFunctionAccess().getFunctionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceFunctionAccess().getFunctionnameFunctionNameParserRuleCall_1_0());
				}
				lv_functionname_1_0=ruleFunctionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceFunctionRule());
					}
					set(
						$current,
						"functionname",
						lv_functionname_1_0,
						"scheduling.Dsl.FunctionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getInterfaceFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceFunctionAccess().getParameterlistInterfaceParameterListParserRuleCall_3_0());
				}
				lv_parameterlist_3_0=ruleInterfaceParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceFunctionRule());
					}
					set(
						$current,
						"parameterlist",
						lv_parameterlist_3_0,
						"scheduling.Dsl.InterfaceParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getInterfaceFunctionAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getInterfaceFunctionAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceFunctionAccess().getStatementsStmParserRuleCall_6_0());
				}
				lv_statements_6_0=ruleStm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceFunctionRule());
					}
					add(
						$current,
						"statements",
						lv_statements_6_0,
						"scheduling.Dsl.Stm");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getInterfaceFunctionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleInterfaceParameterList
entryRuleInterfaceParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceParameterListRule()); }
	iv_ruleInterfaceParameterList=ruleInterfaceParameterList
	{ $current=$iv_ruleInterfaceParameterList.current; }
	EOF;

// Rule InterfaceParameterList
ruleInterfaceParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceParameterListAccess().getParaInterfaceParameterDeclareParserRuleCall_0_0());
				}
				lv_para_0_0=ruleInterfaceParameterDeclare
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceParameterListRule());
					}
					add(
						$current,
						"para",
						lv_para_0_0,
						"scheduling.Dsl.InterfaceParameterDeclare");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getInterfaceParameterListAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceParameterListAccess().getParaInterfaceParameterDeclareParserRuleCall_1_1_0());
					}
					lv_para_2_0=ruleInterfaceParameterDeclare
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceParameterListRule());
						}
						add(
							$current,
							"para",
							lv_para_2_0,
							"scheduling.Dsl.InterfaceParameterDeclare");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleInterfaceParameterDeclare
entryRuleInterfaceParameterDeclare returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceParameterDeclareRule()); }
	iv_ruleInterfaceParameterDeclare=ruleInterfaceParameterDeclare
	{ $current=$iv_ruleInterfaceParameterDeclare.current; }
	EOF;

// Rule InterfaceParameterDeclare
ruleInterfaceParameterDeclare returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceParameterDeclareAccess().getTypeVariableTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceParameterDeclareRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"scheduling.Dsl.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_paraname_1_0=RULE_ID
				{
					newLeafNode(lv_paraname_1_0, grammarAccess.getInterfaceParameterDeclareAccess().getParanameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceParameterDeclareRule());
					}
					setWithLastConsumed(
						$current,
						"paraname",
						lv_paraname_1_0,
						"scheduling.Dsl.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionName
entryRuleFunctionName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionNameRule()); }
	iv_ruleFunctionName=ruleFunctionName
	{ $current=$iv_ruleFunctionName.current; }
	EOF;

// Rule FunctionName
ruleFunctionName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getFunctionNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFunctionNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleVarDef
entryRuleVarDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDefRule()); }
	iv_ruleVarDef=ruleVarDef
	{ $current=$iv_ruleVarDef.current; }
	EOF;

// Rule VarDef
ruleVarDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVarDefAccess().getVarDefAction_0(),
					$current);
			}
		)
		otherlv_1='variable'
		{
			newLeafNode(otherlv_1, grammarAccess.getVarDefAccess().getVariableKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVarDefAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDefAccess().getVardVarDeclParserRuleCall_3_0());
				}
				lv_vard_3_0=ruleVarDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDefRule());
					}
					add(
						$current,
						"vard",
						lv_vard_3_0,
						"scheduling.Dsl.VarDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getVarDefAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDeclAccess().getIfdefIfDefParserRuleCall_0_0());
				}
				lv_ifdef_0_0=ruleIfDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDeclRule());
					}
					set(
						$current,
						"ifdef",
						lv_ifdef_0_0,
						"scheduling.Dsl.IfDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDeclAccess().getVarblockdefVarBlockDefParserRuleCall_1_0_0());
					}
					lv_varblockdef_1_0=ruleVarBlockDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDeclRule());
						}
						set(
							$current,
							"varblockdef",
							lv_varblockdef_1_0,
							"scheduling.Dsl.VarBlockDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDeclAccess().getVarsingledefVarSingleDefParserRuleCall_1_1_0());
					}
					lv_varsingledef_2_0=ruleVarSingleDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDeclRule());
						}
						set(
							$current,
							"varsingledef",
							lv_varsingledef_2_0,
							"scheduling.Dsl.VarSingleDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleVarBlockDef
entryRuleVarBlockDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarBlockDefRule()); }
	iv_ruleVarBlockDef=ruleVarBlockDef
	{ $current=$iv_ruleVarBlockDef.current; }
	EOF;

// Rule VarBlockDef
ruleVarBlockDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getVarBlockDefAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarBlockDefAccess().getVardefVarDefinitionParserRuleCall_1_0());
				}
				lv_vardef_1_0=ruleVarDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarBlockDefRule());
					}
					add(
						$current,
						"vardef",
						lv_vardef_1_0,
						"scheduling.Dsl.VarDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getVarBlockDefAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleVarSingleDef
entryRuleVarSingleDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarSingleDefRule()); }
	iv_ruleVarSingleDef=ruleVarSingleDef
	{ $current=$iv_ruleVarSingleDef.current; }
	EOF;

// Rule VarSingleDef
ruleVarSingleDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getVarSingleDefAccess().getVardefVarDefinitionParserRuleCall_0());
			}
			lv_vardef_0_0=ruleVarDefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getVarSingleDefRule());
				}
				set(
					$current,
					"vardef",
					lv_vardef_0_0,
					"scheduling.Dsl.VarDefinition");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleVarDefinition
entryRuleVarDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDefinitionRule()); }
	iv_ruleVarDefinition=ruleVarDefinition
	{ $current=$iv_ruleVarDefinition.current; }
	EOF;

// Rule VarDefinition
ruleVarDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDefinitionAccess().getTypeVariableTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDefinitionRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"scheduling.Dsl.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDefinitionAccess().getNameVarNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleVarName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDefinitionRule());
					}
					add(
						$current,
						"name",
						lv_name_1_0,
						"scheduling.Dsl.VarName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getVarDefinitionAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDefinitionAccess().getNameVarNameParserRuleCall_2_1_0());
					}
					lv_name_3_0=ruleVarName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDefinitionRule());
						}
						add(
							$current,
							"name",
							lv_name_3_0,
							"scheduling.Dsl.VarName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getVarDefinitionAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVarDefinitionAccess().getBvalueBoolValueParserRuleCall_3_1_0_0());
						}
						lv_bvalue_5_0=ruleBoolValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarDefinitionRule());
							}
							set(
								$current,
								"bvalue",
								lv_bvalue_5_0,
								"scheduling.Dsl.BoolValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getVarDefinitionAccess().getIvalueNumValueParserRuleCall_3_1_1_0());
						}
						lv_ivalue_6_0=ruleNumValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarDefinitionRule());
							}
							set(
								$current,
								"ivalue",
								lv_ivalue_6_0,
								"scheduling.Dsl.NumValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getVarDefinitionAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleVarName
entryRuleVarName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarNameRule()); }
	iv_ruleVarName=ruleVarName
	{ $current=$iv_ruleVarName.current; }
	EOF;

// Rule VarName
ruleVarName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVarNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVarNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleSchedulerDataDef
entryRuleSchedulerDataDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchedulerDataDefRule()); }
	iv_ruleSchedulerDataDef=ruleSchedulerDataDef
	{ $current=$iv_ruleSchedulerDataDef.current; }
	EOF;

// Rule SchedulerDataDef
ruleSchedulerDataDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSchedulerDataDefAccess().getSchedulerDataDefAction_0(),
					$current);
			}
		)
		otherlv_1='data'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchedulerDataDefAccess().getDataKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSchedulerDataDefAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerDataDefAccess().getDatadefDataDefParserRuleCall_3_0());
				}
				lv_datadef_3_0=ruleDataDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerDataDefRule());
					}
					add(
						$current,
						"datadef",
						lv_datadef_3_0,
						"scheduling.Dsl.DataDef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSchedulerDataDefAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDataDef
entryRuleDataDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataDefRule()); }
	iv_ruleDataDef=ruleDataDef
	{ $current=$iv_ruleDataDef.current; }
	EOF;

// Rule DataDef
ruleDataDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataDefAccess().getIfdefIfDefParserRuleCall_0_0());
				}
				lv_ifdef_0_0=ruleIfDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataDefRule());
					}
					set(
						$current,
						"ifdef",
						lv_ifdef_0_0,
						"scheduling.Dsl.IfDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataDefAccess().getDatablockdefDataBlockDefParserRuleCall_1_0_0());
					}
					lv_datablockdef_1_0=ruleDataBlockDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataDefRule());
						}
						set(
							$current,
							"datablockdef",
							lv_datablockdef_1_0,
							"scheduling.Dsl.DataBlockDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getDataDefAccess().getDatasingledefDataSingleDefParserRuleCall_1_1_0());
					}
					lv_datasingledef_2_0=ruleDataSingleDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataDefRule());
						}
						set(
							$current,
							"datasingledef",
							lv_datasingledef_2_0,
							"scheduling.Dsl.DataSingleDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDataBlockDef
entryRuleDataBlockDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataBlockDefRule()); }
	iv_ruleDataBlockDef=ruleDataBlockDef
	{ $current=$iv_ruleDataBlockDef.current; }
	EOF;

// Rule DataBlockDef
ruleDataBlockDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataBlockDefAccess().getDataBlockDefAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataBlockDefAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataBlockDefAccess().getDatadefDataSingleDefParserRuleCall_2_0());
				}
				lv_datadef_2_0=ruleDataSingleDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataBlockDefRule());
					}
					add(
						$current,
						"datadef",
						lv_datadef_2_0,
						"scheduling.Dsl.DataSingleDef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataBlockDefAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDataSingleDef
entryRuleDataSingleDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataSingleDefRule()); }
	iv_ruleDataSingleDef=ruleDataSingleDef
	{ $current=$iv_ruleDataSingleDef.current; }
	EOF;

// Rule DataSingleDef
ruleDataSingleDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataSingleDefAccess().getPropSchedulerPropertyDefParserRuleCall_0_0());
				}
				lv_prop_0_0=ruleSchedulerPropertyDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataSingleDefRule());
					}
					set(
						$current,
						"prop",
						lv_prop_0_0,
						"scheduling.Dsl.SchedulerPropertyDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDataSingleDefAccess().getColSchedulerCollectionDefParserRuleCall_1_0());
				}
				lv_col_1_0=ruleSchedulerCollectionDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataSingleDefRule());
					}
					set(
						$current,
						"col",
						lv_col_1_0,
						"scheduling.Dsl.SchedulerCollectionDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSchedulerPropertyDef
entryRuleSchedulerPropertyDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchedulerPropertyDefRule()); }
	iv_ruleSchedulerPropertyDef=ruleSchedulerPropertyDef
	{ $current=$iv_ruleSchedulerPropertyDef.current; }
	EOF;

// Rule SchedulerPropertyDef
ruleSchedulerPropertyDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerPropertyDefAccess().getTypeVariableTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerPropertyDefRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"scheduling.Dsl.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerPropertyDefAccess().getNameSchedulerPropertyNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleSchedulerPropertyName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerPropertyDefRule());
					}
					add(
						$current,
						"name",
						lv_name_1_0,
						"scheduling.Dsl.SchedulerPropertyName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getSchedulerPropertyDefAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSchedulerPropertyDefAccess().getNameSchedulerPropertyNameParserRuleCall_2_1_0());
					}
					lv_name_3_0=ruleSchedulerPropertyName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchedulerPropertyDefRule());
						}
						add(
							$current,
							"name",
							lv_name_3_0,
							"scheduling.Dsl.SchedulerPropertyName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getSchedulerPropertyDefAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSchedulerPropertyDefAccess().getBvalueBoolValueParserRuleCall_3_1_0_0());
						}
						lv_bvalue_5_0=ruleBoolValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSchedulerPropertyDefRule());
							}
							set(
								$current,
								"bvalue",
								lv_bvalue_5_0,
								"scheduling.Dsl.BoolValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getSchedulerPropertyDefAccess().getIvalueNumValueParserRuleCall_3_1_1_0());
						}
						lv_ivalue_6_0=ruleNumValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSchedulerPropertyDefRule());
							}
							set(
								$current,
								"ivalue",
								lv_ivalue_6_0,
								"scheduling.Dsl.NumValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSchedulerPropertyDefAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleSchedulerPropertyName
entryRuleSchedulerPropertyName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchedulerPropertyNameRule()); }
	iv_ruleSchedulerPropertyName=ruleSchedulerPropertyName
	{ $current=$iv_ruleSchedulerPropertyName.current; }
	EOF;

// Rule SchedulerPropertyName
ruleSchedulerPropertyName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSchedulerPropertyNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSchedulerPropertyNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleSchedulerCollectionDef
entryRuleSchedulerCollectionDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchedulerCollectionDefRule()); }
	iv_ruleSchedulerCollectionDef=ruleSchedulerCollectionDef
	{ $current=$iv_ruleSchedulerCollectionDef.current; }
	EOF;

// Rule SchedulerCollectionDef
ruleSchedulerCollectionDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_parent_0_0='refines'
				{
					newLeafNode(lv_parent_0_0, grammarAccess.getSchedulerCollectionDefAccess().getParentRefinesKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSchedulerCollectionDefRule());
					}
					setWithLastConsumed($current, "parent", lv_parent_0_0, "refines");
				}
			)
		)?
		otherlv_1='collection'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchedulerCollectionDefAccess().getCollectionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchedulerCollectionDefAccess().getNameSchedulerSetParserRuleCall_2_0());
				}
				lv_name_2_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchedulerCollectionDefRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='using'
			{
				newLeafNode(otherlv_3, grammarAccess.getSchedulerCollectionDefAccess().getUsingKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSchedulerCollectionDefAccess().getCompComparationNameParserRuleCall_3_1_0());
					}
					lv_comp_4_0=ruleComparationName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchedulerCollectionDefRule());
						}
						add(
							$current,
							"comp",
							lv_comp_4_0,
							"scheduling.Dsl.ComparationName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getSchedulerCollectionDefAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSchedulerCollectionDefAccess().getCompComparationNameParserRuleCall_3_2_1_0());
						}
						lv_comp_6_0=ruleComparationName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSchedulerCollectionDefRule());
							}
							add(
								$current,
								"comp",
								lv_comp_6_0,
								"scheduling.Dsl.ComparationName");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_7='with'
			{
				newLeafNode(otherlv_7, grammarAccess.getSchedulerCollectionDefAccess().getWithKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSchedulerCollectionDefAccess().getOperationtypeOperationTypeEnumRuleCall_4_1_0());
					}
					lv_operationtype_8_0=ruleOperationType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchedulerCollectionDefRule());
						}
						set(
							$current,
							"operationtype",
							lv_operationtype_8_0,
							"scheduling.Dsl.OperationType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getSchedulerCollectionDefAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleSchedulerSet
entryRuleSchedulerSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchedulerSetRule()); }
	iv_ruleSchedulerSet=ruleSchedulerSet
	{ $current=$iv_ruleSchedulerSet.current; }
	EOF;

// Rule SchedulerSet
ruleSchedulerSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSchedulerSetAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSchedulerSetRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleGenerate
entryRuleGenerate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenerateRule()); }
	iv_ruleGenerate=ruleGenerate
	{ $current=$iv_ruleGenerate.current; }
	EOF;

// Rule Generate
ruleGenerate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='generate'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenerateAccess().getGenerateKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGenerateAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGenerateAccess().getGenconfigurationGenConfigurationParserRuleCall_2_0());
				}
				lv_genconfiguration_2_0=ruleGenConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenerateRule());
					}
					set(
						$current,
						"genconfiguration",
						lv_genconfiguration_2_0,
						"scheduling.Dsl.GenConfiguration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGenerateAccess().getGencomponentGenComponentParserRuleCall_3_0());
				}
				lv_gencomponent_3_0=ruleGenComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenerateRule());
					}
					set(
						$current,
						"gencomponent",
						lv_gencomponent_3_0,
						"scheduling.Dsl.GenComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGenerateAccess().getStepgenerationStepGenerationParserRuleCall_4_0_0());
					}
					lv_stepgeneration_4_0=ruleStepGeneration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenerateRule());
						}
						set(
							$current,
							"stepgeneration",
							lv_stepgeneration_4_0,
							"scheduling.Dsl.StepGeneration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getGenerateAccess().getProcessgenerationProcessGenerationParserRuleCall_4_1_0());
					}
					lv_processgeneration_5_0=ruleProcessGeneration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenerateRule());
						}
						set(
							$current,
							"processgeneration",
							lv_processgeneration_5_0,
							"scheduling.Dsl.ProcessGeneration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGenerateAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleGenConfiguration
entryRuleGenConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenConfigurationRule()); }
	iv_ruleGenConfiguration=ruleGenConfiguration
	{ $current=$iv_ruleGenConfiguration.current; }
	EOF;

// Rule GenConfiguration
ruleGenConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='configuration'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenConfigurationAccess().getConfigurationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGenConfigurationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGenConfigurationAccess().getGenerateoptionGenerateOptionParserRuleCall_2_0_0());
					}
					lv_generateoption_2_0=ruleGenerateOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenConfigurationRule());
						}
						set(
							$current,
							"generateoption",
							lv_generateoption_2_0,
							"scheduling.Dsl.GenerateOption");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getGenConfigurationAccess().getSemicolonKeyword_2_1());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGenConfigurationAccess().getDirectoryDirectoryParserRuleCall_3_0_0());
					}
					lv_directory_4_0=ruleDirectory
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenConfigurationRule());
						}
						set(
							$current,
							"directory",
							lv_directory_4_0,
							"scheduling.Dsl.Directory");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getGenConfigurationAccess().getSemicolonKeyword_3_1());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGenConfigurationAccess().getFilenameFileNameParserRuleCall_4_0_0());
					}
					lv_filename_6_0=ruleFileName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenConfigurationRule());
						}
						set(
							$current,
							"filename",
							lv_filename_6_0,
							"scheduling.Dsl.FileName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getGenConfigurationAccess().getSemicolonKeyword_4_1());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGenConfigurationAccess().getFileextensionFileExtensionParserRuleCall_5_0_0());
					}
					lv_fileextension_8_0=ruleFileExtension
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenConfigurationRule());
						}
						set(
							$current,
							"fileextension",
							lv_fileextension_8_0,
							"scheduling.Dsl.FileExtension");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=';'
			{
				newLeafNode(otherlv_9, grammarAccess.getGenConfigurationAccess().getSemicolonKeyword_5_1());
			}
		)?
		otherlv_10='test'
		{
			newLeafNode(otherlv_10, grammarAccess.getGenConfigurationAccess().getTestKeyword_6());
		}
		(
			(
				(
					lv_test_11_1='program'
					{
						newLeafNode(lv_test_11_1, grammarAccess.getGenConfigurationAccess().getTestProgramKeyword_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenConfigurationRule());
						}
						setWithLastConsumed($current, "test", lv_test_11_1, null);
					}
					    |
					lv_test_11_2='case'
					{
						newLeafNode(lv_test_11_2, grammarAccess.getGenConfigurationAccess().getTestCaseKeyword_7_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenConfigurationRule());
						}
						setWithLastConsumed($current, "test", lv_test_11_2, null);
					}
					    |
					lv_test_11_3='data'
					{
						newLeafNode(lv_test_11_3, grammarAccess.getGenConfigurationAccess().getTestDataKeyword_7_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenConfigurationRule());
						}
						setWithLastConsumed($current, "test", lv_test_11_3, null);
					}
				)
			)
		)
		otherlv_12='='
		{
			newLeafNode(otherlv_12, grammarAccess.getGenConfigurationAccess().getEqualsSignKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGenConfigurationAccess().getTestpartTestPartParserRuleCall_9_0());
				}
				lv_testpart_13_0=ruleTestPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenConfigurationRule());
					}
					set(
						$current,
						"testpart",
						lv_testpart_13_0,
						"scheduling.Dsl.TestPart");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14=';'
		{
			newLeafNode(otherlv_14, grammarAccess.getGenConfigurationAccess().getSemicolonKeyword_10());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getGenConfigurationAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleGenerateOption
entryRuleGenerateOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenerateOptionRule()); }
	iv_ruleGenerateOption=ruleGenerateOption
	{ $current=$iv_ruleGenerateOption.current; }
	EOF;

// Rule GenerateOption
ruleGenerateOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='option'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenerateOptionAccess().getOptionKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getGenerateOptionAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGenerateOptionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGenerateOptionAccess().getOptionGenOptionEnumRuleCall_3_0());
				}
				lv_option_3_0=ruleGenOption
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenerateOptionRule());
					}
					add(
						$current,
						"option",
						lv_option_3_0,
						"scheduling.Dsl.GenOption");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getGenerateOptionAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenerateOptionAccess().getOptionGenOptionEnumRuleCall_4_1_0());
					}
					lv_option_5_0=ruleGenOption
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenerateOptionRule());
						}
						add(
							$current,
							"option",
							lv_option_5_0,
							"scheduling.Dsl.GenOption");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGenerateOptionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDirectory
entryRuleDirectory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectoryRule()); }
	iv_ruleDirectory=ruleDirectory
	{ $current=$iv_ruleDirectory.current; }
	EOF;

// Rule Directory
ruleDirectory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='directory'
		{
			newLeafNode(otherlv_0, grammarAccess.getDirectoryAccess().getDirectoryKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDirectoryAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_CHAR_SEQUENCE
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDirectoryAccess().getNameCHAR_SEQUENCETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDirectoryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"scheduling.Dsl.CHAR_SEQUENCE");
				}
			)
		)
	)
;

// Entry rule entryRuleFileName
entryRuleFileName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFileNameRule()); }
	iv_ruleFileName=ruleFileName
	{ $current=$iv_ruleFileName.current; }
	EOF;

// Rule FileName
ruleFileName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='file'
		{
			newLeafNode(otherlv_0, grammarAccess.getFileNameAccess().getFileKeyword_0());
		}
		otherlv_1='name'
		{
			newLeafNode(otherlv_1, grammarAccess.getFileNameAccess().getNameKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getFileNameAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_CHAR_SEQUENCE
				{
					newLeafNode(lv_name_3_0, grammarAccess.getFileNameAccess().getNameCHAR_SEQUENCETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFileNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"scheduling.Dsl.CHAR_SEQUENCE");
				}
			)
		)
	)
;

// Entry rule entryRuleFileExtension
entryRuleFileExtension returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFileExtensionRule()); }
	iv_ruleFileExtension=ruleFileExtension
	{ $current=$iv_ruleFileExtension.current; }
	EOF;

// Rule FileExtension
ruleFileExtension returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='file'
		{
			newLeafNode(otherlv_0, grammarAccess.getFileExtensionAccess().getFileKeyword_0());
		}
		otherlv_1='extension'
		{
			newLeafNode(otherlv_1, grammarAccess.getFileExtensionAccess().getExtensionKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getFileExtensionAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_CHAR_SEQUENCE
				{
					newLeafNode(lv_name_3_0, grammarAccess.getFileExtensionAccess().getNameCHAR_SEQUENCETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFileExtensionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"scheduling.Dsl.CHAR_SEQUENCE");
				}
			)
		)
	)
;

// Entry rule entryRuleTestPart
entryRuleTestPart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestPartRule()); }
	iv_ruleTestPart=ruleTestPart
	{ $current=$iv_ruleTestPart.current; }
	EOF;

// Rule TestPart
ruleTestPart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTestPartAccess().getPartGenPartParserRuleCall_0_0());
				}
				lv_part_0_0=ruleGenPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestPartRule());
					}
					add(
						$current,
						"part",
						lv_part_0_0,
						"scheduling.Dsl.GenPart");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='+'
			{
				newLeafNode(otherlv_1, grammarAccess.getTestPartAccess().getPlusSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTestPartAccess().getPartGenPartParserRuleCall_1_1_0());
					}
					lv_part_2_0=ruleGenPart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTestPartRule());
						}
						add(
							$current,
							"part",
							lv_part_2_0,
							"scheduling.Dsl.GenPart");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleGenPart
entryRuleGenPart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenPartRule()); }
	iv_ruleGenPart=ruleGenPart
	{ $current=$iv_ruleGenPart.current; }
	EOF;

// Rule GenPart
ruleGenPart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getGenPartAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					lv_prefix_1_0=RULE_CHAR_SEQUENCE
					{
						newLeafNode(lv_prefix_1_0, grammarAccess.getGenPartAccess().getPrefixCHAR_SEQUENCETerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenPartRule());
						}
						setWithLastConsumed(
							$current,
							"prefix",
							lv_prefix_1_0,
							"scheduling.Dsl.CHAR_SEQUENCE");
					}
				)
			)
			otherlv_2='+'
			{
				newLeafNode(otherlv_2, grammarAccess.getGenPartAccess().getPlusSignKeyword_1_1());
			}
		)?
		(
			(
				(
					lv_name_3_1=RULE_ID
					{
						newLeafNode(lv_name_3_1, grammarAccess.getGenPartAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenPartRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_1,
							"scheduling.Dsl.ID");
					}
					    |
					lv_name_3_2='processes'
					{
						newLeafNode(lv_name_3_2, grammarAccess.getGenPartAccess().getNameProcessesKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenPartRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_2, null);
					}
					    |
					lv_name_3_3='steps'
					{
						newLeafNode(lv_name_3_3, grammarAccess.getGenPartAccess().getNameStepsKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenPartRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_3, null);
					}
					    |
					lv_name_3_4='error'
					{
						newLeafNode(lv_name_3_4, grammarAccess.getGenPartAccess().getNameErrorKeyword_2_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenPartRule());
						}
						setWithLastConsumed($current, "name", lv_name_3_4, null);
					}
				)
			)
		)
		(
			otherlv_4='+'
			{
				newLeafNode(otherlv_4, grammarAccess.getGenPartAccess().getPlusSignKeyword_3_0());
			}
			(
				(
					lv_posfix_5_0=RULE_CHAR_SEQUENCE
					{
						newLeafNode(lv_posfix_5_0, grammarAccess.getGenPartAccess().getPosfixCHAR_SEQUENCETerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenPartRule());
						}
						setWithLastConsumed(
							$current,
							"posfix",
							lv_posfix_5_0,
							"scheduling.Dsl.CHAR_SEQUENCE");
					}
				)
			)
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getGenPartAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleGenComponent
entryRuleGenComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenComponentRule()); }
	iv_ruleGenComponent=ruleGenComponent
	{ $current=$iv_ruleGenComponent.current; }
	EOF;

// Rule GenComponent
ruleGenComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenComponentAccess().getComponentKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGenComponentAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGenComponentAccess().getComponentComponentParserRuleCall_2_0());
				}
				lv_component_2_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenComponentRule());
					}
					add(
						$current,
						"component",
						lv_component_2_0,
						"scheduling.Dsl.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGenComponentAccess().getComponentComponentParserRuleCall_3_0());
				}
				lv_component_3_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenComponentRule());
					}
					add(
						$current,
						"component",
						lv_component_3_0,
						"scheduling.Dsl.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getGenComponentAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getTemplateSetTemplateParserRuleCall_2_0());
				}
				lv_template_2_0=ruleSetTemplate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					set(
						$current,
						"template",
						lv_template_2_0,
						"scheduling.Dsl.SetTemplate");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='contains'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getContainsKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getStmGenCodeStatementParserRuleCall_5_0_0());
					}
					lv_stm_5_1=ruleGenCodeStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"stm",
							lv_stm_5_1,
							"scheduling.Dsl.GenCodeStatement");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getComponentAccess().getStmGenLnCodeStatementParserRuleCall_5_0_1());
					}
					lv_stm_5_2=ruleGenLnCodeStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"stm",
							lv_stm_5_2,
							"scheduling.Dsl.GenLnCodeStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleProcessGeneration
entryRuleProcessGeneration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessGenerationRule()); }
	iv_ruleProcessGeneration=ruleProcessGeneration
	{ $current=$iv_ruleProcessGeneration.current; }
	EOF;

// Rule ProcessGeneration
ruleProcessGeneration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='process'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessGenerationAccess().getProcessKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessGenerationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessGenerationAccess().getProcessTemplateParserRuleCall_2_0());
				}
				lv_process_2_0=ruleTemplate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessGenerationRule());
					}
					set(
						$current,
						"process",
						lv_process_2_0,
						"scheduling.Dsl.Template");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getProcessGenerationAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleStepGeneration
entryRuleStepGeneration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepGenerationRule()); }
	iv_ruleStepGeneration=ruleStepGeneration
	{ $current=$iv_ruleStepGeneration.current; }
	EOF;

// Rule StepGeneration
ruleStepGeneration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='step'
		{
			newLeafNode(otherlv_0, grammarAccess.getStepGenerationAccess().getStepKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getStepGenerationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStepGenerationAccess().getStepTemplateParserRuleCall_2_0());
				}
				lv_step_2_0=ruleTemplate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepGenerationRule());
					}
					set(
						$current,
						"step",
						lv_step_2_0,
						"scheduling.Dsl.Template");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getStepGenerationAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTemplate
entryRuleTemplate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateRule()); }
	iv_ruleTemplate=ruleTemplate
	{ $current=$iv_ruleTemplate.current; }
	EOF;

// Rule Template
ruleTemplate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateAccess().getTemplateSetTemplateParserRuleCall_0_0());
				}
				lv_template_0_0=ruleSetTemplate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateRule());
					}
					set(
						$current,
						"template",
						lv_template_0_0,
						"scheduling.Dsl.SetTemplate");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateAccess().getBehaviorBehaviorParserRuleCall_1_0());
				}
				lv_behavior_1_0=ruleBehavior
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateRule());
					}
					set(
						$current,
						"behavior",
						lv_behavior_1_0,
						"scheduling.Dsl.Behavior");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateAccess().getND_behaviorND_BehaviorParserRuleCall_2_0());
				}
				lv_ND_behavior_2_0=ruleND_Behavior
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateRule());
					}
					set(
						$current,
						"ND_behavior",
						lv_ND_behavior_2_0,
						"scheduling.Dsl.ND_Behavior");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSetTemplate
entryRuleSetTemplate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetTemplateRule()); }
	iv_ruleSetTemplate=ruleSetTemplate
	{ $current=$iv_ruleSetTemplate.current; }
	EOF;

// Rule SetTemplate
ruleSetTemplate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='template'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetTemplateAccess().getTemplateKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSetTemplateAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetTemplateAccess().getTemplExpressionParserRuleCall_2_0());
				}
				lv_templ_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetTemplateRule());
					}
					set(
						$current,
						"templ",
						lv_templ_2_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getSetTemplateAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleBehavior
entryRuleBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBehaviorRule()); }
	iv_ruleBehavior=ruleBehavior
	{ $current=$iv_ruleBehavior.current; }
	EOF;

// Rule Behavior
ruleBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='action'
		{
			newLeafNode(otherlv_0, grammarAccess.getBehaviorAccess().getActionKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBehaviorAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBehaviorAccess().getEventtemplateEventTemplateParserRuleCall_2_0());
				}
				lv_eventtemplate_2_0=ruleEventTemplate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBehaviorRule());
					}
					add(
						$current,
						"eventtemplate",
						lv_eventtemplate_2_0,
						"scheduling.Dsl.EventTemplate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='+'
			{
				newLeafNode(otherlv_3, grammarAccess.getBehaviorAccess().getPlusSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBehaviorAccess().getEventtemplateEventTemplateParserRuleCall_3_1_0());
					}
					lv_eventtemplate_4_0=ruleEventTemplate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBehaviorRule());
						}
						add(
							$current,
							"eventtemplate",
							lv_eventtemplate_4_0,
							"scheduling.Dsl.EventTemplate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getBehaviorAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleEventTemplate
entryRuleEventTemplate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventTemplateRule()); }
	iv_ruleEventTemplate=ruleEventTemplate
	{ $current=$iv_ruleEventTemplate.current; }
	EOF;

// Rule EventTemplate
ruleEventTemplate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getEventTemplateAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEventTemplateAccess().getPrefixExpressionParserRuleCall_1_0_0());
					}
					lv_prefix_1_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventTemplateRule());
						}
						set(
							$current,
							"prefix",
							lv_prefix_1_0,
							"scheduling.Dsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='+'
			{
				newLeafNode(otherlv_2, grammarAccess.getEventTemplateAccess().getPlusSignKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEventTemplateAccess().getEventActionNameEnumRuleCall_2_0());
				}
				lv_event_3_0=ruleActionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventTemplateRule());
					}
					set(
						$current,
						"event",
						lv_event_3_0,
						"scheduling.Dsl.ActionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='+'
			{
				newLeafNode(otherlv_4, grammarAccess.getEventTemplateAccess().getPlusSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventTemplateAccess().getPostfixExpressionParserRuleCall_3_1_0());
					}
					lv_postfix_5_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventTemplateRule());
						}
						set(
							$current,
							"postfix",
							lv_postfix_5_0,
							"scheduling.Dsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getEventTemplateAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleND_Behavior
entryRuleND_Behavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getND_BehaviorRule()); }
	iv_ruleND_Behavior=ruleND_Behavior
	{ $current=$iv_ruleND_Behavior.current; }
	EOF;

// Rule ND_Behavior
ruleND_Behavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='nd_action'
		{
			newLeafNode(otherlv_0, grammarAccess.getND_BehaviorAccess().getNd_actionKeyword_0());
		}
		(
			otherlv_1='@'
			{
				newLeafNode(otherlv_1, grammarAccess.getND_BehaviorAccess().getCommercialAtKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getND_BehaviorAccess().getCondExpressionParserRuleCall_1_1_0());
					}
					lv_cond_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getND_BehaviorRule());
						}
						set(
							$current,
							"cond",
							lv_cond_2_0,
							"scheduling.Dsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getND_BehaviorAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getND_BehaviorAccess().getEventtemplateEventTemplateParserRuleCall_3_0());
				}
				lv_eventtemplate_4_0=ruleEventTemplate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getND_BehaviorRule());
					}
					add(
						$current,
						"eventtemplate",
						lv_eventtemplate_4_0,
						"scheduling.Dsl.EventTemplate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='+'
			{
				newLeafNode(otherlv_5, grammarAccess.getND_BehaviorAccess().getPlusSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getND_BehaviorAccess().getEventtemplateEventTemplateParserRuleCall_4_1_0());
					}
					lv_eventtemplate_6_0=ruleEventTemplate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getND_BehaviorRule());
						}
						add(
							$current,
							"eventtemplate",
							lv_eventtemplate_6_0,
							"scheduling.Dsl.EventTemplate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getND_BehaviorAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleHandlerDef
entryRuleHandlerDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHandlerDefRule()); }
	iv_ruleHandlerDef=ruleHandlerDef
	{ $current=$iv_ruleHandlerDef.current; }
	EOF;

// Rule HandlerDef
ruleHandlerDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHandlerDefAccess().getHandlerDefAction_0(),
					$current);
			}
		)
		otherlv_1='event'
		{
			newLeafNode(otherlv_1, grammarAccess.getHandlerDefAccess().getEventKeyword_1());
		}
		otherlv_2='handler'
		{
			newLeafNode(otherlv_2, grammarAccess.getHandlerDefAccess().getHandlerKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getHandlerDefAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHandlerDefAccess().getEventEventDefParserRuleCall_4_0());
				}
				lv_event_4_0=ruleEventDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHandlerDefRule());
					}
					add(
						$current,
						"event",
						lv_event_4_0,
						"scheduling.Dsl.EventDef");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getHandlerDefAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEventDef
entryRuleEventDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventDefRule()); }
	iv_ruleEventDef=ruleEventDef
	{ $current=$iv_ruleEventDef.current; }
	EOF;

// Rule EventDef
ruleEventDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEventDefAccess().getEventnameEventNameEnumRuleCall_0_0());
				}
				lv_eventname_0_0=ruleEventName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventDefRule());
					}
					set(
						$current,
						"eventname",
						lv_eventname_0_0,
						"scheduling.Dsl.EventName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEventDefAccess().getLeftParenthesisKeyword_1());
		}
		(
			otherlv_2='process'
			{
				newLeafNode(otherlv_2, grammarAccess.getEventDefAccess().getProcessKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventDefAccess().getProcessnameProcessParserRuleCall_2_1_0());
					}
					lv_processname_3_0=ruleProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventDefRule());
						}
						set(
							$current,
							"processname",
							lv_processname_3_0,
							"scheduling.Dsl.Process");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getEventDefAccess().getRightParenthesisKeyword_3());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getEventDefAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEventDefAccess().getEventEventOptParserRuleCall_5_0_0());
					}
					lv_event_6_1=ruleEventOpt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventDefRule());
						}
						set(
							$current,
							"event",
							lv_event_6_1,
							"scheduling.Dsl.EventOpt");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEventDefAccess().getEventEventStmParserRuleCall_5_0_1());
					}
					lv_event_6_2=ruleEventStm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventDefRule());
						}
						set(
							$current,
							"event",
							lv_event_6_2,
							"scheduling.Dsl.EventStm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getEventDefAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEventOpt
entryRuleEventOpt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventOptRule()); }
	iv_ruleEventOpt=ruleEventOpt
	{ $current=$iv_ruleEventOpt.current; }
	EOF;

// Rule EventOpt
ruleEventOpt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEventOptAccess().getOptOptParserRuleCall_0_0());
				}
				lv_opt_0_0=ruleOpt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventOptRule());
					}
					add(
						$current,
						"opt",
						lv_opt_0_0,
						"scheduling.Dsl.Opt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventOptAccess().getOptOptParserRuleCall_1_0());
				}
				lv_opt_1_0=ruleOpt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventOptRule());
					}
					add(
						$current,
						"opt",
						lv_opt_1_0,
						"scheduling.Dsl.Opt");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleOpt
entryRuleOpt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptRule()); }
	iv_ruleOpt=ruleOpt
	{ $current=$iv_ruleOpt.current; }
	EOF;

// Rule Opt
ruleOpt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='opt'
		{
			newLeafNode(otherlv_0, grammarAccess.getOptAccess().getOptKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOptAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOptAccess().getEventstmEventStmParserRuleCall_2_0());
				}
				lv_eventstm_2_0=ruleEventStm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOptRule());
					}
					set(
						$current,
						"eventstm",
						lv_eventstm_2_0,
						"scheduling.Dsl.EventStm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getOptAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEventStm
entryRuleEventStm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventStmRule()); }
	iv_ruleEventStm=ruleEventStm
	{ $current=$iv_ruleEventStm.current; }
	EOF;

// Rule EventStm
ruleEventStm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEventStmAccess().getStatementsStmParserRuleCall_0_0());
				}
				lv_statements_0_0=ruleStm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventStmRule());
					}
					add(
						$current,
						"statements",
						lv_statements_0_0,
						"scheduling.Dsl.Stm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventStmAccess().getStatementsStmParserRuleCall_1_0());
				}
				lv_statements_1_0=ruleStm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventStmRule());
					}
					add(
						$current,
						"statements",
						lv_statements_1_0,
						"scheduling.Dsl.Stm");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStm
entryRuleStm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStmRule()); }
	iv_ruleStm=ruleStm
	{ $current=$iv_ruleStm.current; }
	EOF;

// Rule Stm
ruleStm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStmAccess().getIfdefIfDefParserRuleCall_0_0());
				}
				lv_ifdef_0_0=ruleIfDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStmRule());
					}
					set(
						$current,
						"ifdef",
						lv_ifdef_0_0,
						"scheduling.Dsl.IfDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStmAccess().getStatementStatementParserRuleCall_1_0());
				}
				lv_statement_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStmRule());
					}
					set(
						$current,
						"statement",
						lv_statement_1_0,
						"scheduling.Dsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getJavaCodeParserRuleCall_0());
		}
		this_JavaCode_0=ruleJavaCode
		{
			$current = $this_JavaCode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getMoveProcessParserRuleCall_1());
		}
		this_MoveProcess_1=ruleMoveProcess
		{
			$current = $this_MoveProcess_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReorderProcessParserRuleCall_2());
		}
		this_ReorderProcess_2=ruleReorderProcess
		{
			$current = $this_ReorderProcess_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSetProcessInstanceParserRuleCall_3());
		}
		this_SetProcessInstance_3=ruleSetProcessInstance
		{
			$current = $this_SetProcessInstance_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLoopProcessParserRuleCall_4());
		}
		this_LoopProcess_4=ruleLoopProcess
		{
			$current = $this_LoopProcess_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getGetProcessParserRuleCall_5());
		}
		this_GetProcess_5=ruleGetProcess
		{
			$current = $this_GetProcess_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getRemoveProcessParserRuleCall_6());
		}
		this_RemoveProcess_6=ruleRemoveProcess
		{
			$current = $this_RemoveProcess_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getChangeValueParserRuleCall_7());
		}
		this_ChangeValue_7=ruleChangeValue
		{
			$current = $this_ChangeValue_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSetExecTimeParserRuleCall_8());
		}
		this_SetExecTime_8=ruleSetExecTime
		{
			$current = $this_SetExecTime_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSetReturnColParserRuleCall_9());
		}
		this_SetReturnCol_9=ruleSetReturnCol
		{
			$current = $this_SetReturnCol_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSetReturnSetParserRuleCall_10());
		}
		this_SetReturnSet_10=ruleSetReturnSet
		{
			$current = $this_SetReturnSet_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_11());
		}
		this_IfStatement_11=ruleIfStatement
		{
			$current = $this_IfStatement_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getAssertStatementParserRuleCall_12());
		}
		this_AssertStatement_12=ruleAssertStatement
		{
			$current = $this_AssertStatement_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getPrintStatementParserRuleCall_13());
		}
		this_PrintStatement_13=rulePrintStatement
		{
			$current = $this_PrintStatement_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getPrintLogStatementParserRuleCall_14());
		}
		this_PrintLogStatement_14=rulePrintLogStatement
		{
			$current = $this_PrintLogStatement_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getGenCodeStatementParserRuleCall_15());
		}
		this_GenCodeStatement_15=ruleGenCodeStatement
		{
			$current = $this_GenCodeStatement_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getGenLnCodeStatementParserRuleCall_16());
		}
		this_GenLnCodeStatement_16=ruleGenLnCodeStatement
		{
			$current = $this_GenLnCodeStatement_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getNewProcessStatementParserRuleCall_17());
		}
		this_NewProcessStatement_17=ruleNewProcessStatement
		{
			$current = $this_NewProcessStatement_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getCallFunctionParserRuleCall_18());
		}
		this_CallFunction_18=ruleCallFunction
		{
			$current = $this_CallFunction_18.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_19());
		}
		this_BlockStatement_19=ruleBlockStatement
		{
			$current = $this_BlockStatement_19.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_20());
		}
		this_ReturnStatement_20=ruleReturnStatement
		{
			$current = $this_ReturnStatement_20.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getCheckPointParserRuleCall_21());
		}
		this_CheckPoint_21=ruleCheckPoint
		{
			$current = $this_CheckPoint_21.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDeclareProcessParserRuleCall_22());
		}
		this_DeclareProcess_22=ruleDeclareProcess
		{
			$current = $this_DeclareProcess_22.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSetProcessParserRuleCall_23());
		}
		this_SetProcess_23=ruleSetProcess
		{
			$current = $this_SetProcess_23.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJavaCode
entryRuleJavaCode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJavaCodeRule()); }
	iv_ruleJavaCode=ruleJavaCode
	{ $current=$iv_ruleJavaCode.current; }
	EOF;

// Rule JavaCode
ruleJavaCode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='code'
		{
			newLeafNode(otherlv_0, grammarAccess.getJavaCodeAccess().getCodeKeyword_0());
		}
		(
			(
				lv_code_1_0=RULE_ML_CODE
				{
					newLeafNode(lv_code_1_0, grammarAccess.getJavaCodeAccess().getCodeML_CODETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaCodeRule());
					}
					setWithLastConsumed(
						$current,
						"code",
						lv_code_1_0,
						"scheduling.Dsl.ML_CODE");
				}
			)
		)
	)
;

// Entry rule entryRuleDeclareProcess
entryRuleDeclareProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclareProcessRule()); }
	iv_ruleDeclareProcess=ruleDeclareProcess
	{ $current=$iv_ruleDeclareProcess.current; }
	EOF;

// Rule DeclareProcess
ruleDeclareProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='process'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeclareProcessAccess().getProcessKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclareProcessAccess().getProcessProcessParserRuleCall_1_0());
				}
				lv_process_1_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclareProcessRule());
					}
					set(
						$current,
						"process",
						lv_process_1_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeclareProcessAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleSetProcess
entryRuleSetProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetProcessRule()); }
	iv_ruleSetProcess=ruleSetProcess
	{ $current=$iv_ruleSetProcess.current; }
	EOF;

// Rule SetProcess
ruleSetProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSetProcessAccess().getProcessProcessParserRuleCall_0_0());
				}
				lv_process_0_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetProcessRule());
					}
					set(
						$current,
						"process",
						lv_process_0_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSetProcessAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='get_process'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetProcessAccess().getGet_processKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getSetProcessAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					lv_id_4_0=RULE_INT
					{
						newLeafNode(lv_id_4_0, grammarAccess.getSetProcessAccess().getIdINTTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSetProcessRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			    |
			(
				(
					lv_pid_5_0=RULE_ID
					{
						newLeafNode(lv_pid_5_0, grammarAccess.getSetProcessAccess().getPidIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSetProcessRule());
						}
						setWithLastConsumed(
							$current,
							"pid",
							lv_pid_5_0,
							"scheduling.Dsl.ID");
					}
				)
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getSetProcessAccess().getRightParenthesisKeyword_5());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSetProcessAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleSetExecTime
entryRuleSetExecTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetExecTimeRule()); }
	iv_ruleSetExecTime=ruleSetExecTime
	{ $current=$iv_ruleSetExecTime.current; }
	EOF;

// Rule SetExecTime
ruleSetExecTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='time_slice'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetExecTimeAccess().getTime_sliceKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSetExecTimeAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetExecTimeAccess().getExprExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetExecTimeRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getSetExecTimeAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleSetReturnCol
entryRuleSetReturnCol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetReturnColRule()); }
	iv_ruleSetReturnCol=ruleSetReturnCol
	{ $current=$iv_ruleSetReturnCol.current; }
	EOF;

// Rule SetReturnCol
ruleSetReturnCol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return_set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetReturnColAccess().getReturn_setKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSetReturnColAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetReturnColAccess().getColSchedulerSetParserRuleCall_2_0());
				}
				lv_col_2_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetReturnColRule());
					}
					set(
						$current,
						"col",
						lv_col_2_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getSetReturnColAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleSetReturnSet
entryRuleSetReturnSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetReturnSetRule()); }
	iv_ruleSetReturnSet=ruleSetReturnSet
	{ $current=$iv_ruleSetReturnSet.current; }
	EOF;

// Rule SetReturnSet
ruleSetReturnSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return_set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetReturnSetAccess().getReturn_setKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSetReturnSetAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetReturnSetAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetReturnSetAccess().getColSchedulerSetParserRuleCall_3_0());
				}
				lv_col_3_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetReturnSetRule());
					}
					add(
						$current,
						"col",
						lv_col_3_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSetReturnSetAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetReturnSetAccess().getColSchedulerSetParserRuleCall_4_1_0());
					}
					lv_col_5_0=ruleSchedulerSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetReturnSetRule());
						}
						add(
							$current,
							"col",
							lv_col_5_0,
							"scheduling.Dsl.SchedulerSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSetReturnSetAccess().getRightCurlyBracketKeyword_5());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSetReturnSetAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleCheckPoint
entryRuleCheckPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckPointRule()); }
	iv_ruleCheckPoint=ruleCheckPoint
	{ $current=$iv_ruleCheckPoint.current; }
	EOF;

// Rule CheckPoint
ruleCheckPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='checkpoint'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckPointAccess().getCheckpointKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckPointAccess().getPointidPointIDParserRuleCall_1_0());
				}
				lv_pointid_1_0=rulePointID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckPointRule());
					}
					set(
						$current,
						"pointid",
						lv_pointid_1_0,
						"scheduling.Dsl.PointID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getCheckPointAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRulePointID
entryRulePointID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointIDRule()); }
	iv_rulePointID=rulePointID
	{ $current=$iv_rulePointID.current; }
	EOF;

// Rule PointID
rulePointID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getPointIDAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPointIDRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"scheduling.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleCallFunction
entryRuleCallFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallFunctionRule()); }
	iv_ruleCallFunction=ruleCallFunction
	{ $current=$iv_ruleCallFunction.current; }
	EOF;

// Rule CallFunction
ruleCallFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='call'
		{
			newLeafNode(otherlv_0, grammarAccess.getCallFunctionAccess().getCallKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCallFunctionAccess().getFuncNameFunctionNameParserRuleCall_1_0());
				}
				lv_funcName_1_0=ruleFunctionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCallFunctionRule());
					}
					set(
						$current,
						"funcName",
						lv_funcName_1_0,
						"scheduling.Dsl.FunctionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getCallFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCallFunctionAccess().getProcessProcessParserRuleCall_3_0());
				}
				lv_process_3_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCallFunctionRule());
					}
					set(
						$current,
						"process",
						lv_process_3_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getCallFunctionAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCallFunctionAccess().getParameterlistInterfaceParameterListParserRuleCall_4_1_0());
					}
					lv_parameterlist_5_0=ruleInterfaceParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCallFunctionRule());
						}
						set(
							$current,
							"parameterlist",
							lv_parameterlist_5_0,
							"scheduling.Dsl.InterfaceParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getCallFunctionAccess().getRightParenthesisKeyword_5());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getCallFunctionAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleRemoveProcess
entryRuleRemoveProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveProcessRule()); }
	iv_ruleRemoveProcess=ruleRemoveProcess
	{ $current=$iv_ruleRemoveProcess.current; }
	EOF;

// Rule RemoveProcess
ruleRemoveProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='remove'
		{
			newLeafNode(otherlv_0, grammarAccess.getRemoveProcessAccess().getRemoveKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveProcessAccess().getProcessProcessParserRuleCall_1_0());
				}
				lv_process_1_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveProcessRule());
					}
					set(
						$current,
						"process",
						lv_process_1_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getRemoveProcessAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleMoveProcess
entryRuleMoveProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveProcessRule()); }
	iv_ruleMoveProcess=ruleMoveProcess
	{ $current=$iv_ruleMoveProcess.current; }
	EOF;

// Rule MoveProcess
ruleMoveProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='move'
		{
			newLeafNode(otherlv_0, grammarAccess.getMoveProcessAccess().getMoveKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMoveProcessAccess().getProcessProcessParserRuleCall_1_0());
				}
				lv_process_1_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoveProcessRule());
					}
					set(
						$current,
						"process",
						lv_process_1_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getMoveProcessAccess().getToKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMoveProcessAccess().getColToSchedulerSetParserRuleCall_3_0());
				}
				lv_colTo_3_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoveProcessRule());
					}
					set(
						$current,
						"colTo",
						lv_colTo_3_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getMoveProcessAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleReorderProcess
entryRuleReorderProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReorderProcessRule()); }
	iv_ruleReorderProcess=ruleReorderProcess
	{ $current=$iv_ruleReorderProcess.current; }
	EOF;

// Rule ReorderProcess
ruleReorderProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='reorder'
		{
			newLeafNode(otherlv_0, grammarAccess.getReorderProcessAccess().getReorderKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReorderProcessAccess().getProcessProcessParserRuleCall_1_0());
				}
				lv_process_1_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReorderProcessRule());
					}
					set(
						$current,
						"process",
						lv_process_1_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getReorderProcessAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReorderProcessAccess().getColToSchedulerSetParserRuleCall_3_0());
				}
				lv_colTo_3_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReorderProcessRule());
					}
					set(
						$current,
						"colTo",
						lv_colTo_3_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getReorderProcessAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleSetProcessInstance
entryRuleSetProcessInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetProcessInstanceRule()); }
	iv_ruleSetProcessInstance=ruleSetProcessInstance
	{ $current=$iv_ruleSetProcessInstance.current; }
	EOF;

// Rule SetProcessInstance
ruleSetProcessInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetProcessInstanceAccess().getSetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetProcessInstanceAccess().getProcessProcessParserRuleCall_1_0());
				}
				lv_process_1_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetProcessInstanceRule());
					}
					set(
						$current,
						"process",
						lv_process_1_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetProcessInstanceAccess().getToKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetProcessInstanceAccess().getColToSchedulerSetParserRuleCall_3_0());
				}
				lv_colTo_3_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetProcessInstanceRule());
					}
					set(
						$current,
						"colTo",
						lv_colTo_3_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getSetProcessInstanceAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleLoopProcess
entryRuleLoopProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopProcessRule()); }
	iv_ruleLoopProcess=ruleLoopProcess
	{ $current=$iv_ruleLoopProcess.current; }
	EOF;

// Rule LoopProcess
ruleLoopProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopProcessAccess().getForKeyword_0());
		}
		otherlv_1='each'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopProcessAccess().getEachKeyword_1());
		}
		otherlv_2='process'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoopProcessAccess().getProcessKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopProcessAccess().getPnameProcessParserRuleCall_3_0());
				}
				lv_pname_3_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopProcessRule());
					}
					set(
						$current,
						"pname",
						lv_pname_3_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getLoopProcessAccess().getInKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopProcessAccess().getColFromSchedulerSetParserRuleCall_5_0());
				}
				lv_colFrom_5_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopProcessRule());
					}
					set(
						$current,
						"colFrom",
						lv_colFrom_5_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopProcessAccess().getStatementStatementParserRuleCall_6_0());
				}
				lv_statement_6_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopProcessRule());
					}
					set(
						$current,
						"statement",
						lv_statement_6_0,
						"scheduling.Dsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleChangeAction
entryRuleChangeAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeActionRule()); }
	iv_ruleChangeAction=ruleChangeAction
	{ $current=$iv_ruleChangeAction.current; }
	EOF;

// Rule ChangeAction
ruleChangeAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getChangeActionAccess().getChangeActionAction_0(),
					$current);
			}
		)
		otherlv_1='set'
		{
			newLeafNode(otherlv_1, grammarAccess.getChangeActionAccess().getSetKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getChangeActionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getChangeActionAccess().getStaChangeValueParserRuleCall_3_0_0());
					}
					lv_sta_3_1=ruleChangeValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChangeActionRule());
						}
						add(
							$current,
							"sta",
							lv_sta_3_1,
							"scheduling.Dsl.ChangeValue");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getChangeActionAccess().getStaAssertStatementParserRuleCall_3_0_1());
					}
					lv_sta_3_2=ruleAssertStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChangeActionRule());
						}
						add(
							$current,
							"sta",
							lv_sta_3_2,
							"scheduling.Dsl.AssertStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getChangeActionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleGetProcess
entryRuleGetProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetProcessRule()); }
	iv_ruleGetProcess=ruleGetProcess
	{ $current=$iv_ruleGetProcess.current; }
	EOF;

// Rule GetProcess
ruleGetProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='get'
		{
			newLeafNode(otherlv_0, grammarAccess.getGetProcessAccess().getGetKeyword_0());
		}
		otherlv_1='process'
		{
			newLeafNode(otherlv_1, grammarAccess.getGetProcessAccess().getProcessKeyword_1());
		}
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getGetProcessAccess().getFromKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGetProcessAccess().getColFromSchedulerSetParserRuleCall_3_0());
				}
				lv_colFrom_3_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGetProcessRule());
					}
					set(
						$current,
						"colFrom",
						lv_colFrom_3_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGetProcessAccess().getChangeChangeActionParserRuleCall_4_0());
				}
				lv_change_4_0=ruleChangeAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGetProcessRule());
					}
					set(
						$current,
						"change",
						lv_change_4_0,
						"scheduling.Dsl.ChangeAction");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='to'
		{
			newLeafNode(otherlv_5, grammarAccess.getGetProcessAccess().getToKeyword_5());
		}
		otherlv_6='run'
		{
			newLeafNode(otherlv_6, grammarAccess.getGetProcessAccess().getRunKeyword_6());
		}
		(
			otherlv_7='in'
			{
				newLeafNode(otherlv_7, grammarAccess.getGetProcessAccess().getInKeyword_7_0());
			}
			otherlv_8='time'
			{
				newLeafNode(otherlv_8, grammarAccess.getGetProcessAccess().getTimeKeyword_7_1());
			}
			otherlv_9='='
			{
				newLeafNode(otherlv_9, grammarAccess.getGetProcessAccess().getEqualsSignKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGetProcessAccess().getTimeExpressionParserRuleCall_7_3_0());
					}
					lv_time_10_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGetProcessRule());
						}
						set(
							$current,
							"time",
							lv_time_10_0,
							"scheduling.Dsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='then'
			{
				newLeafNode(otherlv_11, grammarAccess.getGetProcessAccess().getThenKeyword_7_4());
			}
			otherlv_12='return'
			{
				newLeafNode(otherlv_12, grammarAccess.getGetProcessAccess().getReturnKeyword_7_5());
			}
			otherlv_13='to'
			{
				newLeafNode(otherlv_13, grammarAccess.getGetProcessAccess().getToKeyword_7_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGetProcessAccess().getColToSchedulerSetParserRuleCall_7_7_0());
					}
					lv_colTo_14_0=ruleSchedulerSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGetProcessRule());
						}
						set(
							$current,
							"colTo",
							lv_colTo_14_0,
							"scheduling.Dsl.SchedulerSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_15=';'
		{
			newLeafNode(otherlv_15, grammarAccess.getGetProcessAccess().getSemicolonKeyword_8());
		}
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getThenBlockStatementParserRuleCall_4_0());
				}
				lv_thenBlock_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"thenBlock",
						lv_thenBlock_4_0,
						"scheduling.Dsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('else')=>
				otherlv_5='else'
				{
					newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseBlockStatementParserRuleCall_5_1_0());
					}
					lv_elseBlock_6_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"elseBlock",
							lv_elseBlock_6_0,
							"scheduling.Dsl.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleBlockStatement
entryRuleBlockStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockStatementRule()); }
	iv_ruleBlockStatement=ruleBlockStatement
	{ $current=$iv_ruleBlockStatement.current; }
	EOF;

// Rule BlockStatement
ruleBlockStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockStatementAccess().getBlockStatementAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockStatementAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockStatementAccess().getStatementsStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockStatementRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"scheduling.Dsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getBlockStatementAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleNewProcessStatement
entryRuleNewProcessStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNewProcessStatementRule()); }
	iv_ruleNewProcessStatement=ruleNewProcessStatement
	{ $current=$iv_ruleNewProcessStatement.current; }
	EOF;

// Rule NewProcessStatement
ruleNewProcessStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='new'
		{
			newLeafNode(otherlv_0, grammarAccess.getNewProcessStatementAccess().getNewKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNewProcessStatementAccess().getElementNewElementParserRuleCall_1_0());
				}
				lv_element_1_0=ruleNewElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNewProcessStatementRule());
					}
					set(
						$current,
						"element",
						lv_element_1_0,
						"scheduling.Dsl.NewElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getNewProcessStatementAccess().getCommaKeyword_2_0());
			}
			(
				(
					lv_max_3_0=RULE_INT
					{
						newLeafNode(lv_max_3_0, grammarAccess.getNewProcessStatementAccess().getMaxINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNewProcessStatementRule());
						}
						setWithLastConsumed(
							$current,
							"max",
							lv_max_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getNewProcessStatementAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleNewElement
entryRuleNewElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNewElementRule()); }
	iv_ruleNewElement=ruleNewElement
	{ $current=$iv_ruleNewElement.current; }
	EOF;

// Rule NewElement
ruleNewElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNewElementAccess().getProcessProcessParserRuleCall_0_0());
				}
				lv_process_0_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNewElementRule());
					}
					set(
						$current,
						"process",
						lv_process_0_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getNewElementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNewElementAccess().getParaAssignParaValueParserRuleCall_2_0_0());
					}
					lv_paraAssign_2_0=ruleParaValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNewElementRule());
						}
						add(
							$current,
							"paraAssign",
							lv_paraAssign_2_0,
							"scheduling.Dsl.ParaValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getNewElementAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNewElementAccess().getParaAssignParaValueParserRuleCall_2_1_1_0());
						}
						lv_paraAssign_4_0=ruleParaValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNewElementRule());
							}
							add(
								$current,
								"paraAssign",
								lv_paraAssign_4_0,
								"scheduling.Dsl.ParaValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getNewElementAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleParaValue
entryRuleParaValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParaValueRule()); }
	iv_ruleParaValue=ruleParaValue
	{ $current=$iv_ruleParaValue.current; }
	EOF;

// Rule ParaValue
ruleParaValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getParaValueAccess().getParaValueAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getParaValueAccess().getNumNumValueParserRuleCall_0_1_0());
					}
					lv_num_1_0=ruleNumValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParaValueRule());
						}
						set(
							$current,
							"num",
							lv_num_1_0,
							"scheduling.Dsl.NumValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getParaValueAccess().getBoolBoolValueParserRuleCall_1_0());
				}
				lv_bool_2_0=ruleBoolValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParaValueRule());
					}
					set(
						$current,
						"bool",
						lv_bool_2_0,
						"scheduling.Dsl.BoolValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_id_3_0=RULE_ID
				{
					newLeafNode(lv_id_3_0, grammarAccess.getParaValueAccess().getIdIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParaValueRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_3_0,
						"scheduling.Dsl.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAssertStatement
entryRuleAssertStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssertStatementRule()); }
	iv_ruleAssertStatement=ruleAssertStatement
	{ $current=$iv_ruleAssertStatement.current; }
	EOF;

// Rule AssertStatement
ruleAssertStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='assert'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssertStatementAccess().getAssertKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssertStatementAccess().getExprExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssertStatementRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssertStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRulePrintStatement
entryRulePrintStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintStatementRule()); }
	iv_rulePrintStatement=rulePrintStatement
	{ $current=$iv_rulePrintStatement.current; }
	EOF;

// Rule PrintStatement
rulePrintStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='print'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintStatementAccess().getPrintKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintStatementAccess().getStExpressionParserRuleCall_1_0());
				}
				lv_st_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintStatementRule());
					}
					set(
						$current,
						"st",
						lv_st_1_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrintStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRulePrintLogStatement
entryRulePrintLogStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintLogStatementRule()); }
	iv_rulePrintLogStatement=rulePrintLogStatement
	{ $current=$iv_rulePrintLogStatement.current; }
	EOF;

// Rule PrintLogStatement
rulePrintLogStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='printlog'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintLogStatementAccess().getPrintlogKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintLogStatementAccess().getStExpressionParserRuleCall_1_0());
				}
				lv_st_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintLogStatementRule());
					}
					set(
						$current,
						"st",
						lv_st_1_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrintLogStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleGenCodeStatement
entryRuleGenCodeStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenCodeStatementRule()); }
	iv_ruleGenCodeStatement=ruleGenCodeStatement
	{ $current=$iv_ruleGenCodeStatement.current; }
	EOF;

// Rule GenCodeStatement
ruleGenCodeStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='gen'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenCodeStatementAccess().getGenKeyword_0());
		}
		(
			(
				(
					lv_comp_1_0=RULE_ID
					{
						newLeafNode(lv_comp_1_0, grammarAccess.getGenCodeStatementAccess().getCompIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenCodeStatementRule());
						}
						setWithLastConsumed(
							$current,
							"comp",
							lv_comp_1_0,
							"scheduling.Dsl.ID");
					}
				)
			)
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getGenCodeStatementAccess().getCommaKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getGenCodeStatementAccess().getStExpressionParserRuleCall_2_0());
				}
				lv_st_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenCodeStatementRule());
					}
					set(
						$current,
						"st",
						lv_st_3_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getGenCodeStatementAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleGenLnCodeStatement
entryRuleGenLnCodeStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenLnCodeStatementRule()); }
	iv_ruleGenLnCodeStatement=ruleGenLnCodeStatement
	{ $current=$iv_ruleGenLnCodeStatement.current; }
	EOF;

// Rule GenLnCodeStatement
ruleGenLnCodeStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='genln'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenLnCodeStatementAccess().getGenlnKeyword_0());
		}
		(
			(
				(
					lv_comp_1_0=RULE_ID
					{
						newLeafNode(lv_comp_1_0, grammarAccess.getGenLnCodeStatementAccess().getCompIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGenLnCodeStatementRule());
						}
						setWithLastConsumed(
							$current,
							"comp",
							lv_comp_1_0,
							"scheduling.Dsl.ID");
					}
				)
			)
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getGenLnCodeStatementAccess().getCommaKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getGenLnCodeStatementAccess().getStExpressionParserRuleCall_2_0());
				}
				lv_st_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenLnCodeStatementRule());
					}
					set(
						$current,
						"st",
						lv_st_3_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getGenLnCodeStatementAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleChangeValue
entryRuleChangeValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeValueRule()); }
	iv_ruleChangeValue=ruleChangeValue
	{ $current=$iv_ruleChangeValue.current; }
	EOF;

// Rule ChangeValue
ruleChangeValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getChangeValueAccess().getChangeValueUnOpParserRuleCall_0());
		}
		this_ChangeValueUnOp_0=ruleChangeValueUnOp
		{
			$current = $this_ChangeValueUnOp_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getChangeValueAccess().getChangeValueExpressionParserRuleCall_1());
		}
		this_ChangeValueExpression_1=ruleChangeValueExpression
		{
			$current = $this_ChangeValueExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getChangeValueAccess().getChangeListValueParserRuleCall_2());
		}
		this_ChangeListValue_2=ruleChangeListValue
		{
			$current = $this_ChangeListValue_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleChangeValueUnOp
entryRuleChangeValueUnOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeValueUnOpRule()); }
	iv_ruleChangeValueUnOp=ruleChangeValueUnOp
	{ $current=$iv_ruleChangeValueUnOp.current; }
	EOF;

// Rule ChangeValueUnOp
ruleChangeValueUnOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeValueUnOpAccess().getVarQualifiedNamesParserRuleCall_0_0());
				}
				lv_var_0_0=ruleQualifiedNames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeValueUnOpRule());
					}
					set(
						$current,
						"var",
						lv_var_0_0,
						"scheduling.Dsl.QualifiedNames");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_op_1_1='++'
					{
						newLeafNode(lv_op_1_1, grammarAccess.getChangeValueUnOpAccess().getOpPlusSignPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChangeValueUnOpRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_1, null);
					}
					    |
					lv_op_1_2='--'
					{
						newLeafNode(lv_op_1_2, grammarAccess.getChangeValueUnOpAccess().getOpHyphenMinusHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChangeValueUnOpRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_2, null);
					}
				)
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getChangeValueUnOpAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleChangeValueExpression
entryRuleChangeValueExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeValueExpressionRule()); }
	iv_ruleChangeValueExpression=ruleChangeValueExpression
	{ $current=$iv_ruleChangeValueExpression.current; }
	EOF;

// Rule ChangeValueExpression
ruleChangeValueExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeValueExpressionAccess().getVarQualifiedNamesParserRuleCall_0_0());
				}
				lv_var_0_0=ruleQualifiedNames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeValueExpressionRule());
					}
					set(
						$current,
						"var",
						lv_var_0_0,
						"scheduling.Dsl.QualifiedNames");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getChangeValueExpressionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeValueExpressionAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeValueExpressionRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getChangeValueExpressionAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleChangeListValue
entryRuleChangeListValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeListValueRule()); }
	iv_ruleChangeListValue=ruleChangeListValue
	{ $current=$iv_ruleChangeListValue.current; }
	EOF;

// Rule ChangeListValue
ruleChangeListValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeListValueAccess().getLvarListElementParserRuleCall_0_0());
				}
				lv_lvar_0_0=ruleListElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeListValueRule());
					}
					set(
						$current,
						"lvar",
						lv_lvar_0_0,
						"scheduling.Dsl.ListElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getChangeListValueAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeListValueAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeListValueRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"scheduling.Dsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getChangeListValueAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getOrParserRuleCall());
	}
	this_Or_0=ruleOr
	{
		$current = $this_Or_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='||'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"scheduling.Dsl.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getEqualityParserRuleCall_0());
		}
		this_Equality_0=ruleEquality
		{
			$current = $this_Equality_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='&&'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEquality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"scheduling.Dsl.Equality");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEquality
entryRuleEquality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityRule()); }
	iv_ruleEquality=ruleEquality
	{ $current=$iv_ruleEquality.current; }
	EOF;

// Rule Equality
ruleEquality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='=='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='!='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"scheduling.Dsl.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0());
		}
		this_PlusOrMinus_0=rulePlusOrMinus
		{
			$current = $this_PlusOrMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='>='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='<='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='>'
						{
							newLeafNode(lv_op_2_3, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4='<'
						{
							newLeafNode(lv_op_2_4, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusOrMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"scheduling.Dsl.PlusOrMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusRule()); }
	iv_rulePlusOrMinus=rulePlusOrMinus
	{ $current=$iv_rulePlusOrMinus.current; }
	EOF;

// Rule PlusOrMinus
rulePlusOrMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0());
		}
		this_MulOrDiv_0=ruleMulOrDiv
		{
			$current = $this_MulOrDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMulOrDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"scheduling.Dsl.MulOrDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulOrDivRule()); }
	iv_ruleMulOrDiv=ruleMulOrDiv
	{ $current=$iv_ruleMulOrDiv.current; }
	EOF;

// Rule MulOrDiv
ruleMulOrDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulOrDivAccess().getImpliesParserRuleCall_0());
		}
		this_Implies_0=ruleImplies
		{
			$current = $this_Implies_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='*'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='/'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulOrDivAccess().getRightImpliesParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleImplies
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulOrDivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"scheduling.Dsl.Implies");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleImplies
entryRuleImplies returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImpliesRule()); }
	iv_ruleImplies=ruleImplies
	{ $current=$iv_ruleImplies.current; }
	EOF;

// Rule Implies
ruleImplies returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImpliesAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getImpliesAccess().getImpliesLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0='=>'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getImpliesAccess().getOpEqualsSignGreaterThanSignKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImpliesRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "=>");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getImpliesAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImpliesRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"scheduling.Dsl.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNotAction_1_0(),
						$current);
				}
			)
			otherlv_4='!'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0());
					}
					lv_expression_5_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_5_0,
							"scheduling.Dsl.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2());
		}
		this_Atomic_6=ruleAtomic
		{
			$current = $this_Atomic_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getEmptyExpressionParserRuleCall_3());
		}
		this_EmptyExpression_7=ruleEmptyExpression
		{
			$current = $this_EmptyExpression_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getFullExpressionParserRuleCall_4());
		}
		this_FullExpression_8=ruleFullExpression
		{
			$current = $this_FullExpression_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getNullExpressionParserRuleCall_5());
		}
		this_NullExpression_9=ruleNullExpression
		{
			$current = $this_NullExpression_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getInExpressionParserRuleCall_6());
		}
		this_InExpression_10=ruleInExpression
		{
			$current = $this_InExpression_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getInPIDExpressionParserRuleCall_7());
		}
		this_InPIDExpression_11=ruleInPIDExpression
		{
			$current = $this_InPIDExpression_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getInPExpressionParserRuleCall_8());
		}
		this_InPExpression_12=ruleInPExpression
		{
			$current = $this_InPExpression_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getExistExpressionParserRuleCall_9());
		}
		this_ExistExpression_13=ruleExistExpression
		{
			$current = $this_ExistExpression_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getExistPIDParserRuleCall_10());
		}
		this_ExistPID_14=ruleExistPID
		{
			$current = $this_ExistPID_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getExistPParserRuleCall_11());
		}
		this_ExistP_15=ruleExistP
		{
			$current = $this_ExistP_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getGetIDExpressionParserRuleCall_12());
		}
		this_GetIDExpression_16=ruleGetIDExpression
		{
			$current = $this_GetIDExpression_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getHasNameExpressionParserRuleCall_13());
		}
		this_HasNameExpression_17=ruleHasNameExpression
		{
			$current = $this_HasNameExpression_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getHasIDParserRuleCall_14());
		}
		this_HasID_18=ruleHasID
		{
			$current = $this_HasID_18.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getHasIDINTParserRuleCall_15());
		}
		this_HasIDINT_19=ruleHasIDINT
		{
			$current = $this_HasIDINT_19.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getGetNameParserRuleCall_16());
		}
		this_GetName_20=ruleGetName
		{
			$current = $this_GetName_20.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGetIDExpression
entryRuleGetIDExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetIDExpressionRule()); }
	iv_ruleGetIDExpression=ruleGetIDExpression
	{ $current=$iv_ruleGetIDExpression.current; }
	EOF;

// Rule GetIDExpression
ruleGetIDExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='get_pid'
		{
			newLeafNode(otherlv_0, grammarAccess.getGetIDExpressionAccess().getGet_pidKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getGetIDExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_pN_2_0=RULE_CHAR_SEQUENCE
				{
					newLeafNode(lv_pN_2_0, grammarAccess.getGetIDExpressionAccess().getPNCHAR_SEQUENCETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGetIDExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"pN",
						lv_pN_2_0,
						"scheduling.Dsl.CHAR_SEQUENCE");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getGetIDExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEmptyExpression
entryRuleEmptyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyExpressionRule()); }
	iv_ruleEmptyExpression=ruleEmptyExpression
	{ $current=$iv_ruleEmptyExpression.current; }
	EOF;

// Rule EmptyExpression
ruleEmptyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEmptyExpressionAccess().getColSchedulerSetParserRuleCall_0_0());
				}
				lv_col_0_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEmptyExpressionRule());
					}
					set(
						$current,
						"col",
						lv_col_0_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getEmptyExpressionAccess().getFullStopKeyword_1());
		}
		otherlv_2='isEmpty'
		{
			newLeafNode(otherlv_2, grammarAccess.getEmptyExpressionAccess().getIsEmptyKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getEmptyExpressionAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getEmptyExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleFullExpression
entryRuleFullExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFullExpressionRule()); }
	iv_ruleFullExpression=ruleFullExpression
	{ $current=$iv_ruleFullExpression.current; }
	EOF;

// Rule FullExpression
ruleFullExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFullExpressionAccess().getColSchedulerSetParserRuleCall_0_0());
				}
				lv_col_0_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFullExpressionRule());
					}
					set(
						$current,
						"col",
						lv_col_0_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getFullExpressionAccess().getFullStopKeyword_1());
		}
		otherlv_2='isFull'
		{
			newLeafNode(otherlv_2, grammarAccess.getFullExpressionAccess().getIsFullKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getFullExpressionAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getFullExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleInExpression
entryRuleInExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInExpressionRule()); }
	iv_ruleInExpression=ruleInExpression
	{ $current=$iv_ruleInExpression.current; }
	EOF;

// Rule InExpression
ruleInExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInExpressionAccess().getColSchedulerSetParserRuleCall_0_0());
				}
				lv_col_0_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInExpressionRule());
					}
					set(
						$current,
						"col",
						lv_col_0_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getInExpressionAccess().getFullStopKeyword_1());
		}
		otherlv_2='containsProcess'
		{
			newLeafNode(otherlv_2, grammarAccess.getInExpressionAccess().getContainsProcessKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getInExpressionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_pN_4_0=RULE_CHAR_SEQUENCE
				{
					newLeafNode(lv_pN_4_0, grammarAccess.getInExpressionAccess().getPNCHAR_SEQUENCETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"pN",
						lv_pN_4_0,
						"scheduling.Dsl.CHAR_SEQUENCE");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getInExpressionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleInPIDExpression
entryRuleInPIDExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInPIDExpressionRule()); }
	iv_ruleInPIDExpression=ruleInPIDExpression
	{ $current=$iv_ruleInPIDExpression.current; }
	EOF;

// Rule InPIDExpression
ruleInPIDExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInPIDExpressionAccess().getColSchedulerSetParserRuleCall_0_0());
				}
				lv_col_0_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInPIDExpressionRule());
					}
					set(
						$current,
						"col",
						lv_col_0_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getInPIDExpressionAccess().getFullStopKeyword_1());
		}
		otherlv_2='containsProcess'
		{
			newLeafNode(otherlv_2, grammarAccess.getInPIDExpressionAccess().getContainsProcessKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getInPIDExpressionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_id_4_0=RULE_ID
				{
					newLeafNode(lv_id_4_0, grammarAccess.getInPIDExpressionAccess().getIdIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInPIDExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_4_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getInPIDExpressionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleInPExpression
entryRuleInPExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInPExpressionRule()); }
	iv_ruleInPExpression=ruleInPExpression
	{ $current=$iv_ruleInPExpression.current; }
	EOF;

// Rule InPExpression
ruleInPExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInPExpressionAccess().getColSchedulerSetParserRuleCall_0_0());
				}
				lv_col_0_0=ruleSchedulerSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInPExpressionRule());
					}
					set(
						$current,
						"col",
						lv_col_0_0,
						"scheduling.Dsl.SchedulerSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getInPExpressionAccess().getFullStopKeyword_1());
		}
		otherlv_2='containsProcess'
		{
			newLeafNode(otherlv_2, grammarAccess.getInPExpressionAccess().getContainsProcessKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getInPExpressionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_id_4_0=RULE_INT
				{
					newLeafNode(lv_id_4_0, grammarAccess.getInPExpressionAccess().getIdINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInPExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getInPExpressionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleExistExpression
entryRuleExistExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistExpressionRule()); }
	iv_ruleExistExpression=ruleExistExpression
	{ $current=$iv_ruleExistExpression.current; }
	EOF;

// Rule ExistExpression
ruleExistExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='exists'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistExpressionAccess().getExistsKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getExistExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_pN_2_0=RULE_CHAR_SEQUENCE
				{
					newLeafNode(lv_pN_2_0, grammarAccess.getExistExpressionAccess().getPNCHAR_SEQUENCETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"pN",
						lv_pN_2_0,
						"scheduling.Dsl.CHAR_SEQUENCE");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getExistExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleExistPID
entryRuleExistPID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistPIDRule()); }
	iv_ruleExistPID=ruleExistPID
	{ $current=$iv_ruleExistPID.current; }
	EOF;

// Rule ExistPID
ruleExistPID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='exists'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistPIDAccess().getExistsKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getExistPIDAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_id_2_0=RULE_ID
				{
					newLeafNode(lv_id_2_0, grammarAccess.getExistPIDAccess().getIdIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistPIDRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_2_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getExistPIDAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleExistP
entryRuleExistP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistPRule()); }
	iv_ruleExistP=ruleExistP
	{ $current=$iv_ruleExistP.current; }
	EOF;

// Rule ExistP
ruleExistP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='exists'
		{
			newLeafNode(otherlv_0, grammarAccess.getExistPAccess().getExistsKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getExistPAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_id_2_0=RULE_INT
				{
					newLeafNode(lv_id_2_0, grammarAccess.getExistPAccess().getIdINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExistPRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getExistPAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleNullExpression
entryRuleNullExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullExpressionRule()); }
	iv_ruleNullExpression=ruleNullExpression
	{ $current=$iv_ruleNullExpression.current; }
	EOF;

// Rule NullExpression
ruleNullExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNullExpressionAccess().getProcNameProcessParserRuleCall_0_0());
				}
				lv_procName_0_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNullExpressionRule());
					}
					set(
						$current,
						"procName",
						lv_procName_0_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getNullExpressionAccess().getFullStopKeyword_1());
		}
		otherlv_2='isNull'
		{
			newLeafNode(otherlv_2, grammarAccess.getNullExpressionAccess().getIsNullKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getNullExpressionAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getNullExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleHasNameExpression
entryRuleHasNameExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHasNameExpressionRule()); }
	iv_ruleHasNameExpression=ruleHasNameExpression
	{ $current=$iv_ruleHasNameExpression.current; }
	EOF;

// Rule HasNameExpression
ruleHasNameExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getHasNameExpressionAccess().getProcProcessParserRuleCall_0_0());
				}
				lv_proc_0_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHasNameExpressionRule());
					}
					set(
						$current,
						"proc",
						lv_proc_0_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getHasNameExpressionAccess().getFullStopKeyword_1());
		}
		otherlv_2='hasName'
		{
			newLeafNode(otherlv_2, grammarAccess.getHasNameExpressionAccess().getHasNameKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getHasNameExpressionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_pN_4_0=RULE_CHAR_SEQUENCE
				{
					newLeafNode(lv_pN_4_0, grammarAccess.getHasNameExpressionAccess().getPNCHAR_SEQUENCETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHasNameExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"pN",
						lv_pN_4_0,
						"scheduling.Dsl.CHAR_SEQUENCE");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getHasNameExpressionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleHasID
entryRuleHasID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHasIDRule()); }
	iv_ruleHasID=ruleHasID
	{ $current=$iv_ruleHasID.current; }
	EOF;

// Rule HasID
ruleHasID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getHasIDAccess().getProcProcessParserRuleCall_0_0());
				}
				lv_proc_0_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHasIDRule());
					}
					set(
						$current,
						"proc",
						lv_proc_0_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getHasIDAccess().getFullStopKeyword_1());
		}
		otherlv_2='hasID'
		{
			newLeafNode(otherlv_2, grammarAccess.getHasIDAccess().getHasIDKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getHasIDAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_id_4_0=RULE_ID
				{
					newLeafNode(lv_id_4_0, grammarAccess.getHasIDAccess().getIdIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHasIDRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_4_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getHasIDAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleHasIDINT
entryRuleHasIDINT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHasIDINTRule()); }
	iv_ruleHasIDINT=ruleHasIDINT
	{ $current=$iv_ruleHasIDINT.current; }
	EOF;

// Rule HasIDINT
ruleHasIDINT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getHasIDINTAccess().getProcProcessParserRuleCall_0_0());
				}
				lv_proc_0_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHasIDINTRule());
					}
					set(
						$current,
						"proc",
						lv_proc_0_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getHasIDINTAccess().getFullStopKeyword_1());
		}
		otherlv_2='hasID'
		{
			newLeafNode(otherlv_2, grammarAccess.getHasIDINTAccess().getHasIDKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getHasIDINTAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_id_4_0=RULE_INT
				{
					newLeafNode(lv_id_4_0, grammarAccess.getHasIDINTAccess().getIdINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHasIDINTRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getHasIDINTAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleGetName
entryRuleGetName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetNameRule()); }
	iv_ruleGetName=ruleGetName
	{ $current=$iv_ruleGetName.current; }
	EOF;

// Rule GetName
ruleGetName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGetNameAccess().getProcProcessParserRuleCall_0_0());
				}
				lv_proc_0_0=ruleProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGetNameRule());
					}
					set(
						$current,
						"proc",
						lv_proc_0_0,
						"scheduling.Dsl.Process");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getGetNameAccess().getFullStopKeyword_1());
		}
		otherlv_2='getName'
		{
			newLeafNode(otherlv_2, grammarAccess.getGetNameAccess().getGetNameKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getGetNameAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getGetNameAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getValueNumValueParserRuleCall_0_1_0());
					}
					lv_value_1_0=ruleNumValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"value",
							lv_value_1_0,
							"scheduling.Dsl.NumValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getCurentCoreAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0='current_core'
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicAccess().getValueCurrent_coreKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "value", lv_value_3_0, "current_core");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_5_1='true'
						{
							newLeafNode(lv_value_5_1, grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_1, null);
						}
						    |
						lv_value_5_2='false'
						{
							newLeafNode(lv_value_5_2, grammarAccess.getAtomicAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getStateIDAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_stateID_7_0='<StateID>'
					{
						newLeafNode(lv_stateID_7_0, grammarAccess.getAtomicAccess().getStateIDStateIDKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "stateID", lv_stateID_7_0, "<StateID>");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBranchIDAction_4_0(),
						$current);
				}
			)
			(
				(
					lv_branchID_9_0='<BranchID>'
					{
						newLeafNode(lv_branchID_9_0, grammarAccess.getAtomicAccess().getBranchIDBranchIDKeyword_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "branchID", lv_branchID_9_0, "<BranchID>");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getActionAction_5_0(),
						$current);
				}
			)
			(
				(
					lv_action_11_0='getAction()'
					{
						newLeafNode(lv_action_11_0, grammarAccess.getAtomicAccess().getActionGetActionKeyword_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "action", lv_action_11_0, "getAction()");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getStepAction_6_0(),
						$current);
				}
			)
			(
				(
					lv_step_13_0='getStep()'
					{
						newLeafNode(lv_step_13_0, grammarAccess.getAtomicAccess().getStepGetStepKeyword_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "step", lv_step_13_0, "getStep()");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getTotalStepAction_7_0(),
						$current);
				}
			)
			(
				(
					lv_totalstep_15_0='getTotalStep()'
					{
						newLeafNode(lv_totalstep_15_0, grammarAccess.getAtomicAccess().getTotalstepGetTotalStepKeyword_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "totalstep", lv_totalstep_15_0, "getTotalStep()");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getGetInstanceAction_8_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getProcNameProcessParserRuleCall_8_1_0());
					}
					lv_procName_17_0=ruleProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"procName",
							lv_procName_17_0,
							"scheduling.Dsl.Process");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_18='.'
			{
				newLeafNode(otherlv_18, grammarAccess.getAtomicAccess().getFullStopKeyword_8_2());
			}
			otherlv_19='getInstanceID'
			{
				newLeafNode(otherlv_19, grammarAccess.getAtomicAccess().getGetInstanceIDKeyword_8_3());
			}
			otherlv_20='('
			{
				newLeafNode(otherlv_20, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_8_4());
			}
			otherlv_21=')'
			{
				newLeafNode(otherlv_21, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_8_5());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getGetPIDAction_9_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getProcNameProcessParserRuleCall_9_1_0());
					}
					lv_procName_23_0=ruleProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"procName",
							lv_procName_23_0,
							"scheduling.Dsl.Process");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_24='.'
			{
				newLeafNode(otherlv_24, grammarAccess.getAtomicAccess().getFullStopKeyword_9_2());
			}
			otherlv_25='getPID'
			{
				newLeafNode(otherlv_25, grammarAccess.getAtomicAccess().getGetPIDKeyword_9_3());
			}
			otherlv_26='('
			{
				newLeafNode(otherlv_26, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_9_4());
			}
			otherlv_27=')'
			{
				newLeafNode(otherlv_27, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_9_5());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getInstanceIDAction_10_0(),
						$current);
				}
			)
			(
				(
					lv_instanceID_29_0='<InstanceID>'
					{
						newLeafNode(lv_instanceID_29_0, grammarAccess.getAtomicAccess().getInstanceIDInstanceIDKeyword_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "instanceID", lv_instanceID_29_0, "<InstanceID>");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getProcessIDAction_11_0(),
						$current);
				}
			)
			(
				(
					lv_pID_31_0='<PID>'
					{
						newLeafNode(lv_pID_31_0, grammarAccess.getAtomicAccess().getPIDPIDKeyword_11_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "pID", lv_pID_31_0, "<PID>");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getProcessNameAction_12_0(),
						$current);
				}
			)
			(
				(
					lv_pName_33_0='<PName>'
					{
						newLeafNode(lv_pName_33_0, grammarAccess.getAtomicAccess().getPNamePNameKeyword_12_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "pName", lv_pName_33_0, "<PName>");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBehaviorAction_13_0(),
						$current);
				}
			)
			(
				(
					lv_behavior_35_0='<actions>'
					{
						newLeafNode(lv_behavior_35_0, grammarAccess.getAtomicAccess().getBehaviorActionsKeyword_13_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "behavior", lv_behavior_35_0, "<actions>");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getContainsAction_14_0(),
						$current);
				}
			)
			(
				(
					lv_contains_37_0='<contains>'
					{
						newLeafNode(lv_contains_37_0, grammarAccess.getAtomicAccess().getContainsContainsKeyword_14_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed($current, "contains", lv_contains_37_0, "<contains>");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomicAccess().getVarQualifiedNamesParserRuleCall_15_0());
				}
				lv_var_38_0=ruleQualifiedNames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomicRule());
					}
					set(
						$current,
						"var",
						lv_var_38_0,
						"scheduling.Dsl.QualifiedNames");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomicAccess().getLeleListElementParserRuleCall_16_0());
				}
				lv_lele_39_0=ruleListElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomicRule());
					}
					set(
						$current,
						"lele",
						lv_lele_39_0,
						"scheduling.Dsl.ListElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_charseq_40_0=RULE_CHAR_SEQUENCE
				{
					newLeafNode(lv_charseq_40_0, grammarAccess.getAtomicAccess().getCharseqCHAR_SEQUENCETerminalRuleCall_17_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomicRule());
					}
					setWithLastConsumed(
						$current,
						"charseq",
						lv_charseq_40_0,
						"scheduling.Dsl.CHAR_SEQUENCE");
				}
			)
		)
		    |
		(
			(
				lv_string_41_0=RULE_STRING
				{
					newLeafNode(lv_string_41_0, grammarAccess.getAtomicAccess().getStringSTRINGTerminalRuleCall_18_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomicRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_41_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomicAccess().getSysvarSysVarParserRuleCall_19_0());
				}
				lv_sysvar_42_0=ruleSysVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomicRule());
					}
					set(
						$current,
						"sysvar",
						lv_sysvar_42_0,
						"scheduling.Dsl.SysVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSysVar
entryRuleSysVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSysVarRule()); }
	iv_ruleSysVar=ruleSysVar
	{ $current=$iv_ruleSysVar.current; }
	EOF;

// Rule SysVar
ruleSysVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sys'
		{
			newLeafNode(otherlv_0, grammarAccess.getSysVarAccess().getSysKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSysVarAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_vname_2_0=RULE_ID
				{
					newLeafNode(lv_vname_2_0, grammarAccess.getSysVarAccess().getVnameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysVarRule());
					}
					setWithLastConsumed(
						$current,
						"vname",
						lv_vname_2_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSysVarAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleQualifiedNames
entryRuleQualifiedNames returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNamesRule()); }
	iv_ruleQualifiedNames=ruleQualifiedNames
	{ $current=$iv_ruleQualifiedNames.current; }
	EOF;

// Rule QualifiedNames
ruleQualifiedNames returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getQualifiedNamesAccess().getQualifiedNamesAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getQualifiedNamesAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQualifiedNamesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		(
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getQualifiedNamesAccess().getFullStopKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQualifiedNamesAccess().getPropProcessPropertyNameParserRuleCall_2_1_0());
					}
					lv_prop_3_0=ruleProcessPropertyName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQualifiedNamesRule());
						}
						set(
							$current,
							"prop",
							lv_prop_3_0,
							"scheduling.Dsl.ProcessPropertyName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleListElement
entryRuleListElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListElementRule()); }
	iv_ruleListElement=ruleListElement
	{ $current=$iv_ruleListElement.current; }
	EOF;

// Rule ListElement
ruleListElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getListElementAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"scheduling.Dsl.ID");
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getListElementAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					lv_id_2_0=RULE_ID
					{
						newLeafNode(lv_id_2_0, grammarAccess.getListElementAccess().getIdIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_2_0,
							"scheduling.Dsl.ID");
					}
				)
			)
			    |
			(
				(
					lv_num_3_0=RULE_INT
					{
						newLeafNode(lv_num_3_0, grammarAccess.getListElementAccess().getNumINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListElementRule());
						}
						setWithLastConsumed(
							$current,
							"num",
							lv_num_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getListElementAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Rule TypeName
ruleTypeName returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='byte'
			{
				$current = grammarAccess.getTypeNameAccess().getByteEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeNameAccess().getByteEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='int'
			{
				$current = grammarAccess.getTypeNameAccess().getIntEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeNameAccess().getIntEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='bool'
			{
				$current = grammarAccess.getTypeNameAccess().getBoolEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeNameAccess().getBoolEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule VariableType
ruleVariableType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='int_temp'
			{
				$current = grammarAccess.getVariableTypeAccess().getTempEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVariableTypeAccess().getTempEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='byte'
			{
				$current = grammarAccess.getVariableTypeAccess().getByteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVariableTypeAccess().getByteEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='int'
			{
				$current = grammarAccess.getVariableTypeAccess().getIntEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVariableTypeAccess().getIntEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='time'
			{
				$current = grammarAccess.getVariableTypeAccess().getTimeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVariableTypeAccess().getTimeEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='bool'
			{
				$current = grammarAccess.getVariableTypeAccess().getBoolEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getVariableTypeAccess().getBoolEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='clock'
			{
				$current = grammarAccess.getVariableTypeAccess().getClockEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getVariableTypeAccess().getClockEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='process'
			{
				$current = grammarAccess.getVariableTypeAccess().getProcessEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getVariableTypeAccess().getProcessEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule OrderType
ruleOrderType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='greater'
			{
				$current = grammarAccess.getOrderTypeAccess().getGreaterEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOrderTypeAccess().getGreaterEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='less'
			{
				$current = grammarAccess.getOrderTypeAccess().getLessEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOrderTypeAccess().getLessEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='equal'
			{
				$current = grammarAccess.getOrderTypeAccess().getEqualEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOrderTypeAccess().getEqualEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='fifo'
			{
				$current = grammarAccess.getOrderTypeAccess().getFifoEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOrderTypeAccess().getFifoEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='lifo'
			{
				$current = grammarAccess.getOrderTypeAccess().getLifoEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOrderTypeAccess().getLifoEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule OperationType
ruleOperationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='fifo'
			{
				$current = grammarAccess.getOperationTypeAccess().getQueueEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperationTypeAccess().getQueueEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='lifo'
			{
				$current = grammarAccess.getOperationTypeAccess().getStackEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperationTypeAccess().getStackEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule GenOption
ruleGenOption returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ND_behavior'
			{
				$current = grammarAccess.getGenOptionAccess().getNdbehaviorEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getGenOptionAccess().getNdbehaviorEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Searching'
			{
				$current = grammarAccess.getGenOptionAccess().getSearchingEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getGenOptionAccess().getSearchingEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Error'
			{
				$current = grammarAccess.getGenOptionAccess().getErrorEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getGenOptionAccess().getErrorEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Property'
			{
				$current = grammarAccess.getGenOptionAccess().getPropertyEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getGenOptionAccess().getPropertyEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='All'
			{
				$current = grammarAccess.getGenOptionAccess().getAllEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getGenOptionAccess().getAllEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule ActionName
ruleActionName returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<select_process>'
			{
				$current = grammarAccess.getActionNameAccess().getAselectEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getActionNameAccess().getAselectEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<new_process>'
			{
				$current = grammarAccess.getActionNameAccess().getAnewEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getActionNameAccess().getAnewEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='<clock>'
			{
				$current = grammarAccess.getActionNameAccess().getAclockEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getActionNameAccess().getAclockEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='<pre_take>'
			{
				$current = grammarAccess.getActionNameAccess().getApretakeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getActionNameAccess().getApretakeEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='<post_take>'
			{
				$current = grammarAccess.getActionNameAccess().getAposttakeEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getActionNameAccess().getAposttakeEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='<scheduling_action>'
			{
				$current = grammarAccess.getActionNameAccess().getAschedulingactionEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getActionNameAccess().getAschedulingactionEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='<process_action>'
			{
				$current = grammarAccess.getActionNameAccess().getAprocessactionEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getActionNameAccess().getAprocessactionEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule EventName
ruleEventName returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='select_process'
			{
				$current = grammarAccess.getEventNameAccess().getSelectEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEventNameAccess().getSelectEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='new_process'
			{
				$current = grammarAccess.getEventNameAccess().getNewEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEventNameAccess().getNewEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='clock'
			{
				$current = grammarAccess.getEventNameAccess().getClockEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEventNameAccess().getClockEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='pre_take'
			{
				$current = grammarAccess.getEventNameAccess().getPretakeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEventNameAccess().getPretakeEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='post_take'
			{
				$current = grammarAccess.getEventNameAccess().getPosttakeEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEventNameAccess().getPosttakeEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ML_CODE : '{*' ( options {greedy=false;} : . )*'*}';

RULE_CHAR_SEQUENCE : '"' ( options {greedy=false;} : . )*'"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ( options {greedy=false;} : . )*'\n';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ANY_OTHER : .;
