/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import scheduling.dsl.DslPackage;
import scheduling.dsl.Expression;
import scheduling.dsl.PrintLogStatement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Print Log Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.PrintLogStatementImpl#getSt <em>St</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PrintLogStatementImpl extends StatementImpl implements PrintLogStatement
{
  /**
   * The cached value of the '{@link #getSt() <em>St</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSt()
   * @generated
   * @ordered
   */
  protected Expression st;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PrintLogStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getPrintLogStatement();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getSt()
  {
    return st;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSt(Expression newSt, NotificationChain msgs)
  {
    Expression oldSt = st;
    st = newSt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.PRINT_LOG_STATEMENT__ST, oldSt, newSt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSt(Expression newSt)
  {
    if (newSt != st)
    {
      NotificationChain msgs = null;
      if (st != null)
        msgs = ((InternalEObject)st).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.PRINT_LOG_STATEMENT__ST, null, msgs);
      if (newSt != null)
        msgs = ((InternalEObject)newSt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.PRINT_LOG_STATEMENT__ST, null, msgs);
      msgs = basicSetSt(newSt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.PRINT_LOG_STATEMENT__ST, newSt, newSt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.PRINT_LOG_STATEMENT__ST:
        return basicSetSt(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.PRINT_LOG_STATEMENT__ST:
        return getSt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.PRINT_LOG_STATEMENT__ST:
        setSt((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.PRINT_LOG_STATEMENT__ST:
        setSt((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.PRINT_LOG_STATEMENT__ST:
        return st != null;
    }
    return super.eIsSet(featureID);
  }

} //PrintLogStatementImpl
