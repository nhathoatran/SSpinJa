/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import scheduling.dsl.DslPackage;
import scheduling.dsl.ELABEL;
import scheduling.dsl.ENAME;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ENAME</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.ENAMEImpl#getElabel <em>Elabel</em>}</li>
 *   <li>{@link scheduling.dsl.impl.ENAMEImpl#getScheventname <em>Scheventname</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ENAMEImpl extends MinimalEObjectImpl.Container implements ENAME
{
  /**
   * The cached value of the '{@link #getElabel() <em>Elabel</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElabel()
   * @generated
   * @ordered
   */
  protected ELABEL elabel;

  /**
   * The default value of the '{@link #getScheventname() <em>Scheventname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScheventname()
   * @generated
   * @ordered
   */
  protected static final scheduling.dsl.String SCHEVENTNAME_EDEFAULT = scheduling.dsl.String.TEMP;

  /**
   * The cached value of the '{@link #getScheventname() <em>Scheventname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScheventname()
   * @generated
   * @ordered
   */
  protected scheduling.dsl.String scheventname = SCHEVENTNAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ENAMEImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getENAME();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ELABEL getElabel()
  {
    return elabel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElabel(ELABEL newElabel, NotificationChain msgs)
  {
    ELABEL oldElabel = elabel;
    elabel = newElabel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.ENAME__ELABEL, oldElabel, newElabel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElabel(ELABEL newElabel)
  {
    if (newElabel != elabel)
    {
      NotificationChain msgs = null;
      if (elabel != null)
        msgs = ((InternalEObject)elabel).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.ENAME__ELABEL, null, msgs);
      if (newElabel != null)
        msgs = ((InternalEObject)newElabel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.ENAME__ELABEL, null, msgs);
      msgs = basicSetElabel(newElabel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.ENAME__ELABEL, newElabel, newElabel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public scheduling.dsl.String getScheventname()
  {
    return scheventname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setScheventname(scheduling.dsl.String newScheventname)
  {
    scheduling.dsl.String oldScheventname = scheventname;
    scheventname = newScheventname == null ? SCHEVENTNAME_EDEFAULT : newScheventname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.ENAME__SCHEVENTNAME, oldScheventname, scheventname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.ENAME__ELABEL:
        return basicSetElabel(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.ENAME__ELABEL:
        return getElabel();
      case DslPackage.ENAME__SCHEVENTNAME:
        return getScheventname();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.ENAME__ELABEL:
        setElabel((ELABEL)newValue);
        return;
      case DslPackage.ENAME__SCHEVENTNAME:
        setScheventname((scheduling.dsl.String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.ENAME__ELABEL:
        setElabel((ELABEL)null);
        return;
      case DslPackage.ENAME__SCHEVENTNAME:
        setScheventname(SCHEVENTNAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.ENAME__ELABEL:
        return elabel != null;
      case DslPackage.ENAME__SCHEVENTNAME:
        return scheventname != SCHEVENTNAME_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (scheventname: ");
    result.append(scheventname);
    result.append(')');
    return result.toString();
  }

} //ENAMEImpl
