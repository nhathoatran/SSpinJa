/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import java.lang.String;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import scheduling.dsl.DslPackage;
import scheduling.dsl.Generate;
import scheduling.dsl.HandlerDef;
import scheduling.dsl.InterfaceDef;
import scheduling.dsl.ParameterList;
import scheduling.dsl.SchedulerDataDef;
import scheduling.dsl.SchedulerDef;
import scheduling.dsl.SchedulerInit;
import scheduling.dsl.VarDef;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Scheduler Def</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.SchedulerDefImpl#getName <em>Name</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SchedulerDefImpl#getParameterlist <em>Parameterlist</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SchedulerDefImpl#getParent <em>Parent</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SchedulerDefImpl#getGen <em>Gen</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SchedulerDefImpl#getSvar <em>Svar</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SchedulerDefImpl#getSchedulerdata <em>Schedulerdata</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SchedulerDefImpl#getSchedulerinit <em>Schedulerinit</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SchedulerDefImpl#getHandler <em>Handler</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SchedulerDefImpl#getInterface <em>Interface</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SchedulerDefImpl extends MinimalEObjectImpl.Container implements SchedulerDef
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParameterlist() <em>Parameterlist</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameterlist()
   * @generated
   * @ordered
   */
  protected ParameterList parameterlist;

  /**
   * The default value of the '{@link #getParent() <em>Parent</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParent()
   * @generated
   * @ordered
   */
  protected static final String PARENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getParent() <em>Parent</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParent()
   * @generated
   * @ordered
   */
  protected String parent = PARENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getGen() <em>Gen</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGen()
   * @generated
   * @ordered
   */
  protected Generate gen;

  /**
   * The cached value of the '{@link #getSvar() <em>Svar</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSvar()
   * @generated
   * @ordered
   */
  protected VarDef svar;

  /**
   * The cached value of the '{@link #getSchedulerdata() <em>Schedulerdata</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSchedulerdata()
   * @generated
   * @ordered
   */
  protected SchedulerDataDef schedulerdata;

  /**
   * The cached value of the '{@link #getSchedulerinit() <em>Schedulerinit</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSchedulerinit()
   * @generated
   * @ordered
   */
  protected SchedulerInit schedulerinit;

  /**
   * The cached value of the '{@link #getHandler() <em>Handler</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHandler()
   * @generated
   * @ordered
   */
  protected HandlerDef handler;

  /**
   * The cached value of the '{@link #getInterface() <em>Interface</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterface()
   * @generated
   * @ordered
   */
  protected InterfaceDef interface_;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SchedulerDefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getSchedulerDef();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParameterList getParameterlist()
  {
    return parameterlist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameterlist(ParameterList newParameterlist, NotificationChain msgs)
  {
    ParameterList oldParameterlist = parameterlist;
    parameterlist = newParameterlist;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__PARAMETERLIST, oldParameterlist, newParameterlist);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParameterlist(ParameterList newParameterlist)
  {
    if (newParameterlist != parameterlist)
    {
      NotificationChain msgs = null;
      if (parameterlist != null)
        msgs = ((InternalEObject)parameterlist).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__PARAMETERLIST, null, msgs);
      if (newParameterlist != null)
        msgs = ((InternalEObject)newParameterlist).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__PARAMETERLIST, null, msgs);
      msgs = basicSetParameterlist(newParameterlist, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__PARAMETERLIST, newParameterlist, newParameterlist));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getParent()
  {
    return parent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParent(String newParent)
  {
    String oldParent = parent;
    parent = newParent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__PARENT, oldParent, parent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Generate getGen()
  {
    return gen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGen(Generate newGen, NotificationChain msgs)
  {
    Generate oldGen = gen;
    gen = newGen;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__GEN, oldGen, newGen);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGen(Generate newGen)
  {
    if (newGen != gen)
    {
      NotificationChain msgs = null;
      if (gen != null)
        msgs = ((InternalEObject)gen).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__GEN, null, msgs);
      if (newGen != null)
        msgs = ((InternalEObject)newGen).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__GEN, null, msgs);
      msgs = basicSetGen(newGen, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__GEN, newGen, newGen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarDef getSvar()
  {
    return svar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSvar(VarDef newSvar, NotificationChain msgs)
  {
    VarDef oldSvar = svar;
    svar = newSvar;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__SVAR, oldSvar, newSvar);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSvar(VarDef newSvar)
  {
    if (newSvar != svar)
    {
      NotificationChain msgs = null;
      if (svar != null)
        msgs = ((InternalEObject)svar).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__SVAR, null, msgs);
      if (newSvar != null)
        msgs = ((InternalEObject)newSvar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__SVAR, null, msgs);
      msgs = basicSetSvar(newSvar, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__SVAR, newSvar, newSvar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SchedulerDataDef getSchedulerdata()
  {
    return schedulerdata;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSchedulerdata(SchedulerDataDef newSchedulerdata, NotificationChain msgs)
  {
    SchedulerDataDef oldSchedulerdata = schedulerdata;
    schedulerdata = newSchedulerdata;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__SCHEDULERDATA, oldSchedulerdata, newSchedulerdata);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSchedulerdata(SchedulerDataDef newSchedulerdata)
  {
    if (newSchedulerdata != schedulerdata)
    {
      NotificationChain msgs = null;
      if (schedulerdata != null)
        msgs = ((InternalEObject)schedulerdata).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__SCHEDULERDATA, null, msgs);
      if (newSchedulerdata != null)
        msgs = ((InternalEObject)newSchedulerdata).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__SCHEDULERDATA, null, msgs);
      msgs = basicSetSchedulerdata(newSchedulerdata, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__SCHEDULERDATA, newSchedulerdata, newSchedulerdata));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SchedulerInit getSchedulerinit()
  {
    return schedulerinit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSchedulerinit(SchedulerInit newSchedulerinit, NotificationChain msgs)
  {
    SchedulerInit oldSchedulerinit = schedulerinit;
    schedulerinit = newSchedulerinit;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__SCHEDULERINIT, oldSchedulerinit, newSchedulerinit);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSchedulerinit(SchedulerInit newSchedulerinit)
  {
    if (newSchedulerinit != schedulerinit)
    {
      NotificationChain msgs = null;
      if (schedulerinit != null)
        msgs = ((InternalEObject)schedulerinit).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__SCHEDULERINIT, null, msgs);
      if (newSchedulerinit != null)
        msgs = ((InternalEObject)newSchedulerinit).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__SCHEDULERINIT, null, msgs);
      msgs = basicSetSchedulerinit(newSchedulerinit, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__SCHEDULERINIT, newSchedulerinit, newSchedulerinit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public HandlerDef getHandler()
  {
    return handler;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHandler(HandlerDef newHandler, NotificationChain msgs)
  {
    HandlerDef oldHandler = handler;
    handler = newHandler;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__HANDLER, oldHandler, newHandler);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHandler(HandlerDef newHandler)
  {
    if (newHandler != handler)
    {
      NotificationChain msgs = null;
      if (handler != null)
        msgs = ((InternalEObject)handler).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__HANDLER, null, msgs);
      if (newHandler != null)
        msgs = ((InternalEObject)newHandler).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__HANDLER, null, msgs);
      msgs = basicSetHandler(newHandler, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__HANDLER, newHandler, newHandler));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InterfaceDef getInterface()
  {
    return interface_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInterface(InterfaceDef newInterface, NotificationChain msgs)
  {
    InterfaceDef oldInterface = interface_;
    interface_ = newInterface;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__INTERFACE, oldInterface, newInterface);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInterface(InterfaceDef newInterface)
  {
    if (newInterface != interface_)
    {
      NotificationChain msgs = null;
      if (interface_ != null)
        msgs = ((InternalEObject)interface_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__INTERFACE, null, msgs);
      if (newInterface != null)
        msgs = ((InternalEObject)newInterface).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.SCHEDULER_DEF__INTERFACE, null, msgs);
      msgs = basicSetInterface(newInterface, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SCHEDULER_DEF__INTERFACE, newInterface, newInterface));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.SCHEDULER_DEF__PARAMETERLIST:
        return basicSetParameterlist(null, msgs);
      case DslPackage.SCHEDULER_DEF__GEN:
        return basicSetGen(null, msgs);
      case DslPackage.SCHEDULER_DEF__SVAR:
        return basicSetSvar(null, msgs);
      case DslPackage.SCHEDULER_DEF__SCHEDULERDATA:
        return basicSetSchedulerdata(null, msgs);
      case DslPackage.SCHEDULER_DEF__SCHEDULERINIT:
        return basicSetSchedulerinit(null, msgs);
      case DslPackage.SCHEDULER_DEF__HANDLER:
        return basicSetHandler(null, msgs);
      case DslPackage.SCHEDULER_DEF__INTERFACE:
        return basicSetInterface(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.SCHEDULER_DEF__NAME:
        return getName();
      case DslPackage.SCHEDULER_DEF__PARAMETERLIST:
        return getParameterlist();
      case DslPackage.SCHEDULER_DEF__PARENT:
        return getParent();
      case DslPackage.SCHEDULER_DEF__GEN:
        return getGen();
      case DslPackage.SCHEDULER_DEF__SVAR:
        return getSvar();
      case DslPackage.SCHEDULER_DEF__SCHEDULERDATA:
        return getSchedulerdata();
      case DslPackage.SCHEDULER_DEF__SCHEDULERINIT:
        return getSchedulerinit();
      case DslPackage.SCHEDULER_DEF__HANDLER:
        return getHandler();
      case DslPackage.SCHEDULER_DEF__INTERFACE:
        return getInterface();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.SCHEDULER_DEF__NAME:
        setName((String)newValue);
        return;
      case DslPackage.SCHEDULER_DEF__PARAMETERLIST:
        setParameterlist((ParameterList)newValue);
        return;
      case DslPackage.SCHEDULER_DEF__PARENT:
        setParent((String)newValue);
        return;
      case DslPackage.SCHEDULER_DEF__GEN:
        setGen((Generate)newValue);
        return;
      case DslPackage.SCHEDULER_DEF__SVAR:
        setSvar((VarDef)newValue);
        return;
      case DslPackage.SCHEDULER_DEF__SCHEDULERDATA:
        setSchedulerdata((SchedulerDataDef)newValue);
        return;
      case DslPackage.SCHEDULER_DEF__SCHEDULERINIT:
        setSchedulerinit((SchedulerInit)newValue);
        return;
      case DslPackage.SCHEDULER_DEF__HANDLER:
        setHandler((HandlerDef)newValue);
        return;
      case DslPackage.SCHEDULER_DEF__INTERFACE:
        setInterface((InterfaceDef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.SCHEDULER_DEF__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DslPackage.SCHEDULER_DEF__PARAMETERLIST:
        setParameterlist((ParameterList)null);
        return;
      case DslPackage.SCHEDULER_DEF__PARENT:
        setParent(PARENT_EDEFAULT);
        return;
      case DslPackage.SCHEDULER_DEF__GEN:
        setGen((Generate)null);
        return;
      case DslPackage.SCHEDULER_DEF__SVAR:
        setSvar((VarDef)null);
        return;
      case DslPackage.SCHEDULER_DEF__SCHEDULERDATA:
        setSchedulerdata((SchedulerDataDef)null);
        return;
      case DslPackage.SCHEDULER_DEF__SCHEDULERINIT:
        setSchedulerinit((SchedulerInit)null);
        return;
      case DslPackage.SCHEDULER_DEF__HANDLER:
        setHandler((HandlerDef)null);
        return;
      case DslPackage.SCHEDULER_DEF__INTERFACE:
        setInterface((InterfaceDef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.SCHEDULER_DEF__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DslPackage.SCHEDULER_DEF__PARAMETERLIST:
        return parameterlist != null;
      case DslPackage.SCHEDULER_DEF__PARENT:
        return PARENT_EDEFAULT == null ? parent != null : !PARENT_EDEFAULT.equals(parent);
      case DslPackage.SCHEDULER_DEF__GEN:
        return gen != null;
      case DslPackage.SCHEDULER_DEF__SVAR:
        return svar != null;
      case DslPackage.SCHEDULER_DEF__SCHEDULERDATA:
        return schedulerdata != null;
      case DslPackage.SCHEDULER_DEF__SCHEDULERINIT:
        return schedulerinit != null;
      case DslPackage.SCHEDULER_DEF__HANDLER:
        return handler != null;
      case DslPackage.SCHEDULER_DEF__INTERFACE:
        return interface_ != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", parent: ");
    result.append(parent);
    result.append(')');
    return result.toString();
  }

} //SchedulerDefImpl
