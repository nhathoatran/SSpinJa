/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import scheduling.dsl.DslPackage;
import scheduling.dsl.EventTemplate;
import scheduling.dsl.Expression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Event Template</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.EventTemplateImpl#getPrefix <em>Prefix</em>}</li>
 *   <li>{@link scheduling.dsl.impl.EventTemplateImpl#getEvent <em>Event</em>}</li>
 *   <li>{@link scheduling.dsl.impl.EventTemplateImpl#getPostfix <em>Postfix</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EventTemplateImpl extends MinimalEObjectImpl.Container implements EventTemplate
{
  /**
   * The cached value of the '{@link #getPrefix() <em>Prefix</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrefix()
   * @generated
   * @ordered
   */
  protected Expression prefix;

  /**
   * The default value of the '{@link #getEvent() <em>Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvent()
   * @generated
   * @ordered
   */
  protected static final scheduling.dsl.String EVENT_EDEFAULT = scheduling.dsl.String.TEMP;

  /**
   * The cached value of the '{@link #getEvent() <em>Event</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvent()
   * @generated
   * @ordered
   */
  protected scheduling.dsl.String event = EVENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getPostfix() <em>Postfix</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPostfix()
   * @generated
   * @ordered
   */
  protected Expression postfix;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EventTemplateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getEventTemplate();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getPrefix()
  {
    return prefix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrefix(Expression newPrefix, NotificationChain msgs)
  {
    Expression oldPrefix = prefix;
    prefix = newPrefix;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.EVENT_TEMPLATE__PREFIX, oldPrefix, newPrefix);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrefix(Expression newPrefix)
  {
    if (newPrefix != prefix)
    {
      NotificationChain msgs = null;
      if (prefix != null)
        msgs = ((InternalEObject)prefix).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.EVENT_TEMPLATE__PREFIX, null, msgs);
      if (newPrefix != null)
        msgs = ((InternalEObject)newPrefix).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.EVENT_TEMPLATE__PREFIX, null, msgs);
      msgs = basicSetPrefix(newPrefix, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.EVENT_TEMPLATE__PREFIX, newPrefix, newPrefix));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public scheduling.dsl.String getEvent()
  {
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEvent(scheduling.dsl.String newEvent)
  {
    scheduling.dsl.String oldEvent = event;
    event = newEvent == null ? EVENT_EDEFAULT : newEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.EVENT_TEMPLATE__EVENT, oldEvent, event));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getPostfix()
  {
    return postfix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPostfix(Expression newPostfix, NotificationChain msgs)
  {
    Expression oldPostfix = postfix;
    postfix = newPostfix;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.EVENT_TEMPLATE__POSTFIX, oldPostfix, newPostfix);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPostfix(Expression newPostfix)
  {
    if (newPostfix != postfix)
    {
      NotificationChain msgs = null;
      if (postfix != null)
        msgs = ((InternalEObject)postfix).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.EVENT_TEMPLATE__POSTFIX, null, msgs);
      if (newPostfix != null)
        msgs = ((InternalEObject)newPostfix).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.EVENT_TEMPLATE__POSTFIX, null, msgs);
      msgs = basicSetPostfix(newPostfix, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.EVENT_TEMPLATE__POSTFIX, newPostfix, newPostfix));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.EVENT_TEMPLATE__PREFIX:
        return basicSetPrefix(null, msgs);
      case DslPackage.EVENT_TEMPLATE__POSTFIX:
        return basicSetPostfix(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.EVENT_TEMPLATE__PREFIX:
        return getPrefix();
      case DslPackage.EVENT_TEMPLATE__EVENT:
        return getEvent();
      case DslPackage.EVENT_TEMPLATE__POSTFIX:
        return getPostfix();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.EVENT_TEMPLATE__PREFIX:
        setPrefix((Expression)newValue);
        return;
      case DslPackage.EVENT_TEMPLATE__EVENT:
        setEvent((scheduling.dsl.String)newValue);
        return;
      case DslPackage.EVENT_TEMPLATE__POSTFIX:
        setPostfix((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.EVENT_TEMPLATE__PREFIX:
        setPrefix((Expression)null);
        return;
      case DslPackage.EVENT_TEMPLATE__EVENT:
        setEvent(EVENT_EDEFAULT);
        return;
      case DslPackage.EVENT_TEMPLATE__POSTFIX:
        setPostfix((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.EVENT_TEMPLATE__PREFIX:
        return prefix != null;
      case DslPackage.EVENT_TEMPLATE__EVENT:
        return event != EVENT_EDEFAULT;
      case DslPackage.EVENT_TEMPLATE__POSTFIX:
        return postfix != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (event: ");
    result.append(event);
    result.append(')');
    return result.toString();
  }

} //EventTemplateImpl
