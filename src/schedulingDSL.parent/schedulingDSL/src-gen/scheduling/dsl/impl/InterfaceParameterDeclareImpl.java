/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import java.lang.String;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import scheduling.dsl.DslPackage;
import scheduling.dsl.InterfaceParameterDeclare;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Interface Parameter Declare</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.InterfaceParameterDeclareImpl#getType <em>Type</em>}</li>
 *   <li>{@link scheduling.dsl.impl.InterfaceParameterDeclareImpl#getParaname <em>Paraname</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InterfaceParameterDeclareImpl extends MinimalEObjectImpl.Container implements InterfaceParameterDeclare
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final scheduling.dsl.String TYPE_EDEFAULT = scheduling.dsl.String.TEMP;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected scheduling.dsl.String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getParaname() <em>Paraname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParaname()
   * @generated
   * @ordered
   */
  protected static final String PARANAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getParaname() <em>Paraname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParaname()
   * @generated
   * @ordered
   */
  protected String paraname = PARANAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InterfaceParameterDeclareImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getInterfaceParameterDeclare();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public scheduling.dsl.String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(scheduling.dsl.String newType)
  {
    scheduling.dsl.String oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.INTERFACE_PARAMETER_DECLARE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getParaname()
  {
    return paraname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParaname(String newParaname)
  {
    String oldParaname = paraname;
    paraname = newParaname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.INTERFACE_PARAMETER_DECLARE__PARANAME, oldParaname, paraname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.INTERFACE_PARAMETER_DECLARE__TYPE:
        return getType();
      case DslPackage.INTERFACE_PARAMETER_DECLARE__PARANAME:
        return getParaname();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.INTERFACE_PARAMETER_DECLARE__TYPE:
        setType((scheduling.dsl.String)newValue);
        return;
      case DslPackage.INTERFACE_PARAMETER_DECLARE__PARANAME:
        setParaname((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.INTERFACE_PARAMETER_DECLARE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case DslPackage.INTERFACE_PARAMETER_DECLARE__PARANAME:
        setParaname(PARANAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.INTERFACE_PARAMETER_DECLARE__TYPE:
        return type != TYPE_EDEFAULT;
      case DslPackage.INTERFACE_PARAMETER_DECLARE__PARANAME:
        return PARANAME_EDEFAULT == null ? paraname != null : !PARANAME_EDEFAULT.equals(paraname);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", paraname: ");
    result.append(paraname);
    result.append(')');
    return result.toString();
  }

} //InterfaceParameterDeclareImpl
