/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import java.lang.String;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import scheduling.dsl.BoolValue;
import scheduling.dsl.ConstDec;
import scheduling.dsl.DslPackage;
import scheduling.dsl.NumValue;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Const Dec</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.ConstDecImpl#getName <em>Name</em>}</li>
 *   <li>{@link scheduling.dsl.impl.ConstDecImpl#getBvalue <em>Bvalue</em>}</li>
 *   <li>{@link scheduling.dsl.impl.ConstDecImpl#getIvalue <em>Ivalue</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConstDecImpl extends MinimalEObjectImpl.Container implements ConstDec
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getBvalue() <em>Bvalue</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBvalue()
   * @generated
   * @ordered
   */
  protected BoolValue bvalue;

  /**
   * The cached value of the '{@link #getIvalue() <em>Ivalue</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIvalue()
   * @generated
   * @ordered
   */
  protected NumValue ivalue;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConstDecImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getConstDec();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.CONST_DEC__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BoolValue getBvalue()
  {
    return bvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBvalue(BoolValue newBvalue, NotificationChain msgs)
  {
    BoolValue oldBvalue = bvalue;
    bvalue = newBvalue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.CONST_DEC__BVALUE, oldBvalue, newBvalue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBvalue(BoolValue newBvalue)
  {
    if (newBvalue != bvalue)
    {
      NotificationChain msgs = null;
      if (bvalue != null)
        msgs = ((InternalEObject)bvalue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.CONST_DEC__BVALUE, null, msgs);
      if (newBvalue != null)
        msgs = ((InternalEObject)newBvalue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.CONST_DEC__BVALUE, null, msgs);
      msgs = basicSetBvalue(newBvalue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.CONST_DEC__BVALUE, newBvalue, newBvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NumValue getIvalue()
  {
    return ivalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIvalue(NumValue newIvalue, NotificationChain msgs)
  {
    NumValue oldIvalue = ivalue;
    ivalue = newIvalue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.CONST_DEC__IVALUE, oldIvalue, newIvalue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIvalue(NumValue newIvalue)
  {
    if (newIvalue != ivalue)
    {
      NotificationChain msgs = null;
      if (ivalue != null)
        msgs = ((InternalEObject)ivalue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.CONST_DEC__IVALUE, null, msgs);
      if (newIvalue != null)
        msgs = ((InternalEObject)newIvalue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.CONST_DEC__IVALUE, null, msgs);
      msgs = basicSetIvalue(newIvalue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.CONST_DEC__IVALUE, newIvalue, newIvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.CONST_DEC__BVALUE:
        return basicSetBvalue(null, msgs);
      case DslPackage.CONST_DEC__IVALUE:
        return basicSetIvalue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.CONST_DEC__NAME:
        return getName();
      case DslPackage.CONST_DEC__BVALUE:
        return getBvalue();
      case DslPackage.CONST_DEC__IVALUE:
        return getIvalue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.CONST_DEC__NAME:
        setName((String)newValue);
        return;
      case DslPackage.CONST_DEC__BVALUE:
        setBvalue((BoolValue)newValue);
        return;
      case DslPackage.CONST_DEC__IVALUE:
        setIvalue((NumValue)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.CONST_DEC__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DslPackage.CONST_DEC__BVALUE:
        setBvalue((BoolValue)null);
        return;
      case DslPackage.CONST_DEC__IVALUE:
        setIvalue((NumValue)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.CONST_DEC__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DslPackage.CONST_DEC__BVALUE:
        return bvalue != null;
      case DslPackage.CONST_DEC__IVALUE:
        return ivalue != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ConstDecImpl
