/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import scheduling.dsl.DefBehaviorProc;
import scheduling.dsl.DslPackage;
import scheduling.dsl.ProcType;
import scheduling.dsl.ProcessBehaviors;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Def Behavior Proc</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.DefBehaviorProcImpl#getProcessbehaviors <em>Processbehaviors</em>}</li>
 *   <li>{@link scheduling.dsl.impl.DefBehaviorProcImpl#getProctype <em>Proctype</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DefBehaviorProcImpl extends MinimalEObjectImpl.Container implements DefBehaviorProc
{
  /**
   * The cached value of the '{@link #getProcessbehaviors() <em>Processbehaviors</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProcessbehaviors()
   * @generated
   * @ordered
   */
  protected ProcessBehaviors processbehaviors;

  /**
   * The cached value of the '{@link #getProctype() <em>Proctype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProctype()
   * @generated
   * @ordered
   */
  protected ProcType proctype;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DefBehaviorProcImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getDefBehaviorProc();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProcessBehaviors getProcessbehaviors()
  {
    return processbehaviors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProcessbehaviors(ProcessBehaviors newProcessbehaviors, NotificationChain msgs)
  {
    ProcessBehaviors oldProcessbehaviors = processbehaviors;
    processbehaviors = newProcessbehaviors;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.DEF_BEHAVIOR_PROC__PROCESSBEHAVIORS, oldProcessbehaviors, newProcessbehaviors);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProcessbehaviors(ProcessBehaviors newProcessbehaviors)
  {
    if (newProcessbehaviors != processbehaviors)
    {
      NotificationChain msgs = null;
      if (processbehaviors != null)
        msgs = ((InternalEObject)processbehaviors).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.DEF_BEHAVIOR_PROC__PROCESSBEHAVIORS, null, msgs);
      if (newProcessbehaviors != null)
        msgs = ((InternalEObject)newProcessbehaviors).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.DEF_BEHAVIOR_PROC__PROCESSBEHAVIORS, null, msgs);
      msgs = basicSetProcessbehaviors(newProcessbehaviors, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.DEF_BEHAVIOR_PROC__PROCESSBEHAVIORS, newProcessbehaviors, newProcessbehaviors));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProcType getProctype()
  {
    return proctype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProctype(ProcType newProctype, NotificationChain msgs)
  {
    ProcType oldProctype = proctype;
    proctype = newProctype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.DEF_BEHAVIOR_PROC__PROCTYPE, oldProctype, newProctype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProctype(ProcType newProctype)
  {
    if (newProctype != proctype)
    {
      NotificationChain msgs = null;
      if (proctype != null)
        msgs = ((InternalEObject)proctype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.DEF_BEHAVIOR_PROC__PROCTYPE, null, msgs);
      if (newProctype != null)
        msgs = ((InternalEObject)newProctype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.DEF_BEHAVIOR_PROC__PROCTYPE, null, msgs);
      msgs = basicSetProctype(newProctype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.DEF_BEHAVIOR_PROC__PROCTYPE, newProctype, newProctype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.DEF_BEHAVIOR_PROC__PROCESSBEHAVIORS:
        return basicSetProcessbehaviors(null, msgs);
      case DslPackage.DEF_BEHAVIOR_PROC__PROCTYPE:
        return basicSetProctype(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.DEF_BEHAVIOR_PROC__PROCESSBEHAVIORS:
        return getProcessbehaviors();
      case DslPackage.DEF_BEHAVIOR_PROC__PROCTYPE:
        return getProctype();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.DEF_BEHAVIOR_PROC__PROCESSBEHAVIORS:
        setProcessbehaviors((ProcessBehaviors)newValue);
        return;
      case DslPackage.DEF_BEHAVIOR_PROC__PROCTYPE:
        setProctype((ProcType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.DEF_BEHAVIOR_PROC__PROCESSBEHAVIORS:
        setProcessbehaviors((ProcessBehaviors)null);
        return;
      case DslPackage.DEF_BEHAVIOR_PROC__PROCTYPE:
        setProctype((ProcType)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.DEF_BEHAVIOR_PROC__PROCESSBEHAVIORS:
        return processbehaviors != null;
      case DslPackage.DEF_BEHAVIOR_PROC__PROCTYPE:
        return proctype != null;
    }
    return super.eIsSet(featureID);
  }

} //DefBehaviorProcImpl
