/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import scheduling.dsl.DslPackage;
import scheduling.dsl.VarDefinition;
import scheduling.dsl.VarSingleDef;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Var Single Def</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.VarSingleDefImpl#getVardef <em>Vardef</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VarSingleDefImpl extends MinimalEObjectImpl.Container implements VarSingleDef
{
  /**
   * The cached value of the '{@link #getVardef() <em>Vardef</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVardef()
   * @generated
   * @ordered
   */
  protected VarDefinition vardef;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VarSingleDefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getVarSingleDef();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarDefinition getVardef()
  {
    return vardef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVardef(VarDefinition newVardef, NotificationChain msgs)
  {
    VarDefinition oldVardef = vardef;
    vardef = newVardef;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.VAR_SINGLE_DEF__VARDEF, oldVardef, newVardef);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVardef(VarDefinition newVardef)
  {
    if (newVardef != vardef)
    {
      NotificationChain msgs = null;
      if (vardef != null)
        msgs = ((InternalEObject)vardef).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.VAR_SINGLE_DEF__VARDEF, null, msgs);
      if (newVardef != null)
        msgs = ((InternalEObject)newVardef).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.VAR_SINGLE_DEF__VARDEF, null, msgs);
      msgs = basicSetVardef(newVardef, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.VAR_SINGLE_DEF__VARDEF, newVardef, newVardef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.VAR_SINGLE_DEF__VARDEF:
        return basicSetVardef(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.VAR_SINGLE_DEF__VARDEF:
        return getVardef();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.VAR_SINGLE_DEF__VARDEF:
        setVardef((VarDefinition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.VAR_SINGLE_DEF__VARDEF:
        setVardef((VarDefinition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.VAR_SINGLE_DEF__VARDEF:
        return vardef != null;
    }
    return super.eIsSet(featureID);
  }

} //VarSingleDefImpl
