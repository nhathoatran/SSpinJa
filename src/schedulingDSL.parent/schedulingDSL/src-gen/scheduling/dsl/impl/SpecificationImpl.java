/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import scheduling.dsl.DeclareEvent;
import scheduling.dsl.DeclareList;
import scheduling.dsl.Define;
import scheduling.dsl.DslPackage;
import scheduling.dsl.Specification;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Specification</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.SpecificationImpl#getDecl_lst <em>Decl lst</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SpecificationImpl#getDefine <em>Define</em>}</li>
 *   <li>{@link scheduling.dsl.impl.SpecificationImpl#getEvent <em>Event</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SpecificationImpl extends MinimalEObjectImpl.Container implements Specification
{
  /**
   * The cached value of the '{@link #getDecl_lst() <em>Decl lst</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecl_lst()
   * @generated
   * @ordered
   */
  protected DeclareList decl_lst;

  /**
   * The cached value of the '{@link #getDefine() <em>Define</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefine()
   * @generated
   * @ordered
   */
  protected Define define;

  /**
   * The cached value of the '{@link #getEvent() <em>Event</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvent()
   * @generated
   * @ordered
   */
  protected EList<DeclareEvent> event;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SpecificationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getSpecification();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeclareList getDecl_lst()
  {
    return decl_lst;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDecl_lst(DeclareList newDecl_lst, NotificationChain msgs)
  {
    DeclareList oldDecl_lst = decl_lst;
    decl_lst = newDecl_lst;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.SPECIFICATION__DECL_LST, oldDecl_lst, newDecl_lst);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDecl_lst(DeclareList newDecl_lst)
  {
    if (newDecl_lst != decl_lst)
    {
      NotificationChain msgs = null;
      if (decl_lst != null)
        msgs = ((InternalEObject)decl_lst).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.SPECIFICATION__DECL_LST, null, msgs);
      if (newDecl_lst != null)
        msgs = ((InternalEObject)newDecl_lst).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.SPECIFICATION__DECL_LST, null, msgs);
      msgs = basicSetDecl_lst(newDecl_lst, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SPECIFICATION__DECL_LST, newDecl_lst, newDecl_lst));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Define getDefine()
  {
    return define;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDefine(Define newDefine, NotificationChain msgs)
  {
    Define oldDefine = define;
    define = newDefine;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.SPECIFICATION__DEFINE, oldDefine, newDefine);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefine(Define newDefine)
  {
    if (newDefine != define)
    {
      NotificationChain msgs = null;
      if (define != null)
        msgs = ((InternalEObject)define).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.SPECIFICATION__DEFINE, null, msgs);
      if (newDefine != null)
        msgs = ((InternalEObject)newDefine).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.SPECIFICATION__DEFINE, null, msgs);
      msgs = basicSetDefine(newDefine, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SPECIFICATION__DEFINE, newDefine, newDefine));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DeclareEvent> getEvent()
  {
    if (event == null)
    {
      event = new EObjectContainmentEList<DeclareEvent>(DeclareEvent.class, this, DslPackage.SPECIFICATION__EVENT);
    }
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.SPECIFICATION__DECL_LST:
        return basicSetDecl_lst(null, msgs);
      case DslPackage.SPECIFICATION__DEFINE:
        return basicSetDefine(null, msgs);
      case DslPackage.SPECIFICATION__EVENT:
        return ((InternalEList<?>)getEvent()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.SPECIFICATION__DECL_LST:
        return getDecl_lst();
      case DslPackage.SPECIFICATION__DEFINE:
        return getDefine();
      case DslPackage.SPECIFICATION__EVENT:
        return getEvent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.SPECIFICATION__DECL_LST:
        setDecl_lst((DeclareList)newValue);
        return;
      case DslPackage.SPECIFICATION__DEFINE:
        setDefine((Define)newValue);
        return;
      case DslPackage.SPECIFICATION__EVENT:
        getEvent().clear();
        getEvent().addAll((Collection<? extends DeclareEvent>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.SPECIFICATION__DECL_LST:
        setDecl_lst((DeclareList)null);
        return;
      case DslPackage.SPECIFICATION__DEFINE:
        setDefine((Define)null);
        return;
      case DslPackage.SPECIFICATION__EVENT:
        getEvent().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.SPECIFICATION__DECL_LST:
        return decl_lst != null;
      case DslPackage.SPECIFICATION__DEFINE:
        return define != null;
      case DslPackage.SPECIFICATION__EVENT:
        return event != null && !event.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //SpecificationImpl
