/**
 * generated by Xtext 2.10.0
 */
package scheduling.dsl.impl;

import java.lang.String;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import scheduling.dsl.DslPackage;
import scheduling.dsl.TotalStep;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Total Step</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link scheduling.dsl.impl.TotalStepImpl#getTotalstep <em>Totalstep</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TotalStepImpl extends AtomicImpl implements TotalStep
{
  /**
   * The default value of the '{@link #getTotalstep() <em>Totalstep</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTotalstep()
   * @generated
   * @ordered
   */
  protected static final String TOTALSTEP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTotalstep() <em>Totalstep</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTotalstep()
   * @generated
   * @ordered
   */
  protected String totalstep = TOTALSTEP_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TotalStepImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.eINSTANCE.getTotalStep();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTotalstep()
  {
    return totalstep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTotalstep(String newTotalstep)
  {
    String oldTotalstep = totalstep;
    totalstep = newTotalstep;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.TOTAL_STEP__TOTALSTEP, oldTotalstep, totalstep));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.TOTAL_STEP__TOTALSTEP:
        return getTotalstep();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.TOTAL_STEP__TOTALSTEP:
        setTotalstep((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.TOTAL_STEP__TOTALSTEP:
        setTotalstep(TOTALSTEP_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.TOTAL_STEP__TOTALSTEP:
        return TOTALSTEP_EDEFAULT == null ? totalstep != null : !TOTALSTEP_EDEFAULT.equals(totalstep);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (totalstep: ");
    result.append(totalstep);
    result.append(')');
    return result.toString();
  }

} //TotalStepImpl
